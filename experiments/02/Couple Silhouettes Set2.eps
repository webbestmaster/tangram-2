%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Administrator) ()
%%Title: (couples2.eps)
%%CreationDate: 7/2/2010 1:48 AM
%%Canvassize: 16383
%%BoundingBox: -151 874 1674 2480
%%HiResBoundingBox: -150.6328 874.2168 1673.5488 2479.7642
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKProcessColor: 0 0 0 0.15 (K=15)
%%+ 0 0 0 0.57 (K=57)
%%+ 0.697627 0.675227 0.638575 0.739559 (R=35 G=31 B=32)
%%+ 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 761.8672 1726.7744 761.8672 1726.7744
%AI3_TileBox: 348.958 1439.2451 1168.0781 2015.2456
%AI3_DocumentPreview: Header
%AI5_ArtSize: 1824.1816 1706.0576
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: 26.1172 1240.0244 16 1582 1081 26 0 0 1289 109 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
3 Bn
%AI5_BeginGradient: (Unnamed gradient 14)
(Unnamed gradient 14) 0 2 Bd
[
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFC
FCFCFCFBFBFBFAFAFAF9F9F9F8F8F7F7F6F6F5F5F4F4F3F2F2F1F0F0EFEEEDEDECEBEAE9E8E7E6E5
E4E3E2E0DFDEDDDBDAD9
>
0 %_Br
[
0 0 0 0.15 1 50 100 %_BS
%_0 0 0 0.15 (K=15) 0 0 5 50 100 Bs
0 0 0 0 1 80.6061 0 %_BS
%_0 0 0 0.15 (K=15) 1 0 5 80.6061 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 15)
(Unnamed gradient 15) 0 2 Bd
[
<
FFFFFFFFFEFEFEFEFDFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F7F7F6F6F6F5F5F4F4F3F3F2F2F1F1F0
EFEFEEEEEDEDECECEBEAEAE9E9E8E7E7E6E6E5E4E4E3E2E2E1E1E0DFDFDEDDDDDCDBDBDAD9D8D8D7
D6D6D5D4D4D3D2D1D1D0CFCECECDCCCBCBCAC9C8C8C7C6C5C5C4C3C2C1C1C0BFBEBEBDBCBBBAB9B9
B8B7B6B5B5B4B3B2B1B0AFAFAEADACABAAA9A9A8A7A6A5A4A3A3A2A1A09F9E9D9C9B9A9A99989796
9594939291908F8F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7A79787776757473727170
6F6E
>
0 %_Br
[
0 0 0 0.57 1 50 100 %_BS
%_0 0 0 0.57 (K=57) 0 0 5 50 100 Bs
0 0 0 0 1 60.6061 0 %_BS
%_0 0 0 0.57 (K=57) 1 0 5 60.6061 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 16)
(Unnamed gradient 16) 0 2 Bd
[
<
FFFFFFFFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFCFCFCFCFBFBFBFBFAFAFAF9F9F9F9F8F8F8F7F7F7
F6F6F6F5F5F4F4F4F3F3F3F2F2F1F1F0F0F0EFEFEEEEEDEDECECECEBEBEAEAE9E9E8E8E7E7E6E6E5
E5E4E3E3E2E2E1E1E0E0DFDEDEDDDDDCDCDBDADAD9D9D8D7D7D6D6D5D4D4D3D2D2D1D0D0CFCECECD
CCCCCBCACAC9C8C8C7C6C5C5C4C3C3C2C1C0C0BFBEBDBDBCBBBABAB9B8B7B7B6B5B4B4B3B2B1B0B0
AFAEADACACABAAA9A8A7A7A6A5A4A3A2A2A1A09F9E9D9C9C9B9A99989796959594939291908F8E8D
8C8B8B8A898887868584838281807F7E7D7C7B7A79797877767574737271706F6E
>
0 %_Br
[
0 0 0 0.57 1 50 100 %_BS
%_0 0 0 0.57 (K=57) 0 0 5 50 100 Bs
0 0 0 0 1 64.8485 0 %_BS
%_0 0 0 0.57 (K=57) 1 0 5 64.8485 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 k
(R=255 G=255 B=255)
Pc
0.697627 0.675227 0.638575 0.739559 (R=35 G=31 B=32) 0 0 Xk
(R=35 G=31 B=32)
Pc
0.75021 0.679683 0.670222 0.90164 k
(R=0 G=0 B=0)
Pc
0 0 0 0.15 (K=15) 0 0 Xk
(K=15)
Pc
0 0 0 0.57 (K=57) 0 0 Xk
(K=57)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(Layer 1) Ln
0 A
u
u
1 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
981.3486 1114.6875 m
981.3486 1088.7598 836.7314 1067.7412 658.3359 1067.7412 c
479.9409 1067.7412 335.3228 1088.7598 335.3228 1114.6875 c
335.3228 1140.6152 479.9409 1161.6338 658.3359 1161.6338 c
836.7314 1161.6338 981.3486 1140.6152 981.3486 1114.6875 c
Bb
1 (Unnamed gradient 16) 660.02 1066.4521 92 96.5283 1 0 0 1 0 0 Bg
-3.3688 96.4695 651.0452 22.7351 334.4971 1055.085 Xm
-282.6004 8092.5981 651.0452 22.7351 617.0977 -7037.5127 Bc
-3.3688 96.4695 651.0452 22.7351 334.4971 1055.085 Bm
-282.6004 8092.5981 651.0452 22.7351 331.1284 1151.5547 Bc
f
0 BB
*u
0 Ap
1 D
0.75021 0.679683 0.670222 0.90164 k
980.752 1151.0068 m
977.7227 1155.3477 971.9023 1156.7773 966.8818 1156.3076 c
962.752 1155.9268 958.6426 1156.5479 954.6016 1157.2676 c
949.4219 1158.1875 944.1318 1157.5273 939.0117 1156.5771 c
933.3926 1155.4678 927.6523 1155.167 921.9521 1154.7568 c
915.8018 1154.1973 910.0723 1157.1074 903.9727 1157.1875 c
896.8018 1157.4775 888.2119 1159.3271 882.4414 1153.8076 C
880.6914 1152.5176 880.4316 1149.2275 877.8818 1149.3271 c
872.9619 1149.4375 867.0322 1149.0381 863.8418 1153.5576 C
869.7227 1161.1572 872.9414 1170.6768 872.292 1180.3271 c
871.4727 1192.8877 869.6719 1205.8271 863.6123 1217.0381 c
860.2822 1223.8975 856.9414 1230.7979 852.7314 1237.1572 c
847.292 1245.0576 838.8623 1249.9775 832.082 1256.5273 c
827.4727 1260.7881 826.8418 1267.458 826.8818 1273.3574 c
826.7822 1284.127 829.7725 1294.6475 829.4219 1305.417 c
829.1719 1315.6172 833.4814 1325.1973 833.6621 1335.3369 C
834.2314 1342.3174 836.6426 1348.9971 838.5918 1355.6768 C
841.9023 1362.4873 844.8926 1370.1973 842.6123 1377.8271 C
841.5117 1384.7979 837.9023 1391.417 831.8516 1395.2568 c
827.002 1398.7773 820.7021 1397.917 815.3516 1400.0771 c
810.3125 1401.917 805.3018 1403.8174 800.332 1405.7881 c
795.002 1407.7676 790.5518 1411.3877 785.5918 1414.0674 c
785.2559 1414.2441 784.9297 1414.4346 784.6074 1414.6279 C
784.1045 1415.3848 783.498 1416.2852 782.8691 1417.2207 C
785.1572 1415.417 787.2549 1413.8477 787.2461 1413.8574 C
787.2393 1413.8604 786.0068 1415.3418 784.5234 1417.1729 C
786.1387 1416.0654 787.2891 1415.2578 787.2461 1415.1904 C
787.3008 1415.2354 785.2939 1417.3389 Y
784.2637 1418.4053 782.9512 1419.7393 781.6719 1421.0479 C
782.0889 1420.9756 782.499 1420.9229 782.9014 1420.8887 C
785.6523 1419.6055 787.9277 1418.5566 787.9121 1418.5234 C
787.9287 1418.5459 786.7051 1419.4326 785.0078 1420.6533 C
788.708 1419.5254 791.2676 1419.9834 791.2461 1419.8574 C
791.2725 1419.9727 788.8965 1419.7295 785.6045 1420.8848 C
786.9932 1420.999 788.1455 1421.2676 788.9111 1421.4941 C
789.54 1421.3154 789.9141 1421.208 789.9121 1421.1904 C
789.9219 1421.2021 789.6348 1421.3359 789.1367 1421.5635 C
789.7031 1421.7422 789.9961 1421.8779 789.9121 1421.8574 C
789.9834 1421.8604 789.6367 1421.7432 789.0205 1421.6162 C
788.748 1421.7393 788.4189 1421.8877 788.0439 1422.0576 C
788.3857 1421.9209 788.5889 1421.8486 788.5791 1421.8574 C
788.6035 1421.8232 786.4492 1422.8096 783.5977 1424.7549 C
784.752 1424.5693 785.709 1424.5029 786.3525 1424.4912 c
790.0713 1424.2715 792.7715 1425.1338 792.5791 1425.1904 C
792.8027 1425.0557 786.8984 1423.8457 781.1699 1426.542 C
781.1406 1426.5645 781.1113 1426.5889 781.083 1426.6113 C
786.9785 1424.4502 792.5967 1426.8721 793.2041 1427.167 C
792.7852 1426.998 789.9268 1426.0645 786.4258 1426.3096 C
786.0859 1426.5557 785.6563 1426.8896 785.1689 1427.2842 C
788.6895 1427.123 791.3086 1427.9209 791.2461 1427.8574 C
791.291 1427.9014 788.5576 1427.4395 785.1475 1428.0176 C
785.5781 1428.0479 785.9961 1428.0908 786.3975 1428.1475 C
787.8799 1427.9014 789.2617 1427.835 790.4531 1427.8662 C
790.5254 1427.8477 790.5742 1427.8408 790.5791 1427.8574 C
790.5713 1427.8486 790.5449 1427.8535 790.5068 1427.8682 C
793.0684 1427.9404 794.7363 1428.4492 794.5791 1428.5234 C
794.7109 1428.417 792.7119 1428.002 789.8545 1428.2314 C
789.6406 1428.3643 789.3857 1428.5283 789.0957 1428.7197 C
789.7939 1428.9248 790.377 1429.1377 790.834 1429.3271 C
793.5801 1429.6787 795.3779 1430.4854 795.2461 1430.5234 C
795.335 1430.4648 793.9707 1430.0078 791.877 1429.8213 C
791.9199 1429.8486 791.9326 1429.8623 791.9121 1429.8574 C
791.9287 1429.8564 791.9102 1429.8428 791.8711 1429.8203 C
791.6035 1429.7969 791.3223 1429.7803 791.0322 1429.7666 C
792.4814 1430.123 793.334 1430.5088 793.2461 1430.5234 C
793.3477 1430.4756 791.6191 1429.9189 789.0547 1429.7773 C
788.8301 1429.79 788.6074 1429.7979 788.375 1429.8184 C
790.918 1430.2432 792.5635 1430.9951 792.5684 1431.1641 C
793.002 1431.1787 793.252 1431.1963 793.2461 1431.1904 C
793.25 1431.1982 792.5078 1431.2588 791.3564 1431.4541 C
791.5781 1431.5186 791.7949 1431.5918 792.0039 1431.6748 c
792.3145 1431.8037 792.5977 1431.9404 792.8711 1432.0811 C
794.4063 1432.626 795.2197 1433.2725 795.2461 1433.1904 C
795.2314 1433.251 794.7012 1432.9277 793.7607 1432.5938 C
794.0977 1432.8105 794.3965 1433.0303 794.6641 1433.248 C
795.8428 1433.208 796.5801 1433.209 796.5791 1433.1904 C
796.585 1433.2061 795.9648 1433.3037 794.957 1433.4951 C
795.165 1433.6777 795.3525 1433.8564 795.5156 1434.0234 C
797.709 1434.5078 799.3291 1434.9941 799.2461 1435.1904 C
799.2383 1435.0283 798.2871 1434.916 796.8926 1434.8604 C
799.2705 1435.6318 800.5488 1436.6143 800.5791 1436.5234 C
800.5527 1436.6172 799.041 1435.624 796.3975 1435.04 C
796.4404 1435.0928 796.4736 1435.1299 796.502 1435.1563 C
796.4707 1435.1318 796.4229 1435.0869 796.3721 1435.0342 C
795.999 1434.9521 795.6035 1434.8838 795.1855 1434.8223 C
794.959 1434.8213 794.7266 1434.8193 794.4902 1434.8203 C
795.2676 1435.1309 795.9434 1435.4531 796.4854 1435.7354 C
796.5137 1435.7402 796.5391 1435.7451 796.5664 1435.751 C
797.0078 1435.793 797.2549 1435.8311 797.2461 1435.8574 C
797.2422 1435.8428 797.167 1435.8389 797.0361 1435.8428 C
798.7813 1436.1973 799.9131 1436.5518 799.9121 1436.5234 C
799.917 1436.5459 798.9922 1436.415 797.5615 1436.3281 C
797.7861 1436.46 797.9121 1436.5361 797.9121 1436.5234 C
797.9121 1436.5361 797.6816 1436.4482 797.2813 1436.3125 C
796.6816 1436.2803 796.0059 1436.2588 795.2773 1436.2588 C
797.8223 1436.8135 799.4219 1437.7051 799.2461 1437.8574 C
799.502 1437.4873 792.4004 1434.876 785.543 1438.1533 C
791.4854 1437.7715 796.0977 1439.8018 795.9121 1439.8574 C
795.9785 1439.8164 795.1094 1439.4912 793.6445 1439.2051 C
793.5137 1439.1992 793.3359 1439.1885 793.1172 1439.1729 C
793.1914 1439.1631 793.2607 1439.1553 793.3262 1439.1475 C
790.751 1438.6826 786.5801 1438.3896 782.2793 1439.7705 C
782.2109 1439.8076 781.9678 1439.9688 781.9395 1439.9941 c
781.9102 1440.0215 784.6875 1439.4141 786.1934 1439.2949 c
789.0518 1438.8896 791.8076 1439.083 793.1172 1439.1729 C
792.1152 1439.3066 790.2793 1439.7295 788.2539 1440.2871 C
790.0762 1440.6729 791.2676 1441.2246 791.2461 1441.1904 C
791.2627 1441.2178 789.0127 1440.6387 786.2441 1440.8682 C
784.1309 1441.5088 782.0508 1442.2363 780.6934 1442.8955 C
781.75 1442.6504 782.8613 1442.4941 783.9863 1442.5029 C
788.916 1442.0928 793.2715 1443.9189 793.2461 1443.8574 C
793.2617 1443.8975 789.6426 1443.042 785.6484 1443.626 C
785.9668 1443.665 786.2852 1443.71 786.5996 1443.7686 C
790.2344 1444.1514 793.2236 1446.0264 793.2461 1445.8574 C
793.2061 1446.0107 789.959 1444.833 786.5195 1445.1816 C
785.7695 1445.2002 785.0313 1445.2734 784.3291 1445.376 C
787.1602 1445.7344 789.9883 1446.3135 789.9121 1446.5234 C
789.8877 1446.374 788.6104 1446.4316 786.9648 1446.6025 C
788.7236 1447.2207 789.9063 1447.8945 789.9121 1447.8574 C
789.9141 1447.9014 787.5811 1447.2002 784.8916 1447.1563 C
784.9131 1447.1982 784.9385 1447.2324 784.96 1447.2744 C
784.9102 1447.2324 784.8623 1447.1963 784.8135 1447.1543 C
784.4307 1447.1494 784.042 1447.1592 783.6523 1447.1855 c
782.5703 1447.2119 781.5576 1447.4053 780.6611 1447.6514 C
780.7715 1447.6611 780.8818 1447.6689 780.9922 1447.6836 C
784.0605 1447.8701 786.583 1449.2344 786.5791 1449.1904 C
786.584 1449.2061 785.916 1449.0586 784.915 1448.9648 C
789.2178 1450.4541 792.543 1452.5947 792.5791 1452.5234 C
792.5771 1452.6084 788.0615 1450.5859 783.2158 1449.8955 C
782.5752 1449.7617 781.9531 1449.6924 781.3564 1449.6729 C
783.0918 1450.1709 784.8398 1450.9297 786.5791 1451.8574 C
782.9678 1449.9307 777.1914 1450.4092 773.9941 1452.8896 c
769.7754 1456.1641 768.5654 1460.8838 766.1387 1465.4053 c
765.7637 1466.1357 765.3662 1466.8594 764.9453 1467.5732 c
763.9971 1469.3965 763.0254 1470.915 761.9922 1471.9063 C
758.0293 1476.9541 752.748 1481.0127 746.3223 1482.6182 C
743.9082 1483.5752 741.4082 1484.292 738.8926 1484.7373 c
729.5156 1486.0977 720.3926 1481.9297 713.1621 1476.1719 C
711.0957 1475.2412 709.1113 1474.1729 707.4248 1472.9561 c
704.666 1470.9668 700.3535 1467.9863 698.1387 1464.6797 C
694.9141 1461.002 693.0107 1456.9912 692.8301 1456.2617 c
692.668 1455.6924 692.5781 1455.1514 692.541 1454.6602 C
692.5107 1454.5928 692.4746 1454.5342 692.4453 1454.4658 C
691.7285 1453.332 689.3232 1444.2813 690.8613 1435.7471 C
691.8242 1427.0088 697.126 1420.3135 697.2461 1420.5234 C
697.085 1420.3506 692.4697 1427.417 692.2695 1435.9004 C
692.1641 1437.0615 692.1348 1438.2158 692.1543 1439.3486 C
692.1582 1439.3311 692.1602 1439.3145 692.1641 1439.2959 c
693.0508 1433.5723 695.2979 1428.5283 695.2451 1428.5234 C
695.2871 1428.5234 694.123 1432.4922 693.7061 1437.1934 C
695.1982 1431.1016 698.623 1426.4912 698.5791 1426.5234 C
698.5859 1426.5205 698.3311 1426.9688 697.9551 1427.7451 C
699.0713 1425.749 699.9414 1424.5225 699.9121 1424.5234 C
699.9629 1424.5264 696.748 1430.1895 695.6143 1436.7734 C
695.7793 1436.4131 695.9512 1436.0537 696.1348 1435.7021 c
696.3477 1435.2383 696.5723 1434.7881 696.7998 1434.3438 C
697.6143 1431.4297 698.7197 1428.5977 700.9922 1426.4971 c
705.4697 1422.626 705.8066 1417.5508 705.2988 1412.1055 c
705.1523 1410.5244 703.3818 1406.7158 704.8555 1405.709 c
706.749 1404.415 709.5664 1407.4297 711.5859 1405.2559 c
713.2109 1403.502 710.958 1400.377 714.5371 1400.5127 C
714.0898 1400.4951 714.5664 1398.3252 714.7646 1398.0811 c
715.7402 1396.877 716.0107 1397.9248 717.1035 1397.7207 c
719.3125 1397.3076 720.3174 1395.5332 720.9043 1393.3955 c
721.584 1390.9229 722.3916 1388.46 725.042 1387.4316 c
729.7275 1385.6162 735.3418 1393.0635 739.002 1395.2725 c
741.1816 1396.5898 744.5635 1397.6748 747.0176 1396.4482 c
749.3779 1395.2686 750.375 1392.0166 751.0518 1389.6172 C
745.9922 1385.8877 740.292 1383.0381 734.252 1381.3076 c
729.2725 1379.7676 724.042 1381.0273 718.9414 1380.7373 c
709.7314 1380.6875 700.8818 1377.8574 691.9521 1375.9873 C
688.5322 1377.6875 687.2822 1381.7979 685.3125 1384.8574 C
683.042 1389.4375 678.2314 1393.1768 672.9121 1392.5771 C
667.5322 1392.377 663.4619 1388.3369 658.4121 1387.0273 C
661.2422 1392.458 665.9922 1396.6768 670.4521 1400.8076 c
672.6221 1402.8672 674.2822 1405.5381 674.7021 1408.5479 c
674.7568 1408.915 674.8379 1409.2754 674.9102 1409.6377 C
675.0703 1409.8896 675.1816 1410.0732 675.207 1410.1377 c
675.2822 1410.3213 675.2539 1410.5313 675.1504 1410.7373 C
675.1611 1410.7783 675.1729 1410.8193 675.1836 1410.8613 C
676.1035 1413.0234 677.373 1416.252 677.4717 1417.0811 C
677.7314 1417.835 677.9902 1418.6465 678.21 1419.415 C
678.2344 1418.2959 678.2441 1417.5264 678.2451 1417.5234 C
678.2324 1417.5088 679.2344 1421.0615 679.9063 1424.1084 C
679.9277 1423.9697 679.9346 1423.8721 679.9121 1423.8574 C
679.9863 1423.7939 680.1504 1424.6895 680.2686 1425.8975 C
680.4795 1427.0752 680.5723 1427.9893 680.4268 1428.2842 C
680.4229 1428.3359 680.4102 1428.3838 680.4004 1428.4336 C
680.4023 1428.8086 680.3926 1429.1768 680.3691 1429.5264 C
680.5273 1429.1396 680.6113 1428.8838 680.5781 1428.8574 C
680.7363 1428.8105 680.3604 1432.499 679.7148 1435.3174 C
680.5137 1434.2314 681.0596 1433.3418 680.9121 1433.1904 C
681.2168 1433.2139 680.6494 1435.2236 679.8662 1437.3135 C
679.9043 1437.248 679.9219 1437.2041 679.9121 1437.1904 C
680.1143 1437.21 678.1572 1441.8271 676.6943 1444.3691 C
677.9922 1443.3174 679.0107 1442.3574 678.9121 1442.1904 C
679.1924 1442.2646 677.625 1444.9482 675.9697 1447.1377 C
676.7617 1446.6787 677.2852 1446.3135 677.2461 1446.1904 C
677.584 1446.3799 673.8047 1450.2627 671.4707 1451.9668 C
672.6768 1451.6191 673.5898 1451.3057 673.5781 1451.1904 C
673.7969 1451.3711 669.2236 1454.6631 667.1865 1455.6592 C
668.9053 1455.4365 670.5674 1455.0898 670.5781 1454.8574 C
670.7568 1455.0088 669.3975 1455.9609 667.8271 1456.8662 C
667.8809 1456.8633 667.9111 1456.8604 667.9121 1456.8574 C
667.916 1456.8623 667.7813 1456.9248 667.5596 1457.0205 C
666.0303 1457.8828 664.3867 1458.6455 663.7793 1458.5732 C
662.3047 1459.1563 660.9258 1459.6719 660.5234 1459.7432 C
660.335 1459.8428 660.1475 1459.9434 659.958 1460.041 C
662.6152 1460.4795 666.4932 1460.6045 666.5781 1460.1904 C
666.7461 1460.4639 664.7002 1461.1465 662.4219 1461.6494 C
661.6211 1462.0352 657.623 1462.9248 655.3887 1463.0195 C
657.0859 1463.4482 658.8145 1463.7266 658.9121 1463.5234 C
659.082 1463.7998 655.6455 1464.5225 653.2051 1464.6123 C
653.9385 1464.8555 654.4951 1464.9756 654.5781 1464.8574 C
654.7344 1465.1768 651.6211 1465.4561 649.3828 1465.249 C
650.3496 1465.8301 651.1719 1466.2646 651.2461 1466.1904 C
651.2939 1466.3623 648.5898 1466.2041 646.5801 1465.8525 C
646.8398 1466.5811 647.1172 1467.1865 647.2461 1467.1904 C
647.2334 1467.4141 645.5791 1466.4521 644.4395 1465.5029 C
644.2793 1466.1885 644.168 1466.8037 644.2461 1466.8574 C
644.1709 1467.001 642.2266 1464.3896 642.1191 1464.3887 C
642.3281 1464.5439 640.7471 1466.9893 640.9121 1467.1904 C
640.8135 1467.3203 640.2627 1466.1865 639.9395 1465.1689 C
639.0879 1465.7393 637.8975 1466.335 637.9121 1466.1904 C
637.9883 1466.1553 638.0645 1465.7256 638.1191 1465.2139 C
635.9766 1466.4229 631.8613 1467.8145 631.9121 1467.8574 C
631.8975 1467.8428 633.1016 1466.7686 634.3604 1465.5752 C
633.9893 1465.9268 632.1504 1465.8477 631.5801 1465.8613 C
632.0625 1465.5469 632.4902 1465.0938 632.4199 1464.5127 C
631.2559 1464.3271 629.748 1465.1182 628.6797 1465.6084 C
629.2441 1464.7939 630.0234 1464.0127 630.7754 1463.3164 C
630.3418 1463.5635 629.8691 1463.6963 629.3838 1463.6416 C
629.6895 1463.4063 629.9463 1463.0459 630.2744 1462.8213 C
629.7422 1463.1846 626.0469 1462.9609 625.9121 1463.5234 C
625.9639 1463.542 626.7803 1462.5723 627.4932 1461.667 C
625.5996 1461.6494 621.6445 1459.7588 621.9121 1459.5234 C
621.9883 1459.8184 624.9063 1459.6553 626.4355 1459.2881 C
621.7256 1455.4941 618.2344 1450.0957 615.4219 1444.8076 C
612.4121 1440.8174 612.5625 1435.5068 609.8018 1431.3877 c
607.0117 1427.0176 605.6221 1421.9473 605.0723 1416.8174 c
603.9023 1408.0869 601.2617 1399.377 602.1816 1390.4873 c
602.7617 1385.7979 608.2422 1385.0674 611.6621 1383.1875 C
613.6719 1380.1875 614.8125 1376.708 616.2021 1373.3975 C
613.1719 1371.7979 609.832 1370.3369 607.8623 1367.377 c
605.9619 1364.627 603.9023 1361.9971 602.002 1359.2471 c
600.2314 1356.8574 600.7725 1353.7373 600.7021 1350.9473 C
595.0918 1351.8369 590.2725 1348.4775 585.0918 1347.0381 c
579.6123 1345.4775 574.1914 1343.6875 569.0625 1341.208 c
562.8018 1338.2178 555.7822 1336.2881 548.8223 1337.417 C
540.7227 1337.7676 533.8818 1342.7471 526.0918 1344.3877 c
522.4521 1345.0869 518.7227 1344.877 515.082 1345.5068 C
509.2422 1346.127 503.7725 1348.4775 497.9521 1349.1074 c
488.2622 1350.1768 478.6523 1351.9873 469.312 1354.7568 c
464.2319 1356.0576 459.1719 1357.6172 453.9619 1358.2676 C
448.3521 1358.1973 442.7021 1357.0869 437.6123 1354.6768 c
432.6719 1352.4072 427.4321 1350.7773 422.0122 1350.3076 c
415.8022 1349.5273 412.7319 1343.5273 408.8022 1339.458 c
405.8022 1336.6768 406.3921 1332.1572 404.4219 1328.8174 c
401.4722 1324.3877 395.582 1324.2568 391.4819 1321.3574 C
392.2202 1320.0518 393.3311 1319.4482 394.6113 1318.8633 c
396.084 1318.1914 395.5571 1318.9385 396.3911 1317.6943 c
397.3931 1316.2012 397.1064 1315.0889 399.2998 1314.6172 c
402.2764 1313.9775 406.3857 1315.7061 408.5332 1317.7383 c
411.5029 1320.5479 414.9424 1322.7275 418.272 1325.0479 c
422.2119 1327.6572 425.752 1331.7979 430.9033 1331.5576 C
432.957 1331.9746 436.1064 1330.4688 437.1064 1328.6426 c
439.1484 1324.9141 431.958 1320.5781 430.105 1318.0078 c
428.8589 1316.2793 428.0635 1312.9453 429.5044 1311.1123 c
432.0137 1307.9219 434.686 1312.6572 436.7749 1313.9053 c
440.0674 1315.8721 442.1548 1318.875 444.9731 1321.3018 c
447.7075 1323.6563 451.4189 1324.6865 453.522 1327.7881 c
455.5923 1330.877 456.5522 1334.5381 457.4619 1338.0977 C
465.812 1335.4971 474.4521 1332.2881 480.7822 1326.0068 C
473.6821 1322.0068 470.6523 1314.127 466.8721 1307.3877 c
462.1919 1297.9775 455.9023 1289.5068 451.0522 1280.1768 c
441.7822 1264.7568 434.6123 1248.2178 427.4419 1231.7471 c
419.7622 1215.1768 411.292 1198.7471 399.6719 1184.5381 c
395.332 1179.4775 392.6621 1173.127 387.562 1168.6973 c
382.6021 1164.6475 379.042 1158.8271 372.9424 1156.3076 c
365.7822 1152.9268 359.332 1147.9375 351.5225 1146.0771 C
344.3818 1143.8271 336.8223 1146.0576 329.5918 1144.6074 C
324.8521 1142.7568 319.9619 1141.0176 315.8818 1137.8877 C
312.1621 1138.9072 308.3223 1139.5977 304.7725 1141.1377 C
301.8921 1142.8369 299.832 1145.5674 297.3623 1147.7676 c
292.8921 1151.6377 291.1421 1157.4971 287.6719 1162.1377 c
284.2822 1166.7275 282.0723 1172.3477 277.2422 1175.6973 C
273.3721 1179.5176 268.832 1182.5869 265.3818 1186.8174 C
261.9922 1189.2471 257.8921 1190.4971 254.5225 1192.9775 C
252.9521 1194.3672 252.332 1197.2275 249.9121 1197.2676 C
247.0518 1197.667 244.502 1195.1572 244.4023 1192.3574 C
243.5322 1186.1377 247.312 1180.708 248.2324 1174.7373 c
249.002 1169.6074 250.3223 1164.5479 252.4023 1159.7773 c
254.082 1156.0381 257.7021 1153.7979 260.292 1150.7471 c
263.6821 1146.7773 266.832 1142.5869 269.9922 1138.417 c
273.6621 1133.7773 274.6123 1127.7568 277.1123 1122.5068 c
280.4824 1115.3369 282.0122 1107.5176 283.6221 1099.8076 c
284.7622 1094.3076 287.9922 1089.3174 292.3623 1085.8271 c
296.1821 1082.3975 301.8921 1082.5771 306.582 1083.6768 c
311.5918 1085.0068 313.7119 1090.0977 316.1621 1094.1074 C
317.792 1097.2676 321.7622 1097.8477 324.9121 1098.4473 C
338.5322 1099.7773 352.2222 1099.917 365.8921 1099.9775 c
382.8022 1100.1875 399.8921 1094.9873 416.6123 1099.5068 C
431.1421 1101.208 444.0723 1108.3174 457.3521 1113.877 c
463.522 1116.2373 468.792 1120.8174 475.4819 1121.7471 C
483.5723 1123.4775 491.7622 1121.2676 499.9219 1121.8369 c
508.4619 1122.377 516.8125 1120.2275 525.3125 1119.8271 c
532.8018 1119.6875 540.4219 1119.0068 547.7822 1120.7676 c
553.6426 1122.1074 559.7314 1121.2275 565.502 1119.9072 C
575.1621 1117.0273 585.332 1114.2373 595.4814 1115.9775 C
601.8223 1117.5273 607.8623 1120.2676 613.292 1123.8877 C
617.6719 1127.8174 623.3926 1122.8369 628.3223 1125.0068 c
632.3223 1126.7676 635.5225 1129.8271 639.1914 1132.127 c
646.6621 1136.6172 653.8125 1141.667 661.6123 1145.6074 c
671.7822 1150.7568 681.0225 1157.4775 690.502 1163.7373 c
698.8525 1169.6172 707.8926 1174.8477 714.5117 1182.7881 c
720.1426 1189.6973 726.332 1197.0869 727.1123 1206.3574 C
728.5322 1214.1074 724.9922 1221.627 725.8818 1229.377 c
726.8525 1238.6875 725.542 1248.0771 727.0117 1257.3477 c
728.5723 1266.5381 723.9121 1275.2275 724.3623 1284.3672 c
724.6719 1288.0977 725.7119 1291.708 726.2617 1295.3877 C
727.1719 1295.1475 728.042 1294.7881 728.8623 1294.3076 C
732.5322 1287.1377 733.8223 1279.1172 735.5117 1271.3174 C
737.2314 1258.5381 740.1318 1245.9473 742.5723 1233.2773 c
743.3818 1227.8877 743.5518 1222.4268 743.4814 1216.9775 C
734.502 1214.1973 726.3418 1203.2568 731.5625 1194.0479 C
734.7021 1185.6572 743.0518 1181.2979 749.3721 1175.6572 C
751.542 1169.8672 746.6523 1164.3877 748.1621 1158.5273 c
749.7314 1152.5381 753.0518 1147.1875 754.8516 1141.2676 c
758.4023 1130.1475 766.7617 1120.5869 777.7021 1116.2881 C
785.8018 1111.7568 795.5117 1111.6172 804.3516 1113.708 c
815.5117 1116.3574 827.1016 1114.8369 838.3125 1117.0479 c
843.4814 1117.9268 848.7119 1118.4775 853.8418 1119.6172 C
865.8125 1111.377 877.252 1102.2773 887.2822 1091.7178 c
891.4619 1087.2275 896.4814 1083.4678 899.7617 1078.1768 c
905.0723 1069.9678 913.8818 1064.2773 917.6016 1055.0176 C
920.0723 1047.127 920.002 1038.7568 920.4414 1030.5869 C
920.8926 1027.6172 921.0918 1024.0479 923.5625 1021.9678 C
927.1016 1020.2979 930.2617 1023.457 932.4219 1025.877 C
935.5322 1026.458 939.1914 1027.2676 939.4414 1031.1172 C
940.7314 1031.7471 942.0322 1032.3477 943.3418 1032.9473 C
943.7227 1034.3076 944.042 1035.667 944.4414 1036.9971 C
945.9727 1037.6172 947.8721 1038.0273 948.5723 1039.7471 c
950.1426 1043.2148 953.165 1043.8975 953.9756 1047.9453 c
954.5635 1050.877 954.626 1054.375 953.9219 1057.2979 c
951.8623 1065.8477 947.9922 1073.8076 944.252 1081.7178 c
941.8018 1086.4473 942.7725 1092.127 940.4521 1096.8672 C
936.2119 1103.6768 927.7725 1105.3174 920.582 1107.167 C
909.292 1111.1572 898.9727 1117.7979 890.752 1126.5273 C
897.8125 1128.6172 904.9316 1132.127 912.4922 1130.8574 c
924.2314 1128.9873 936.0322 1127.2979 947.9219 1126.6875 c
951.8818 1126.4473 955.7822 1125.0273 959.7725 1125.5869 c
962.3623 1125.8975 963.542 1128.6572 965.9023 1129.458 c
967.502 1129.9873 968.4922 1131.3477 969.3721 1132.6973 C
971.0518 1132.9971 972.7822 1133.208 974.3418 1133.9775 c
975.7822 1134.7881 975.3721 1136.6572 975.4619 1138.0068 C
976.3721 1138.708 977.4121 1139.2881 978.1621 1140.1768 C
978.8125 1141.7178 978.1426 1143.6377 979.3125 1144.958 c
980.6318 1146.6377 982.2422 1148.917 980.752 1151.0068 c
f
0 D
478.2422 1177.0674 m
474.6323 1175.1074 470.5122 1174.3369 466.9419 1172.2773 c
462.2222 1169.627 457.272 1167.3877 452.5923 1164.667 c
449.2422 1162.7568 447.082 1159.0674 443.2319 1158.0176 C
435.6719 1155.5576 427.6523 1155.4775 419.8223 1154.5869 C
420.6719 1157.9375 423.042 1160.5381 424.832 1163.4072 c
430.5522 1172.2773 436.9619 1180.667 442.9521 1189.3477 C
449.502 1197.3877 456.8423 1204.7568 464.022 1212.2373 C
475.062 1222.3271 481.6021 1236.0771 487.832 1249.4072 c
491.1821 1256.0771 493.8423 1263.1074 495.4219 1270.4072 C
497.812 1266.3877 499.502 1262.0068 501.3223 1257.708 c
503.2422 1253.1973 503.252 1248.2178 504.1221 1243.458 c
505.4316 1235.2373 508.9922 1227.6377 511.0625 1219.627 c
512.582 1213.2178 517.4619 1208.4873 520.4121 1202.7676 c
522.1816 1199.2568 523.6719 1195.5977 524.9121 1191.8574 C
508.6816 1189.4775 492.8823 1184.4678 478.2422 1177.0674 c
f
607.1318 1249.2568 m
601.832 1247.627 599.1719 1242.2373 594.2314 1240.0576 C
590.4316 1238.1074 586.9316 1235.6475 583.2314 1233.5068 C
580.2422 1243.4971 574.7617 1252.5068 570.4727 1261.958 c
567.6426 1268.5176 563.7227 1274.5068 560.2822 1280.7373 C
555.2617 1288.1377 548.7725 1294.3877 542.9521 1301.127 C
548.4814 1303.708 554.4316 1305.2178 560.332 1306.7373 C
566.8525 1307.6377 573.4121 1306.2471 579.9316 1305.8369 C
586.3125 1305.7881 592.5625 1307.3672 598.8125 1308.458 C
597.9219 1303.2568 596.252 1298.1074 596.3418 1292.7773 C
597.3525 1288.8574 598.8623 1284.9971 601.2617 1281.6875 c
605.7314 1275.9072 607.3926 1268.6074 609.0625 1261.6377 C
610.4121 1257.3672 607.1523 1253.5176 607.1318 1249.2568 C
f
682.8125 1202.2773 m
685.4121 1209.627 690.2314 1215.8477 693.5322 1222.8369 c
693.9922 1223.7979 694.6318 1224.6475 695.2725 1225.4873 C
695.5625 1221.8271 696.502 1218.2471 696.7725 1214.5869 C
693.9619 1208.8877 687.9219 1205.6768 682.8125 1202.2773 C
f
720.5225 1336.417 m
718.7021 1338.2373 717.0322 1340.208 715.7725 1342.4473 C
717.9023 1341.9873 719.9727 1341.2471 721.9814 1340.3975 C
721.4414 1339.0977 720.9414 1337.7676 720.5225 1336.417 C
f
788.1611 1428.834 m
787.748 1428.7725 787.3027 1428.7266 786.8438 1428.6904 C
786.248 1428.8271 785.6367 1428.9961 785.0195 1429.2002 C
785.7939 1429.1602 786.5439 1429.1592 787.2461 1429.1982 C
787.2949 1429.1963 787.3428 1429.1963 787.3916 1429.1934 C
787.6602 1429.0664 787.918 1428.9463 788.1611 1428.834 C
f
784.4717 1421.3467 m
783.9922 1421.5557 783.5078 1421.8018 783.0215 1422.0801 C
782.3281 1422.5771 781.6123 1423.0918 780.9043 1423.6016 C
783.4297 1422.7334 787.5361 1421.8828 788.7051 1421.5527 C
787.7168 1421.3721 786.2041 1421.2139 784.4717 1421.3467 C
f
785.4189 1423.2578 m
784.1289 1423.8564 782.6826 1424.541 781.2383 1425.2607 c
781.2246 1425.2666 781.2129 1425.2734 781.1992 1425.2793 C
781.5684 1425.1768 781.9297 1425.085 782.2793 1425.0068 C
783.4326 1424.3008 784.499 1423.7217 785.4189 1423.2578 c
f
785.835 1426.3623 m
784.0332 1426.5557 782.0957 1427.0781 780.249 1428.1807 C
781.4766 1427.7676 782.6875 1427.5215 783.835 1427.3896 C
784.5947 1426.9805 785.2783 1426.6299 785.835 1426.3623 C
f
789.4131 1428.2715 m
788.9795 1428.3145 788.5283 1428.374 788.0645 1428.4521 C
788.2734 1428.501 788.4678 1428.5518 788.6631 1428.6045 C
788.9395 1428.4785 789.1885 1428.3682 789.4131 1428.2715 C
f
788.7656 1428.9395 m
788.6592 1429.0107 788.5439 1429.0889 788.4297 1429.165 C
789.0596 1429.1689 789.6543 1429.2061 790.2227 1429.2617 C
789.7998 1429.1484 789.3125 1429.0381 788.7656 1428.9395 C
f
792.5635 1431.1641 m
792.5176 1430.9541 790.2129 1430.1924 786.9863 1430.1592 C
786.8135 1430.2803 786.6367 1430.4033 786.4561 1430.5303 C
787.4385 1430.668 788.3428 1430.8789 789.1719 1431.1191 C
789.4668 1431.1299 789.7539 1431.1553 790.0371 1431.1904 C
791.1172 1431.1357 791.999 1431.1465 792.5635 1431.1641 C
f
791.9111 1432.1133 m
791.8975 1432.1104 791.8857 1432.1084 791.8721 1432.1064 C
793.209 1432.7061 793.9766 1433.2246 793.9121 1433.1904 C
793.9902 1433.207 792.668 1432.5088 790.5684 1431.9521 C
790.5479 1431.9502 790.5303 1431.9473 790.5098 1431.9463 c
789.8633 1431.9111 789.1699 1431.9707 788.459 1432.0889 C
787.7539 1432.2803 787.0117 1432.5117 786.2607 1432.7891 C
787.7578 1432.7432 789.9912 1433.0049 792.1904 1433.377 C
792.9688 1433.3223 793.6816 1433.2861 794.2949 1433.2617 C
793.6523 1432.8408 792.874 1432.4287 791.9111 1432.1133 C
f
794.7148 1433.542 m
794.4727 1433.5889 794.2148 1433.6396 793.9395 1433.6953 C
794.3906 1433.7842 794.8291 1433.874 795.25 1433.9648 C
795.0859 1433.8271 794.9141 1433.6865 794.7148 1433.542 C
f
963.832 1146.0674 m
965.9316 1145.917 968.6123 1146.4873 970.002 1144.4268 C
967.8516 1144.5771 965.7227 1145.0273 963.832 1146.0674 C
f
*U
U
u
1 Ap
281.8408 1642.2939 m
281.8408 1616.3652 194.1504 1595.3467 85.9785 1595.3467 c
-22.1934 1595.3467 -109.8838 1616.3652 -109.8838 1642.2939 c
-109.8838 1668.2217 -22.1934 1689.2393 85.9785 1689.2393 c
194.1504 1689.2393 281.8408 1668.2217 281.8408 1642.2939 c
Bb
1 (Unnamed gradient 14) 85.9785 1595.3467 90 93.8926 1 0 0 1 0 0 Bg
-0.000004 93.8926 395.7246 0.000017 -111.8838 1595.3467 Xm
-0.000329 7518.6118 395.7246 0.000017 -111.8833 -5923.2656 Bc
-0.000004 93.8926 395.7246 0.000017 -111.8838 1595.3467 Bm
-0.000329 7518.6118 395.7246 0.000017 -111.8838 1689.2393 Bc
f
0 BB
*u
0 Ap
1 D
0.75021 0.679683 0.670222 0.90164 k
208.0181 2004.5752 m
202.7026 2013.2354 194.2505 2019.1382 186.8828 2025.8911 C
185.1831 2027.1929 185.5088 2029.5254 185.1831 2031.3877 C
183.9175 2045.0918 182.2451 2059.0313 176.6045 2071.7324 c
174.3989 2076.4966 173.856 2081.8301 171.5874 2086.5576 c
169.7974 2090.707 167.1851 2094.4229 165.3589 2098.5449 c
162.8384 2104.0166 158.2173 2107.9927 157.1279 2114.0225 c
156.2339 2118.9756 155.1548 2123.9209 154.583 2128.9434 c
154.25 2131.8662 153.7334 2134.8599 153.3843 2137.7832 c
153.0249 2140.792 152.3901 2144.1357 152.5386 2147.123 c
152.6987 2150.3516 153.1567 2153.5996 153.2412 2156.8633 c
153.3193 2159.8784 152.9937 2163.1548 153.4355 2166.1357 c
154.8545 2175.709 155.6138 2185.3994 158.0908 2194.7837 c
158.6514 2196.7539 159.6455 2198.5439 160.5854 2200.3521 c
163.7407 2206.291 165.9556 2212.6641 168.0796 2219.0195 c
168.8906 2221.4458 169.0835 2223.9995 169.2075 2226.5376 c
169.3247 2228.9321 169.8042 2231.4092 169.4546 2233.8042 c
169.2139 2235.4561 168.3779 2236.8857 169.0073 2238.5557 c
169.5659 2240.0381 170.7188 2241.0146 170.8037 2242.6943 c
170.8853 2244.3105 170.1567 2245.8555 170.3486 2247.4863 c
170.5234 2248.9756 171.4302 2250.1797 171.8105 2251.6006 c
172.2285 2253.1611 171.813 2254.5439 171.5718 2256.0884 c
171.1377 2258.875 172.8623 2262.5908 169.5313 2264.0127 c
167.98 2264.6748 166.2266 2265.002 164.5708 2265.2646 c
163.4185 2265.4478 161.0166 2265.3784 160.1406 2266.2949 c
158.7886 2267.71 161.8784 2269.9063 163.2354 2270.25 c
167.7646 2271.3984 172.7446 2272.5718 173.9282 2277.5435 C
172.7534 2278.3301 171.542 2279.3784 170.0239 2279.0439 C
166.1001 2278.52 161.8149 2278.8994 158.3711 2276.6216 c
154.9629 2274.4248 151.0303 2273.3311 147.4507 2271.4775 C
144.2241 2274.479 141.4033 2277.9863 137.6245 2280.3369 c
130.4375 2284.7847 125.6919 2291.9619 119.5083 2297.5581 C
115.1694 2302.7017 110.9023 2308.4688 109.9536 2315.3213 c
109.248 2319.6875 107.9463 2323.9185 106.8799 2328.1938 c
105.8765 2332.0903 107.0874 2336.0498 107.3408 2339.9551 c
107.3433 2340.0469 107.3447 2340.1387 107.3472 2340.2314 C
107.9424 2341.8867 108.9736 2345.3989 108.8369 2345.7686 C
108.8384 2346.0146 108.6753 2346.2344 108.4189 2346.3877 C
108.4219 2346.8623 108.4175 2347.3438 108.4043 2347.8145 C
108.6323 2347.4429 108.77 2347.2139 108.7671 2347.21 C
108.7749 2347.209 108.5918 2348.0537 108.332 2349.1899 C
108.2549 2350.1221 108.1245 2350.8394 107.9063 2351.0195 C
107.8398 2351.2993 107.7729 2351.5781 107.7056 2351.8545 C
108.3267 2350.9365 108.7852 2350.2441 108.7671 2350.2236 C
108.8213 2350.2236 108.0366 2353.3833 107.4155 2355.6133 C
108.168 2354.6216 108.7671 2353.8398 y
108.2314 2355.749 107.7031 2357.5742 V
108.0073 2357.1626 108.1934 2356.8848 108.1646 2356.8525 C
108.3125 2356.8716 107.0503 2360.5273 106.2241 2362.75 C
107.3047 2361.8418 108.1846 2361.1001 108.1646 2361.0713 C
108.2173 2361.0952 106.6245 2363.8555 105.478 2365.8179 C
106.9468 2364.5942 108.1919 2363.5313 108.1646 2363.4819 C
108.2446 2363.5146 106.1377 2366.6875 104.5029 2369.0005 C
105.2275 2368.5405 105.7349 2368.25 105.7539 2368.3037 C
105.6226 2368.2378 103.2231 2371.2979 101.8125 2373.2861 C
103.5103 2372.2461 105.1304 2371.2695 105.1514 2371.3164 C
105.0918 2371.2744 102.7153 2374.1377 101.0625 2376.042 C
101.7153 2375.7588 102.147 2375.5635 102.1377 2375.5352 C
102.1943 2375.5845 99.8999 2377.6934 98.2061 2379.2393 C
99.6938 2378.7993 100.937 2378.4824 100.9326 2378.5479 C
100.8374 2378.4756 97.3291 2380.9648 95.604 2382.3652 C
96.5889 2382.1904 97.3198 2382.0928 97.3169 2382.1641 C
97.2183 2382.061 94.7446 2383.6523 93.0361 2384.8062 C
92.4375 2385.375 91.8247 2385.9282 91.1948 2386.4619 C
92.2773 2386.4229 93.0972 2386.3936 93.0981 2386.3828 C
93.1079 2386.3984 90.9761 2387.3306 89.1206 2388.1235 C
88.3203 2388.7207 87.4946 2389.2813 86.6543 2389.8193 C
87.9487 2389.5713 88.8794 2389.3955 y
80.3569 2393.5859 79.6738 2393.8135 v
79.6064 2393.8364 79.5386 2393.8486 79.4707 2393.8594 C
77.853 2394.5928 76.25 2395.2827 75.0864 2395.728 C
75.2715 2396.5176 75.7583 2398.8091 75.6353 2401.6343 C
76.0669 2399.7129 76.2168 2398.4297 76.2236 2398.4365 C
76.2061 2398.3984 76.1826 2404.6104 73.8335 2410.6138 c
72.8936 2413.3003 71.7485 2415.9375 70.729 2418.1128 C
71.6069 2417.0981 72.4927 2416.043 73.3428 2414.9766 c
77.8369 2409.8135 79.2207 2403.2231 79.2368 2403.2573 C
79.2227 2403.1836 78.4868 2409.978 74.3931 2415.707 c
73.2598 2417.4385 72.0615 2419.1309 70.9229 2420.6782 C
71.3096 2420.25 71.6924 2419.8149 72.0615 2419.3662 c
76.6538 2414.2764 79.207 2408.0439 79.2368 2408.0786 C
79.2046 2408.0322 77.272 2414.5078 73.0737 2420.1489 c
71.9663 2421.7891 70.7124 2423.332 69.4648 2424.7231 C
70.9517 2423.7075 72.4634 2422.541 73.8711 2421.2275 c
79.5957 2416.4385 82.9839 2409.9272 82.8525 2409.8867 C
82.9912 2409.8975 80.1914 2416.7373 74.7612 2422.1475 c
70.2754 2427.1431 64.1182 2430.6895 61.9033 2431.6025 C
61.166 2432.0195 60.4746 2432.2861 59.9165 2432.3965 C
59.8496 2432.5776 59.7803 2432.7598 59.6987 2432.9453 c
59.2515 2433.835 55.4951 2439.832 50.3613 2444.0664 c
45.4531 2448.6152 39.4194 2450.8701 39.4614 2450.8682 C
39.4414 2450.8662 45.166 2448.0181 49.4785 2443.1396 c
51.2363 2441.3672 52.7505 2439.4004 53.9766 2437.6035 C
51.8975 2439.5059 49.7012 2441.2666 47.3208 2442.7861 C
45.9932 2444.1182 43.8164 2446.1338 41.4521 2447.8096 c
37.9697 2450.5356 33.9438 2451.9473 34.0371 2452.0732 C
33.9663 2451.9634 36.707 2450.4727 39.353 2448.0737 C
37.6963 2449.1089 36.5083 2449.7803 36.4482 2449.6621 C
36.564 2449.7803 38.2012 2448.4063 40.2363 2446.5742 C
39.4214 2446.9268 38.5967 2447.2563 37.7617 2447.5571 C
36.189 2448.5464 34.2544 2449.6523 32.2388 2450.5386 c
27.8184 2452.6621 23.1577 2453.2314 23.1895 2453.2783 C
23.165 2453.2349 27.6802 2452.0195 31.6411 2449.4072 c
31.7915 2449.3154 31.9385 2449.2202 32.0874 2449.126 C
31.2319 2449.2881 30.3696 2449.4092 29.5049 2449.5024 C
28.6245 2449.8594 27.7085 2450.1973 26.7773 2450.4897 c
21.6689 2452.3315 16.5059 2451.3745 16.5605 2451.4702 C
16.5269 2451.3926 21.0005 2451.6133 25.3384 2449.7524 C
25.2095 2449.7168 25.0625 2449.6812 24.8979 2449.6455 C
24.5459 2449.6826 24.1777 2449.7065 23.7866 2449.7031 C
23.2266 2449.6587 20.5874 2449.5742 17.1934 2449.1084 C
15.084 2449.1479 13.5801 2449.0098 13.5547 2448.4912 C
13.4858 2448.4771 13.417 2448.4629 13.3477 2448.4482 C
9.54395 2448.2256 6.34863 2448.1763 6.31543 2448.457 C
6.27295 2448.2524 7.97949 2447.9854 10.4087 2447.7412 C
9.95996 2447.6162 9.51123 2447.4849 9.06592 2447.3428 c
8.60791 2447.2148 8.16016 2447.0732 7.71924 2446.9238 C
5.97754 2446.6563 3.7583 2446.4004 1.54785 2446.415 c
-2.89063 2446.2129 -6.94824 2447.8672 -6.94336 2447.8545 C
-6.97168 2447.8838 -3.15039 2445.6006 1.45264 2445.1392 c
2.0083 2445.0547 2.56641 2444.9883 3.12158 2444.9351 C
3.06885 2444.9072 3.01807 2444.8799 2.96631 2444.8525 C
1.46631 2444.7666 -0.939453 2444.6582 -3.27295 2444.874 c
-6.82471 2445.04 -9.95459 2446.6689 -9.95654 2446.6494 C
-9.97217 2446.686 -7.15576 2444.4619 -3.50781 2443.6162 c
-2.42627 2443.3174 -1.32373 2443.0879 -0.296875 2442.9121 C
-0.540039 2442.751 -0.766602 2442.5981 -0.976563 2442.4531 C
-5.57129 2442.3149 -10.6226 2442.3496 -10.5591 2441.8281 C
-10.5576 2442.3486 -6.521 2441.667 -2.2583 2441.1211 C
-6.64795 2439.7031 -12.3374 2438.1777 -12.3667 2438.2119 C
-12.3892 2438.1831 -8.98535 2438.4814 -5.28662 2438.9473 C
-6.12402 2438.5347 -7.01465 2438.1357 -7.93408 2437.79 c
-11.8999 2436.1719 -15.9976 2435.23 -15.9829 2435.1982 C
-15.9873 2435.2236 -13.7925 2435.3887 -10.958 2435.873 C
-15.1074 2433.7734 -19.0933 2431.7461 -18.9961 2431.5825 C
-19.0508 2431.752 -15.458 2432.9878 -11.4385 2434.3696 C
-14.5259 2432.293 -17.2505 2430.4644 -17.1885 2430.3774 C
-17.2461 2430.4902 -13.1875 2432.3447 -9.16992 2434.2495 C
-9.45996 2434.0068 -9.75781 2433.7573 -10.0635 2433.5005 C
-13.8193 2430.8901 -18.3696 2427.9531 -18.394 2427.9668 C
-18.4009 2427.9492 -16.7676 2428.6411 -14.585 2429.6143 C
-15.7183 2428.6035 -16.6831 2427.6978 -17.2554 2427.0635 C
-20.2813 2424.4297 -23.2832 2421.374 -23.2148 2421.3379 C
-23.2866 2421.4258 -18.7783 2424.4697 -15.1831 2426.5317 C
-17.4023 2424.8174 -22.2642 2420.3179 -22.0098 2420.1323 C
-22.0542 2420.2549 -21.0752 2420.8516 -19.749 2421.5845 C
-22.2056 2418.8442 -24.5669 2416.0034 -24.4204 2415.9136 C
-24.5068 2416.0537 -21.874 2418.2183 -19.1143 2420.3555 C
-21.5967 2417.3511 -24.0059 2414.2163 -23.8179 2414.1055 C
-23.9512 2414.2935 -20.6538 2417.2495 -17.5552 2419.8701 C
-17.5684 2419.8203 -17.5791 2419.7788 -17.5908 2419.7319 C
-19.6855 2416.5498 -22.2363 2412.3989 -22.0098 2412.2974 C
-22.1152 2412.4189 -20.7441 2413.9316 -19.0483 2415.7051 C
-20.6372 2412.8574 -22.127 2409.9219 -22.0098 2409.8872 C
-22.0898 2409.9771 -20.0415 2412.4731 -17.9521 2414.8691 C
-19.4316 2411.7207 -21.4604 2406.8936 -21.4072 2406.8735 C
-21.4346 2406.8989 -21.1782 2407.2881 -20.7212 2407.9272 C
-21.1807 2406.9146 -21.4429 2406.2881 -21.4072 2406.271 C
-21.457 2406.2949 -20.8906 2407.2695 -19.9722 2408.7622 C
-20.1333 2408.3965 -20.2422 2407.7998 -20.3042 2407.0068 C
-21.7041 2404.458 -22.6509 2402.666 -22.6123 2402.6553 C
-22.6387 2402.6792 -21.7314 2404.0273 -20.354 2406.0103 C
-20.4463 2402.8569 -20.0376 2397.8193 -19.3984 2393.1279 c
-18.8921 2390.334 -19.0361 2387.6621 -19.416 2385.4463 C
-21.9819 2379.3809 -25.0581 2373.4731 -29.4141 2368.5029 c
-33.582 2363.6938 -37.8755 2358.9482 -42.5044 2354.5908 C
-49.0762 2351.7974 -55.7568 2347.9189 -59.0381 2341.2568 c
-64.5708 2329.8213 -64.8418 2316.8486 -65.5469 2304.4014 c
-66.1528 2296.7627 -65.3574 2289.0786 -63.9287 2281.5659 c
-62.3013 2273.5933 -62.5635 2265.376 -60.9819 2257.3936 c
-60.2407 2254.1123 -62.6455 2251.373 -63.9917 2248.6162 c
-66.4961 2244.1953 -66.6953 2238.7261 -65.0859 2233.9717 C
-62.7627 2230.1201 -58.7578 2227.7158 -55.9199 2224.2808 c
-53.0718 2220.7549 -49.6909 2217.4829 -48.0278 2213.1704 c
-42.0615 2198.5981 -34.3594 2184.7944 -28.8359 2170.0322 c
-27.0371 2165.0874 -24.8584 2160.0254 -25.1841 2154.6377 c
-25.2471 2147.8301 -27.9048 2141.4663 -29.9297 2135.0747 c
-33.3105 2125.4927 -36.4297 2115.7563 -37.9121 2105.6772 c
-39.6748 2094.8564 -38.7529 2083.5747 -35.1636 2073.2061 c
-29.2158 2057.5034 -15.5381 2045.7695 -0.27002 2039.4692 C
9.68311 2034.3345 20.9463 2033.0957 31.9033 2031.8306 C
35.7271 2031.8394 36.6035 2027.5996 39.1533 2025.5928 c
40.708 2024.3452 43.1938 2024.8784 44.5586 2023.4233 C
40.5996 2007.3779 35.5459 1991.6025 30.4209 1975.8828 C
27.5366 1968.6685 25.9092 1961.0664 23.7583 1953.6265 C
21.3804 1941.8291 20.8472 1929.752 20.5942 1917.7471 c
19.9341 1907.5229 19.7358 1897.2632 19.9976 1887.0205 c
19.9521 1882.2661 18.6685 1877.6465 17.9365 1872.9639 c
16.7881 1865.9214 13.8052 1859.1055 14.3564 1851.8462 c
14.7637 1842.3994 15.6948 1832.5557 20.3232 1824.1118 c
24.8154 1815.6509 26.6328 1806.1045 28.0518 1796.7119 c
29.8057 1785.0415 31.9121 1773.335 36.125 1762.27 c
39.1621 1754.6494 41.5845 1746.8032 43.4375 1738.8115 c
48.6719 1718.9873 51.646 1698.1328 48.2559 1677.7471 C
47.1172 1673.9775 44.6582 1670.7861 42.2808 1667.7129 C
39.0352 1664.54 34.8135 1662.5967 31.415 1659.6045 c
26.5059 1655.3467 21.1997 1651.3506 15.0615 1649.0547 c
8.46729 1646.5879 0.787598 1648.0332 -3.37598 1641.4385 c
-4.56006 1639.5625 -7.06738 1638.5146 -7.77539 1636.002 C
-7.64111 1636.4795 -10.9678 1634.3428 -11.3149 1633.8213 c
-12.0479 1632.7188 -12.9731 1630.9463 -13.5391 1629.7666 c
-14.9697 1626.7842 -14.541 1623.7021 -11.2407 1622.1846 c
-6.35742 1619.9404 -0.470703 1623.2334 4.64795 1622.8662 c
8.93262 1622.5586 13.1089 1623.8877 17.1772 1625.0713 c
20.6035 1626.084 23.0254 1628.8682 26.0542 1630.6123 c
30.7549 1633.3799 35.6724 1635.8838 40.9072 1637.4561 C
48.3013 1639.0293 55.9316 1638.8486 63.4248 1638.1895 c
71.6064 1637.9717 81.2964 1636.8877 87.7061 1643.0967 C
91.0874 1649.127 88.8994 1656.251 87.3804 1662.5059 c
85.4551 1668.9424 84.2886 1675.5869 83.8643 1682.2852 C
82.0835 1695.9355 82.0566 1709.7119 82.0112 1723.4434 c
82.147 1740.457 85.6992 1757.3608 84.0449 1774.3931 C
88.8086 1772.0332 92.8047 1768.4712 96.5566 1764.7563 c
101.8174 1759.4771 107.0874 1754.1973 112.0327 1748.6016 c
115.8018 1744.3257 120.8013 1741.4238 125.9268 1739.0552 c
128.6206 1737.98 129.4341 1734.3818 132.4805 1733.9028 c
134.8311 1733.5962 136.4673 1731.9775 138.23 1730.5581 C
143.1206 1729.8896 145.7876 1725.1523 150.3794 1723.6426 C
153.7065 1722.9912 154.1499 1719.1055 154.3213 1716.3115 c
154.5112 1708.7441 153.1187 1701.2236 151.5732 1693.8389 c
150.0454 1685.7295 143.8618 1679.293 142.9673 1670.9941 C
142.126 1666.4834 142.5781 1661.5928 140.2637 1657.4609 c
136.8921 1650.917 131.9292 1645.3574 127.1377 1639.8154 c
122.6816 1634.5635 116.1821 1631.5439 112.0327 1625.9854 c
110.0088 1623.3018 103.2764 1617.1973 105.5107 1613.2783 c
107.0806 1610.5254 113.1514 1611.5283 115.7412 1610.6162 c
119.501 1609.293 122.4219 1606.3887 126.7471 1605.7646 c
132.0127 1605.0059 135.6553 1607.8184 140.1309 1608.0859 c
148.0313 1608.5576 151.3594 1610.3301 157.9097 1615.3896 c
162.4209 1618.708 165.6841 1623.3184 169.3276 1627.4854 c
172.4819 1631.1465 176.8755 1633.2979 180.9614 1635.7031 C
185.7891 1638.0625 187.0542 1644.6162 185.3916 1649.3252 c
183.2124 1654.4609 181.0796 1659.6133 179.1626 1664.8467 C
177.2314 1676.2207 179.1563 1687.8184 181.3081 1699.0166 c
181.8789 1701.9941 182.8989 1706.4355 182.6011 1709.4502 C
186.8799 1706.751 192.1143 1709.7188 193.9243 1713.8623 C
191.3013 1716.4316 189.1973 1719.1924 188.4756 1722.6719 c
186.7207 1731.1328 191.7837 1740.0332 193.0029 1748.2134 c
194.5034 1758.2832 196.8267 1768.3633 196.1577 1778.605 c
195.9316 1795.4102 190.5347 1811.501 185.0747 1827.2124 c
181.4678 1837.1206 181.5405 1847.7695 180.1299 1858.0933 c
178.9185 1867.1958 179.3345 1876.4893 181.2778 1885.4658 c
184.605 1903.2559 183.9536 1921.4629 186.7017 1939.3164 C
187.2168 1940.9614 188.5552 1942.1733 189.5493 1943.5381 c
194.0513 1948.98 198.02 1954.856 202.9194 1959.9546 c
208.3706 1965.7759 212.0679 1973.2339 213.4517 1981.0718 c
214.9971 1989.2705 212.1763 1997.5786 208.0181 2004.5752 c
f
0 D
75.0493 2395.7422 m
74.292 2396.0313 73.7329 2396.21 73.4824 2396.2275 C
73.9648 2399.3618 73.8008 2405.1709 73.7925 2405.3682 C
75.5317 2401.2363 75.1733 2396.915 75.0493 2395.7422 C
f
15.2505 2448.811 m
14.6987 2448.7168 14.1328 2448.6084 13.562 2448.4927 C
13.6421 2448.8203 14.272 2448.896 15.2505 2448.811 C
f
0.177246 2442.8345 m
0.32666 2442.8105 0.473145 2442.7876 0.618164 2442.7656 C
0.497559 2442.6768 0.376953 2442.5869 0.256348 2442.4956 C
0.001465 2442.4854 -0.255859 2442.4766 -0.515625 2442.4678 C
-0.297852 2442.5854 -0.067383 2442.7075 0.177246 2442.8345 C
f
51.2485 2243.3101 m
51.6826 2253.3799 45.7158 2261.9678 40.4912 2270.0313 c
34.8682 2278.6191 28.9922 2287.0449 23.8037 2295.9126 c
20.5581 2301.5898 16.8335 2307.2124 15.6133 2313.7485 C
14.9443 2319.1089 9.94531 2322.0557 6.60986 2325.7173 C
4.81982 2330.3813 4.86475 2335.7876 6.95313 2340.3525 C
7.70361 2342.4316 9.24951 2344.2031 11.2651 2345.1528 C
12.9102 2346.0664 14.0674 2344.1948 15.2334 2343.3359 C
18.9668 2339.6113 22.9263 2336.0586 27.6274 2333.5728 C
26.6958 2329.1074 24.9155 2324.6958 25.1504 2320.0854 C
25.7109 2316.3066 30.2124 2316.3154 33.1416 2315.9175 C
33.6475 2313.7393 33.8286 2311.4434 34.7329 2309.373 C
36.4502 2306.3809 38.5117 2303.5874 40.2109 2300.5859 C
41.0693 2297.9824 40.6353 2294.9634 42.2808 2292.6128 C
43.6821 2290.4521 46.168 2288.4365 48.9072 2288.9971 c
54.2588 2290.0005 58.7876 2293.1641 63.4165 2295.8496 C
65.2603 2292.6128 65.5405 2288.6895 67.9448 2285.7339 C
70.3042 2281.5752 74.1011 2277.5435 74.02 2272.5176 C
71.2993 2270.0674 67.873 2268.2686 65.9746 2264.9961 C
64.0674 2262.2573 63.624 2258.8848 62.521 2255.8022 C
58.5977 2251.7979 54.8281 2247.6396 51.2485 2243.3101 C
f
116.5977 1926.0635 m
113.4878 1917.377 113.9761 1907.9209 111.002 1899.1885 c
105.2617 1880.3311 101.9624 1860.7144 94.4321 1842.418 c
91.0146 1834.481 87.0737 1826.6704 81.9297 1819.6914 C
79.1997 1817.1875 76.5327 1814.6294 74.2007 1811.7363 C
70.7471 1820.0347 66.8242 1828.126 63.4609 1836.4604 c
61.8608 1840.0674 63.6963 1843.8911 64.2837 1847.5073 c
65.4141 1853.9707 68.6768 1859.7207 71.1812 1865.6958 C
73.5767 1870.8931 75.3672 1876.3535 78.1147 1881.3799 c
82.5352 1889.5967 86.2324 1898.167 89.8667 1906.7451 C
96.3574 1918.8774 102.875 1931.0356 107.7563 1943.9268 C
110.2334 1952.5054 111.9785 1961.3462 112.2046 1970.2964 C
112.5298 1971.7783 111.9512 1974.4092 114.021 1974.6621 C
115.4497 1973.9663 116.7153 1972.9902 118.0532 1972.1128 C
117.9448 1960.9033 119.8882 1949.8027 119.6895 1938.584 C
120.25 1934.1187 117.8271 1930.186 116.5977 1926.0635 C
f
134.1709 1787.3833 m
133.394 1784.2192 130.772 1782.0044 129.0459 1779.3555 C
127.1377 1783.5859 126.7764 1788.2871 125.3755 1792.6802 C
124.4082 1796.1426 122.7808 1799.4785 122.5278 1803.0942 C
122.998 1809.4673 123.3052 1815.9761 125.7007 1821.9873 c
128.0601 1828.0352 129.8862 1834.3003 132.7612 1840.1309 C
134.7949 1830.3042 135.8887 1820.27 135.7803 1810.2358 c
135.6895 1802.606 136.2686 1794.8228 134.1709 1787.3833 c
f
*U
U
u
1 Ap
1585.4287 1642.2939 m
1585.4287 1616.3652 1497.7383 1595.3467 1389.5664 1595.3467 c
1281.3945 1595.3467 1193.7041 1616.3652 1193.7041 1642.2939 c
1193.7041 1668.2217 1281.3945 1689.2393 1389.5664 1689.2393 c
1497.7383 1689.2393 1585.4287 1668.2217 1585.4287 1642.2939 c
Bb
1 (Unnamed gradient 14) 1389.5664 1595.3467 90 93.8926 1 0 0 1 0 0 Bg
-0.000004 93.8926 395.7246 0.000017 1191.7041 1595.3467 Xm
-0.000386 8822.1992 395.7246 0.000017 1191.7041 -7226.8525 Bc
-0.000004 93.8926 395.7246 0.000017 1191.7041 1595.3467 Bm
-0.000386 8822.1992 395.7246 0.000017 1191.7041 1689.2393 Bc
f
0 BB
*u
0 Ap
1 D
0.75021 0.679683 0.670222 0.90164 k
1514.1162 2058.1797 m
1513.6465 2069.5996 1513.1162 2081.0698 1510.8359 2092.2998 c
1508.8457 2103.71 1505.8359 2115.1396 1499.9258 2125.1899 c
1494.4365 2134.2998 1491.2559 2144.6099 1489.4463 2155.0298 c
1488.8662 2158.8096 1486.5469 2161.9097 1485.166 2165.3799 c
1481.4766 2175.6499 1475.7061 2185.71 1476.4365 2196.9795 C
1477.3164 2203.2295 1480.2969 2208.96 1481.1563 2215.21 C
1483.1865 2225.3296 1484.8359 2235.5195 1486.7861 2245.6499 C
1488.8164 2252.2397 1490.6758 2259.0195 1494.3662 2264.9199 C
1497.1465 2268.7798 1501.377 2271.2798 1504.1865 2275.1196 c
1510.9863 2284.0195 1515.3359 2295.6895 1512.6563 2306.9097 C
1511.6563 2312.8496 1507.5264 2317.5298 1503.5156 2321.7295 C
1496.9561 2326.9395 1489.0361 2330.0298 1481.6963 2333.9097 C
1478.0469 2336.96 1475.5762 2341.1494 1472.0156 2344.2998 c
1464.7168 2351.0098 1456.9668 2357.21 1449.6865 2363.9395 c
1445.7656 2367.6997 1441.0664 2370.6494 1437.6064 2374.8799 C
1434.9961 2378.9199 1434.2363 2383.8096 1433.5566 2388.4795 C
1433.166 2395.0801 1432.2266 2401.6299 1432.1162 2408.25 c
1432.0957 2411.6699 1431.3662 2415.29 1432.8066 2418.54 c
1435.2764 2424.5898 1435.8857 2431.6699 1433.5664 2437.8496 C
1432.6357 2441.0195 1428.6465 2441.8496 1427.877 2445.0801 C
1427.8174 2445.2383 1427.7539 2445.3975 1427.6934 2445.5552 C
1427.2705 2451.9951 1426.6992 2458.2305 1422.9336 2463.9521 c
1418.0371 2471.3906 1411.3652 2473.9404 1403.5576 2477.3457 c
1395.3242 2480.937 1390.5439 2480.0615 1381.9375 2477.7417 c
1368.7393 2474.1855 1347.2324 2466.8799 1352.0059 2448.7598 C
1352.209 2448.9873 1352.418 2449.2051 1352.625 2449.4272 C
1351.3926 2443.2705 1351.833 2436.7012 1353.1758 2430.6597 C
1354.7861 2421.8096 1358.9463 2413.5098 1359.6465 2404.5 C
1358.2266 2400.3096 1355.6563 2396.6299 1353.3965 2392.8599 C
1345.1758 2380.2197 1335.4063 2368.6895 1327.0664 2356.1299 c
1324.0059 2351.46 1320.8965 2346.75 1318.8857 2341.5098 C
1313.9961 2341.9697 1309.0156 2341.3496 1304.1963 2342.4795 C
1299.3965 2343.8994 1295.2656 2346.8096 1290.8965 2349.1396 C
1292.0469 2350.6895 1292.9561 2355.0298 1294.4863 2356.25 C
1301.4512 2357.4014 1321.6797 2349.75 1321.6797 2362.812 c
1321.6797 2366.3174 1319.707 2370.8096 1324.6152 2372.1514 C
1324.7891 2374.041 1324.7754 2375.5698 1323.1309 2376.7681 C
1327.1123 2377.4814 1323.5547 2382.0806 1324.4199 2384.4297 c
1325.6094 2387.6543 1332.2188 2387.5981 1331.0664 2392.1396 C
1328.5957 2396.8496 1324.1162 2400.1797 1321.6563 2404.9297 C
1319.0664 2408.6997 1321.7363 2413.1797 1321.1758 2417.2998 c
1321.0313 2418.7148 1320.8135 2420.1226 1320.5547 2421.5239 C
1321.8027 2424.7109 1322.2949 2427.9541 1320.5361 2431.6826 c
1318.3184 2436.3828 1312.1396 2444.1055 1306.9551 2446.7485 C
1301.6885 2450.9297 1295.2988 2453.7773 1288.7764 2455.1699 c
1278.3877 2457.1865 1267.4707 2458.4434 1257.0166 2456.3799 C
1257.0146 2456.3813 L
1257.0127 2456.3809 1257.0107 2456.3794 1257.0078 2456.3789 c
1255.4395 2456.0688 1253.8809 2455.6885 1252.3359 2455.2197 c
1244.9854 2452.8945 1239.1133 2447.7021 1234.6729 2441.5049 C
1228.166 2435.0791 1222.9551 2427.4556 1220.0713 2419.4238 c
1214.8086 2404.7705 1219.8457 2390.8481 1217.6289 2375.9785 c
1216.3613 2367.4731 1213.127 2359.3638 1212.2236 2350.7944 c
1211.3232 2342.251 1213.3809 2333.8101 1212.8076 2325.2734 c
1212.1875 2316.0249 1208.5322 2307.0215 1209.6816 2297.6611 c
1209.8916 2295.9507 1210.252 2294.292 1210.6836 2292.6577 C
1210.2227 2291.0869 1209.9355 2288.7954 1210.3213 2286.2783 C
1210.2441 2285.7129 1210.457 2284.5527 1210.8242 2282.9282 C
1210.7129 2282.0635 1210.6602 2281.0571 1210.6924 2279.9819 C
1210.6309 2279.0317 1211.0752 2274.6772 1211.2256 2269.0776 C
1211.1445 2268.3789 1211.1572 2267.5166 1211.2715 2266.582 C
1211.2969 2263.4404 1211.207 2260.0352 1210.8799 2256.6812 C
1210.3984 2245.6958 1203.1855 2237.4673 1203.0059 2237.7598 C
1203.1133 2237.4478 1209.543 2243.7998 1211.7227 2253.3105 C
1211.5566 2251.4468 1211.2793 2249.5127 1210.8232 2247.5952 C
1209.2119 2239.1191 1204.8955 2231.7788 1205.0059 2231.7598 C
1204.8896 2231.7876 1209.8242 2238.7119 1212.1943 2247.2451 C
1214.959 2255.6841 1214.3633 2265.1089 1214.1553 2266.3657 c
1215.1348 2258.9189 1214.6563 2252.5732 v
1214.291 2244.1064 1212.3174 2236.0801 1210.6123 2230.4907 C
1209.667 2228.7803 1208.9658 2227.7637 1209.0059 2227.7598 C
1208.9668 2227.7612 1209.5137 2228.4253 1210.335 2229.5928 C
1209.0088 2225.3711 1207.918 2222.7549 1208.0059 2222.7598 C
1207.9063 2222.7627 1209.3691 2225.8198 1211.0957 2230.7104 C
1212.5713 2232.9448 1214.4971 2236.2993 1215.7793 2240.2617 C
1214.6787 2233.9434 1211.916 2228.7734 1212.0059 2228.7598 C
1211.9063 2228.7705 1215.166 2233.5913 1216.9326 2239.876 C
1216.7578 2238.3633 1216.5264 2236.7817 1216.2158 2235.2178 C
1216.1289 2234.6733 1216.0313 2234.1353 1215.9277 2233.6011 C
1213.3428 2227.5068 1209.916 2223.6587 1210.0059 2223.7598 C
1209.9023 2223.6655 1212.7227 2226.4746 1215.4229 2231.2485 C
1214.8311 2228.7305 1214.1514 2226.502 1213.6621 2224.9614 C
1212.2383 2221.7441 1211.0469 2219.7231 1211.0059 2219.7598 C
1211.0313 2219.7236 1211.8662 2220.9106 1213.0293 2222.9346 C
1213.0039 2222.8345 1212.9912 2222.7642 1213.0059 2222.7598 C
1212.9854 2222.7666 1213.0166 2222.8643 1213.0879 2223.04 C
1214.9502 2226.2944 1217.6211 2231.6475 1219.2188 2237.6523 C
1219.418 2238.2813 1219.6055 2238.915 1219.7822 2239.5503 C
1219.7188 2239.0244 1219.6455 2238.458 1219.5635 2237.8647 C
1219.3223 2236.8135 1219.0391 2235.7549 1218.6953 2234.708 C
1216.5488 2227.0923 1211.8799 2220.7988 1212.0059 2220.7598 C
1211.9033 2220.7993 1215.1289 2224.4175 1217.9268 2229.666 C
1217.916 2229.6255 1217.9063 2229.5845 1217.8945 2229.5439 C
1216.3594 2223.2002 1212.9502 2217.7749 1213.0059 2217.7598 C
1212.9404 2217.77 1216.9609 2222.793 1219.2373 2229.0952 c
1219.627 2230.0679 1219.9785 2231.0562 1220.3047 2232.0361 C
1219.3164 2216.5811 1213.0352 2204.5542 1213.0059 2204.7603 C
1212.9473 2204.5703 1216.71 2209.7227 1220.1104 2218.1011 C
1220.0439 2216.6631 1220.0039 2215.7593 1220.0059 2215.7598 C
1220.0029 2215.7607 1220.2744 2217.2827 1220.6758 2219.5337 C
1221.4551 2221.5679 1222.2002 2223.7705 1222.8623 2226.1162 C
1222.9707 2223.8149 1223.127 2221.333 1223.29 2219.0107 C
1222.957 2210.4399 1222.7656 2201.8574 1222.1865 2193.3096 c
1221.5762 2179.4097 1222.5264 2165.4399 1225.1865 2151.7798 c
1226.3965 2146.1099 1223.1465 2140.8496 1222.8965 2135.25 c
1222.2969 2124.7197 1218.127 2114.7695 1217.7363 2104.21 C
1215.2656 2080.8599 1218.3164 2057.48 1219.5264 2034.1699 C
1219.5762 2028.2397 1220.4668 2021.96 1217.9961 2016.3599 c
1215.1758 2009.71 1211.8965 2003.2598 1208.1865 1997.0698 c
1206.3564 1993.9297 1203.6367 1991.3496 1202.1758 1987.9897 C
1201.5469 1984.3999 1203.0664 1980.8198 1202.7266 1977.21 c
1202.0469 1971.0195 1201.1465 1964.6396 1202.4365 1958.4697 C
1204.127 1952.6396 1204.9258 1946.4497 1208.0762 1941.1396 C
1209.6367 1942.1299 1211.8965 1942.98 1211.7266 1945.23 c
1211.4863 1949.8496 1210.166 1954.3696 1210.2266 1959.0195 C
1214.5361 1955.7397 1219.2559 1953.0596 1223.7656 1950.0796 C
1226.5469 1948.4697 1229.2266 1946.2598 1232.6162 1946.2798 C
1232.6357 1947.7695 1232.7764 1949.2896 1232.4561 1950.7397 C
1231.2363 1952.5195 1229.4961 1953.8398 1227.9863 1955.3398 C
1230.6758 1954.71 1233.377 1954.0596 1236.1563 1953.9097 C
1235.5859 1955.9497 1235.5059 1958.5 1233.4863 1959.71 c
1230.7559 1961.4097 1227.7061 1962.4697 1224.8359 1963.8799 C
1228.2559 1962.9097 1232.666 1962.0098 1235.416 1964.8799 C
1238.877 1969.6299 1237.666 1975.8896 1236.8359 1981.2798 C
1235.8965 1986.0796 1238.6963 1990.5098 1238.6465 1995.2695 c
1238.6064 1999.6196 1237.6963 2003.96 1238.1963 2008.3096 c
1238.7559 2013.1499 1237.8262 2018.0195 1238.5566 2022.8398 c
1240.8965 2042.1699 1245.0762 2061.21 1249.0156 2080.2598 c
1250.9561 2089.8896 1251.877 2099.7998 1255.2559 2109.0898 c
1258.0264 2116.5996 1260.9063 2124.1299 1262.5566 2131.9897 c
1264.127 2139.2998 1263.5156 2146.8198 1263.6963 2154.2295 c
1264.1465 2168.3696 1266.9561 2182.3096 1267.5264 2196.4497 C
1271.5957 2188.4897 1274.5361 2179.9897 1277.4063 2171.5498 c
1280.2656 2162.2197 1283.2656 2152.5796 1282.4063 2142.6997 C
1282.0957 2136.1797 1282.2764 2129.5796 1280.877 2123.1597 C
1278.8164 2108.9795 1272.6963 2095.6499 1271.7861 2081.2695 c
1271.2461 2073.5195 1271.9766 2065.7197 1273.6465 2058.1299 c
1275.2061 2050.9297 1276.2266 2043.48 1279.5859 2036.8198 C
1284.416 2028.0298 1282.2559 2017.6699 1281.7969 2008.1597 C
1280.3564 1994.8799 1279.1758 1981.5596 1278.6162 1968.1997 c
1276.9766 1944.1997 1279.1465 1920.1899 1280.666 1896.25 C
1280.6963 1889.5396 1279.1865 1882.9497 1278.6465 1876.2798 c
1277.2168 1863.5498 1272.7861 1851.4897 1268.916 1839.3599 c
1263.7969 1821.96 1264.0859 1803.3096 1267.6162 1785.6299 c
1269.2559 1777.0698 1273.5762 1769.3296 1275.4561 1760.8398 c
1278.1064 1749.5996 1281.2461 1738.48 1283.9668 1727.2598 c
1288.0469 1711.3398 1290.4365 1694.7393 1288.4258 1678.3291 C
1288.877 1675.5596 1288.8965 1672.7695 1287.8857 1670.0898 C
1286.6963 1663.6104 1285.5859 1656.9795 1286.0361 1650.3604 C
1286.7461 1646.2803 1288.2061 1641.4697 1292.2764 1639.5693 C
1300.4365 1636.4502 1309.4668 1637.4092 1317.7559 1639.5303 c
1330.0859 1642.8291 1344.0664 1642.9395 1355.5859 1636.9199 C
1357.877 1632.71 1359.2363 1627.5693 1363.5957 1624.9092 C
1367.4365 1622.0303 1372.5957 1623.0195 1376.7266 1620.9297 C
1380.3965 1618.5498 1384.8564 1620.6104 1388.9063 1619.6299 C
1393.7861 1620.8496 1398.5762 1617.7598 1403.4561 1618.8799 C
1405.8066 1620.1494 1408.2061 1621.3896 1410.2969 1623.0596 C
1411.9561 1625.1895 1410.5361 1628.5596 1407.9961 1629.2002 C
1403.9766 1630.6191 1399.916 1632.1592 1396.7266 1635.0898 C
1399.3262 1635.7393 1402.166 1636.2002 1404.2363 1638.0303 c
1405.7559 1639.3994 1406.3457 1641.75 1405.2764 1643.5596 C
1403.8662 1647.2002 1399.1465 1645.0498 1396.377 1646.54 C
1392.7061 1648.6797 1389.0762 1651.2998 1384.6465 1651.4297 C
1383.4961 1664.2998 1389.0469 1676.4795 1389.5664 1689.2393 C
1389.5156 1696.7393 1391.9961 1703.8604 1393.2861 1711.1699 c
1394.7461 1719.0498 1397.6963 1726.5298 1400.1963 1734.1099 c
1405.1758 1748.8599 1412.2461 1762.75 1418.1865 1777.1099 c
1423.8662 1790.6597 1430.3457 1803.8496 1437.5264 1816.6499 c
1443.0264 1827.0298 1447.8164 1837.8496 1454.7969 1847.3599 C
1453.377 1834.98 1450.4258 1822.7695 1450.3359 1810.2598 c
1450.2461 1800.0498 1450.5859 1789.6499 1453.5156 1779.7998 C
1456.9063 1766.46 1460.627 1753.0796 1461.5859 1739.2896 c
1462.1563 1732.6396 1462.4063 1725.9395 1462.2861 1719.2598 c
1462.0469 1709.5498 1454.7061 1701.8291 1453.7861 1692.2695 C
1453.7969 1687.3896 1456.3164 1683.0098 1457.0664 1678.25 c
1457.9063 1673.7002 1456.7461 1669.0596 1457.5156 1664.4893 C
1457.8164 1661 1459.8359 1657.4395 1458.1357 1654.0098 c
1455.5469 1648.3496 1455.3965 1640.9395 1459.8662 1636.1699 C
1464.166 1633 1469.9561 1633.9199 1474.9863 1633.5898 C
1479.4561 1634.2197 1483.6465 1632.0098 1488.1064 1632.5498 C
1491.4463 1631.71 1494.9463 1631.3799 1498.377 1631.9502 C
1499.8066 1632.3398 1501.6563 1632.4092 1502.3662 1633.96 C
1504.3662 1636.79 1502.7969 1640.2002 1502.7168 1643.29 C
1503.1064 1649.3496 1499.9561 1654.9795 1496.2559 1659.54 c
1492.0156 1664.5303 1489.7363 1670.8994 1488.5762 1677.2598 c
1487.6064 1682.6494 1489.9863 1687.8799 1489.4863 1693.2598 C
1489.2559 1697.3604 1487.4668 1701.1797 1487.3662 1705.2803 c
1487.2168 1709.9395 1487.9463 1714.5498 1488.4258 1719.1592 c
1490.9863 1738.4399 1495.5762 1757.3599 1499.9668 1776.2896 c
1501.7363 1783.2397 1502.166 1790.4297 1503.8359 1797.3999 C
1505.627 1807.5796 1505.6465 1817.98 1505.2363 1828.2798 C
1504.3965 1838.6699 1501.9258 1848.8198 1499.6865 1858.9697 c
1498.5762 1864 1497.0566 1869.0298 1497.2168 1874.2197 c
1497.5859 1886.21 1497.1865 1898.21 1496.4561 1910.1797 c
1495.9063 1918.2695 1497.5059 1926.2695 1498.9258 1934.1797 C
1501.7061 1941.7598 1503.9063 1949.5396 1505.4561 1957.46 C
1508.0156 1974.0195 1509.6865 1990.7197 1513.0762 2007.1499 C
1515.5469 2024.0195 1515.8564 2041.2197 1514.1162 2058.1797 C
f
0 D
1211.8232 2232.8428 m
1213.5254 2238.0005 1215.2988 2244.6904 1216.0039 2251.8379 C
1215.9189 2249.0024 1215.6514 2245.769 1214.9883 2242.6045 C
1214.3965 2238.8677 1213.0742 2235.4565 1211.8232 2232.8428 C
f
1218.4063 1975.3398 m
1219.5762 1978.3599 1219.4063 1982.0298 1222.0469 1984.2998 C
1223.0156 1985.8398 1226.1191 1985.96 1227.75 1985.9897 C
1230 1979.5 1228 1974 1229.75 1968.71 C
1225.96 1969.98 1220.8066 1972.1299 1218.4063 1975.3398 C
f
1324.2461 2303.1597 m
1324.1865 2301.4497 1323.8262 2299.75 1323.9365 2298.0298 C
1321.5469 2299.29 1319.5059 2301.0698 1317.7461 2303.0898 C
1319.9063 2303.0098 1322.0762 2302.9897 1324.2461 2303.1597 C
f
1328.9063 1700.2803 m
1329.1064 1694.6299 1333.0469 1690.1494 1334.627 1684.9092 C
1333.4961 1684.7598 1332.377 1684.6104 1331.2559 1684.4502 C
1328.5859 1688.6396 1326.7461 1693.3398 1326.0664 1698.2695 c
1324.5762 1708.54 1322.9063 1718.7998 1322.1865 1729.1699 c
1320.627 1751.5195 1317.0762 1773.7896 1317.7969 1796.25 c
1318.1563 1814.98 1316.7061 1833.9897 1320.8857 1852.4097 c
1322.0957 1857.6099 1324.877 1862.2197 1326.5762 1867.25 C
1326.8359 1863.3999 1327.4766 1859.5898 1328.5566 1855.8896 c
1329.9561 1851.4297 1328.9766 1846.7695 1328.7969 1842.2197 c
1328.0859 1828.5596 1328.1162 1814.7896 1330.127 1801.23 c
1332.0059 1788.8496 1335.4766 1776.7798 1337.3359 1764.3896 C
1340.3857 1748.4399 1342.3262 1732.2998 1345.3857 1716.3496 C
1341.0762 1714.8604 1336.2061 1713.7197 1333.3066 1709.8896 c
1331.1963 1707.0996 1328.5469 1704.0195 1328.9063 1700.2803 C
f
1358.1357 2340.2197 m
1364.1963 2352.3096 1368.2656 2365.2397 1373.1563 2377.8198 C
1377.1064 2374.6494 1380.8359 2371.2197 1384.377 2367.5996 C
1385.6357 2363.6699 1386.6064 2359.5698 1386.8965 2355.4497 C
1383.8164 2349.3994 1379.377 2342.6997 1372.1963 2341.29 C
1367.5469 2340.5498 1362.8262 2340.4795 1358.1357 2340.2197 C
f
1424.2559 1890.0796 m
1422.3564 1886.1797 1418.7461 1883.5396 1415.5156 1880.7998 C
1409.3457 1876 1403.1758 1870.96 1398.8564 1864.3398 c
1391.0059 1852.7998 1385.377 1839.71 1382.2861 1826.0996 C
1379.5469 1832.0796 1378.5156 1838.7397 1376.916 1845.0996 c
1374.1357 1855.5396 1376.0469 1866.4097 1378.5361 1876.6899 C
1381.0859 1894.5098 1387.8262 1911.3696 1395.0469 1927.75 C
1398.8164 1924.3599 1401.8857 1920.3096 1405.4063 1916.6699 c
1410.4961 1911.0996 1416.3662 1906.2798 1421.3359 1900.5898 C
1423.5469 1897.71 1426.1162 1893.7695 1424.2559 1890.0796 c
f
1438.5566 2003.1396 m
1436.0859 2007.75 1433.5664 2012.3896 1431.7559 2017.2998 C
1432.127 2022.3696 1434.4258 2027.0796 1434.6357 2032.1797 c
1434.7861 2034.5698 1434.8564 2036.96 1434.916 2039.3398 C
1437.5156 2038.2998 1442.3965 2039.0596 1442.7363 2035.3198 C
1440.9258 2024.6597 1438.1963 2014.0396 1438.5566 2003.1396 C
f
*U
U
u
1 Ap
1609.6875 1127.7842 m
1603.8965 1084.2744 1444.5068 1069.5908 1253.6797 1094.9873 c
1062.8525 1120.3848 912.8516 1176.2451 918.6426 1219.7559 c
924.4336 1263.2666 1083.8232 1277.9502 1274.6504 1252.5537 c
1465.4775 1227.1563 1615.4785 1171.2959 1609.6875 1127.7842 c
Bb
1 (Unnamed gradient 15) 1262.1895 1093.8623 88.581 159.8564 0.991259 0.131927 -0.131927 0.991259 1229.6261 -1070.5154 Bg
25.0069 157.8883 694.4418 -109.9883 904.4404 1149.8203 Xm
1360.8347 8592.0107 694.4418 -109.9883 -456.3945 -7442.1904 Bc
25.0069 157.8883 694.4418 -109.9883 904.4404 1149.8203 Bm
1360.8347 8592.0107 694.4418 -109.9883 929.4473 1307.709 Bc
f
0 BB
*u
0 Ap
1 D
0.75021 0.679683 0.670222 0.90164 k
1511.9854 1310.9053 m
1511.9688 1310.9004 1512.6445 1310.4775 1513.6221 1309.9014 C
1511.043 1310.0762 1508.2158 1310.3262 1508.207 1310.2754 C
1508.2139 1310.3271 1510.5215 1309.3936 1512.8564 1308.5293 C
1512.624 1308.5078 1512.375 1308.4863 1512.1074 1308.4648 C
1511.7676 1308.7178 1510.2109 1308.5029 1509.4326 1308.2676 C
1505.6582 1307.9971 1501.1875 1307.6621 1501.2803 1307.127 C
1501.2969 1307.4814 1503.1211 1307.3447 1505.4316 1307.0703 C
1502.6885 1306.2461 1499.9561 1305.3975 1500.0205 1305.2373 C
1500.0176 1305.3721 1501.709 1305.4854 1503.7969 1305.5947 C
1500.375 1304.3662 1495.9717 1302.5615 1496.2422 1302.0889 C
1496.1816 1302.4541 1498.333 1302.9033 1500.835 1303.293 C
1497.4316 1300.9922 1493.4668 1297.9199 1493.7236 1297.6807 C
1493.6621 1297.8652 1495.0371 1298.6328 1496.9043 1299.5449 C
1494.873 1297.5098 1493.8105 1295.0713 1493.7236 1295.1621 C
1493.7891 1295.1025 1494.71 1296.2744 1496.1494 1297.4678 C
1494.4199 1294.8662 1492.8262 1292.1182 1493.0928 1292.0127 C
1493.0137 1292.1123 1493.4131 1292.627 1494.0693 1293.3428 C
1492.71 1290.7949 1491.623 1288.2734 1491.834 1288.2354 C
1491.7334 1288.3428 1492.4824 1289.3838 1493.5439 1290.6846 C
1492.1494 1287.5713 1490.8613 1283.875 1491.2031 1283.8271 C
1491.082 1283.9355 1491.5146 1284.748 1492.2051 1285.8398 C
1492.1475 1285.6563 1492.083 1285.4756 1492.0352 1285.29 C
1491.1045 1282.6621 1491.3457 1280.0078 1491.2031 1280.0479 C
1491.2598 1280.0283 1491.376 1280.4883 1491.6016 1281.1855 C
1491.2002 1279.1475 1491.2949 1276.5576 1490.5654 1274.665 C
1489.3535 1275.1279 1488.1865 1276.0527 1486.8047 1275.9102 c
1484.8428 1275.708 1485.2578 1273.4551 1485.2539 1272.042 c
1485.25 1270.416 1485.3047 1268.7783 1485.1895 1267.1563 c
1485.0859 1265.6904 1484.665 1264.1504 1485.4102 1262.8135 c
1485.7188 1262.2627 1486.54 1261.5898 1485.9326 1260.9346 c
1484.6426 1259.542 1478.2754 1265.5977 1477.1025 1266.5068 c
1474.0488 1268.876 1470.7393 1271.0732 1466.8398 1271.6699 c
1462.0693 1272.4727 1457.6963 1274.7021 1452.9639 1275.6279 c
1447.8438 1276.5244 1442.6201 1275.873 1437.4629 1276.1377 C
1434.3643 1277.1768 1432.0029 1279.708 1429.0176 1281.0215 C
1421.7168 1283.6377 1413.9043 1283.9873 1406.2441 1284.1006 C
1402.8438 1283.5244 1399.5557 1281.8057 1396.0703 1282.042 C
1392.585 1282.958 1389.127 1284.0635 1385.4814 1283.7988 C
1369.2725 1284.9697 1354.0449 1291.1758 1338.5156 1295.4268 C
1334 1296.2295 1329.7217 1297.8916 1325.499 1299.6396 C
1326.0469 1320.1279 1319.1133 1339.918 1318.8867 1360.3682 c
1318.7734 1366.6787 1316.8184 1372.8838 1317.4795 1379.2129 c
1318.1035 1384.2764 1316.8086 1389.292 1317.0449 1394.3555 c
1317.0488 1394.4795 1317.0488 1394.6055 1317.0527 1394.7305 C
1317.6445 1393.4668 1318.0225 1392.7578 1318.0264 1392.7705 C
1318.0078 1392.751 1317.5098 1394.7559 1316.9883 1397.9355 C
1316.8936 1399.249 1316.709 1400.5635 1316.4297 1401.8525 C
1316.2109 1403.6465 1316.0244 1405.6211 1315.9102 1407.6982 C
1316.6211 1406.2871 1317.2539 1405.2412 1317.3975 1405.3652 C
1317.1055 1405.3662 1316.5713 1408.2871 1316.2988 1410.7979 C
1318.6348 1404.5068 1321.2432 1399.7314 1321.1748 1399.6973 C
1321.2207 1399.6895 1320.8438 1402.127 1320.5303 1405.6572 C
1321.7168 1403.3408 1322.8564 1401.4229 1323.0645 1401.5869 C
1322.4766 1401.4951 1319.7861 1412.5166 1320.2529 1413.4648 C
1320.2295 1413.5957 1320.1895 1413.7178 1320.1406 1413.835 C
1320.1406 1413.9834 1320.1377 1414.1299 1320.1387 1414.2773 C
1320.2314 1414.0537 1320.3193 1413.8291 1320.4199 1413.6084 C
1322.7207 1407.2373 1327.5215 1402.8125 1327.4727 1402.8467 C
1327.4951 1402.8262 1323.248 1407.7061 1321.6758 1414.0752 C
1324.2676 1409.4863 1327.4941 1405.999 1327.4727 1405.9951 C
1327.4941 1405.9893 1324.3301 1410.4307 1322.3711 1415.583 c
1322.166 1416.0518 1321.9902 1416.5244 1321.8281 1416.9951 C
1323.8184 1414.1924 1326.2451 1412.3037 1326.2139 1412.292 C
1326.2402 1412.3018 1323.8955 1415.001 1322.5391 1418.3164 c
1321.5605 1420.4072 1321.1172 1422.6221 1320.9121 1424.0703 C
1321.1533 1425.4502 1321.4258 1426.7139 1321.6904 1427.8145 C
1322.1123 1427.4873 1322.5371 1427.1631 1322.9609 1426.8379 C
1323.7588 1425.2129 1324.9307 1423.2178 1326.499 1421.5313 C
1329.3867 1417.8857 1333.8711 1417.3076 1333.7705 1417.3301 C
1333.8047 1417.3057 1329.6289 1418.6006 1327.5527 1422.3555 C
1327.1016 1423.0244 1326.71 1423.7266 1326.3691 1424.4258 C
1327.0137 1424.0166 1327.6689 1423.6221 1328.3516 1423.2686 C
1333.7832 1421.9756 1337.5811 1423.6592 1339.1279 1429.1504 c
1340.0566 1432.4482 1340.207 1431.2129 1342.9355 1431.8154 c
1344.4668 1432.1523 1346.7266 1433.4229 1345.1367 1435.2139 C
1348.5645 1435.001 1347.1631 1437.5322 1348.8008 1439.208 c
1351.0732 1441.5313 1354.8887 1438.1631 1357.25 1440.4063 c
1359.1973 1442.2568 1356.9375 1445.9229 1356.6543 1448.124 c
1356.0869 1452.5449 1356.9824 1456.9805 1360.1758 1460.2412 c
1362.6885 1462.8955 1364.832 1465.9092 1366.1738 1469.3281 c
1366.3545 1469.7822 1366.5352 1470.2402 1366.7148 1470.6982 C
1366.4102 1468.3291 1366.0869 1466.4414 1365.8867 1466.4502 C
1366.2422 1466.2686 1368.666 1473.4063 1369.6924 1477.2813 C
1369.8281 1476.0967 1369.9189 1474.8193 1369.9014 1473.5439 c
1370.0186 1469.2021 1368.3359 1465.1934 1368.4063 1465.1904 C
1368.3242 1465.1924 1370.6475 1468.8936 1371.2334 1473.4268 c
1371.373 1474.2646 1371.4688 1475.1094 1371.5293 1475.9346 C
1371.7314 1474.7842 1371.8906 1473.6631 1371.9707 1472.6143 c
1372.418 1467.0361 1371.4434 1463.3066 1371.5537 1463.3018 C
1371.4355 1463.3184 1373.0723 1466.7803 1373.6406 1472.6064 c
1374.2305 1478.4053 1373.334 1486.4043 1370.6084 1494.0957 c
1365.8018 1509.9873 1351.1406 1521.9746 1348.3926 1522.626 C
1347.0811 1523.2744 1345.7705 1523.6299 1344.543 1523.7549 C
1343.1914 1524.1787 1341.8008 1524.5732 1340.3779 1524.9365 C
1335.9512 1526.5762 1330.9385 1527.3516 1326.0518 1527.29 C
1313.167 1528.2109 1300.0762 1525.7451 1291.9766 1516.9609 c
1291.5781 1516.8281 l
1291.4346 1516.5713 1291.2949 1516.3105 1291.1523 1516.0518 C
1288.8398 1513.3008 1286.999 1509.9678 1285.75 1505.9932 C
1284.252 1503.0254 1283.2393 1498.2354 1282.5605 1493.5215 C
1281.4375 1488.3701 1280.8809 1483.1221 1281.0742 1477.9287 C
1280.5146 1471.9844 1279.3789 1465.8027 1277.4141 1459.9443 C
1272.8975 1457.792 1268.1543 1456.2314 1263.6045 1454.1885 c
1255.7197 1450.6475 1246.6992 1447.3262 1239.8379 1441.9375 c
1225.7822 1430.9004 1218.2178 1409.8438 1218.0127 1392.3711 c
1218.0605 1386.3545 1216.4727 1380.4883 1216.2188 1374.4805 c
1216.0293 1370.1826 1215.9443 1365.8564 1215.3115 1361.5869 c
1214.4707 1355.8154 1215.0469 1349.7695 1212.9316 1344.2148 C
1209.3975 1332.7959 1205.8086 1321.3838 1201.4727 1310.2285 C
1200.0938 1304.9482 1195.4268 1301.5098 1190.9883 1298.8369 C
1182.5332 1294.6709 1174.6182 1289.4854 1167.4482 1283.3643 C
1162.1211 1285.877 1156.6133 1288.002 1151.1348 1290.165 c
1136.0977 1295.5684 1119.7646 1293.4238 1104.3398 1291.1279 c
1091.0205 1289.9766 1077.6924 1288.8613 1064.335 1288.2471 C
1058.8281 1288.5781 1057.8936 1294.7178 1055.3613 1298.459 C
1053.4258 1302.1338 1050.3555 1306.752 1045.5195 1305.7041 C
1040.3896 1303.6074 1037.0938 1298.6377 1034.2217 1294.1045 c
1030.7266 1288.5967 1031.8516 1281.1162 1027.6377 1276.0625 C
1016 1274.665 1004.2305 1275.3545 992.584 1274.333 C
993.6885 1278.4141 995.0205 1282.7686 993.8018 1286.9727 C
991.6387 1291.2139 987.001 1293.877 982.2119 1293.1787 c
973.5879 1292.083 967.1836 1285.5742 959.749 1281.7012 c
952.0693 1277.2998 943.2471 1275.3916 935.6904 1270.7539 c
929.2832 1266.8213 923.0771 1262.5449 918.5928 1256.332 c
917.8564 1255.3115 916.6357 1254.5293 916.3623 1253.2168 c
916.1904 1252.3887 916.2852 1251.6992 915.9414 1250.9141 c
915.415 1249.7148 914.8779 1247.7236 916.6045 1246.9932 C
915.4629 1245.6494 914.7324 1243.5762 916.6982 1242.6221 C
915.6221 1241.0137 915.9189 1239.0889 917.8486 1238.5029 C
917.9092 1237.4746 917.8125 1236.7842 918.6045 1236.0654 c
918.8867 1235.8086 919.4063 1235.7236 919.6152 1235.3994 c
919.8721 1234.998 919.6768 1234.4775 919.7412 1234.0068 c
919.9336 1232.6123 920.8408 1231.0732 922.2227 1230.6074 c
923.8672 1230.0527 924.9492 1231.8135 926.1924 1232.6289 c
927.4609 1233.46 928.6934 1234.2881 930.1074 1234.8584 c
933.8291 1236.3135 936.1719 1239.8174 939.7324 1241.5186 C
950.3887 1242.501 961.1758 1246.5908 971.8496 1243.4268 c
976.8184 1241.7822 982.2217 1243.6152 987.123 1241.6885 c
991.2705 1240.1299 995.7764 1240.876 1000.1025 1240.7529 c
1007.3945 1240.498 1014.584 1242.4531 1021.8848 1241.5557 c
1032.002 1239.6768 1042.5254 1239.0625 1052.0645 1234.8779 c
1063.2109 1229.7959 1075.6797 1229.1064 1087.7236 1228.2656 c
1095.9512 1227.1787 1104.6982 1226.5459 1111.8203 1221.8428 C
1121.0879 1217.1758 1130.3438 1211.9238 1140.7158 1210.2422 C
1143.4746 1208.2119 1145.0615 1204.8486 1146.9316 1202.0059 C
1153.2793 1188.9424 1164.5479 1178.7871 1177.2725 1172.0898 c
1182.6279 1169.1895 1188.6074 1167.8584 1194.2754 1165.7139 C
1191.3281 1163.9092 1188.0693 1162.7188 1184.9893 1161.1895 c
1183.0723 1160.3682 1181.0977 1158.9697 1178.916 1159.6592 C
1175.4023 1160.3955 1171.8311 1161.0479 1168.2227 1160.6885 c
1164.7656 1160.5186 1161.3652 1159.0645 1157.8887 1159.7539 c
1152.8926 1160.708 1147.6396 1161.293 1142.6523 1159.9795 c
1140.0078 1159.3379 1137.8916 1157.1563 1135.209 1156.7969 C
1131.5352 1157.6563 1127.7754 1158.582 1123.9873 1157.9307 C
1122.1836 1157.335 1120.748 1156.0029 1119.0371 1155.2188 C
1115.042 1154.8887 1111.0176 1155.4648 1107.041 1154.8604 c
1102.0352 1154.2744 1097.8496 1150.7422 1092.7109 1150.7139 c
1088.4043 1150.6006 1083.5488 1148.2764 1082.3105 1143.8467 c
1081.5557 1141.126 1083.1709 1138.585 1084.8613 1136.6006 C
1083.9922 1134.9766 1083.0098 1133.1348 1083.6426 1131.2266 C
1084.3711 1130.083 1085.5508 1129.3838 1086.6563 1128.6387 c
1087.1533 1128.3027 1086.917 1126.0137 1087.2666 1125.4404 c
1087.9932 1124.252 1089.2646 1123.6689 1090.6094 1123.4404 C
1090.1357 1121.0576 1092.6299 1120.4092 1094.3125 1119.6553 C
1093.7266 1118.2979 1092.1035 1117.5225 1091.3984 1116.0303 c
1091.1953 1115.6006 1090.75 1111.2021 1091.2002 1111.4365 C
1089.2832 1110.4365 1087.7148 1108.6025 1088.2529 1106.2793 c
1089.0938 1102.6807 1085.9766 1099.7148 1086.6279 1096.0869 C
1086.4014 1093.8682 1088.6211 1092.0537 1090.7461 1092.7813 C
1097.1133 1094.1602 1101.8262 1098.8643 1107.2676 1102.0762 c
1112.9736 1105.6377 1118.3193 1110.0576 1124.9121 1111.8809 c
1137.7129 1115.291 1151.0029 1117.2373 1163.1787 1122.6592 c
1174.373 1127.1836 1185.9629 1130.6787 1197.6758 1133.5879 c
1201.0391 1134.5322 1204.4668 1133.4932 1207.8496 1133.2295 c
1221.7725 1132.9932 1235.5166 1129.9131 1249.4775 1130.3008 c
1258.3564 1130.4893 1267.2646 1129.8096 1276.1348 1130.4424 C
1281.084 1131.3877 1286.1279 1131.0654 1291.1348 1131.2734 c
1294.582 1131.3213 1297.9551 1132.2373 1301.4219 1132.0859 C
1307.3906 1132.2275 1313.4453 1131.5479 1319.3496 1132.7764 c
1324.082 1133.7012 1328.7773 1132.1523 1333.5098 1132.209 c
1339.5176 1132.1436 1345.5342 1131.8311 1351.5322 1132.209 c
1359.6934 1133.0498 1366.5996 1138.5752 1371 1145.2441 c
1372.7295 1148.1914 1373.2676 1151.6201 1373.9766 1154.9072 C
1383.1104 1151.3838 1393.0283 1153.5576 1402.5313 1152.7256 C
1409.0586 1151.3564 1415.7744 1152.0732 1422.3965 1151.9697 C
1428.8955 1152.6406 1436.1406 1154.4912 1442.0352 1150.6289 C
1448.043 1141.8057 1452.501 1131.8125 1460.1055 1124.1611 c
1467.0664 1117.3594 1472.3379 1109.1133 1477.8447 1101.1504 c
1480.7168 1097.0977 1485.1934 1094.3115 1490.0303 1093.2256 c
1493.3555 1092.3369 1497.0957 1091.8936 1500.2891 1093.5371 c
1513.2109 1099.4121 1525.3301 1109.2646 1530.1943 1122.999 C
1531.9609 1126.749 1534.3516 1130.1689 1536.4385 1133.748 c
1539.3574 1138.4336 1541.709 1143.4688 1544.9678 1147.9463 C
1550.418 1139.7373 1554.8965 1129.9043 1564.1436 1125.2754 c
1569.9434 1122.1299 1573.0137 1115.7354 1578.7285 1112.5137 c
1581.8926 1110.6631 1585.6719 1111.4561 1588.9209 1112.627 c
1591.8301 1113.7324 1595.4297 1113.6006 1597.668 1116.0186 c
1600.3027 1118.7578 1602.5986 1121.79 1604.875 1124.8125 c
1608.1816 1129.2041 1608.9268 1134.8066 1610.5605 1139.917 c
1612.1758 1144.7158 1611.9404 1149.8252 1612.7344 1154.7754 c
1613.8105 1161.5195 1613.5938 1168.3584 1613.7637 1175.1602 c
1613.9521 1185.9287 1611.8271 1196.5557 1611.7705 1207.3047 c
1611.5156 1220.8408 1611.1846 1234.4053 1612.375 1247.9033 C
1612.5068 1253.7979 1611.5908 1260.3154 1607.2461 1264.6709 c
1600.0098 1272.2461 1591.5566 1278.6035 1584.9727 1286.7842 c
1582.9805 1289.1641 1580.0264 1290.1816 1577.0205 1290.4902 c
1575.4883 1290.6475 1573.96 1290.6445 1572.4219 1290.6553 c
1571.2041 1290.6641 1569.3877 1290.2744 1568.4063 1291.1143 c
1567.2881 1292.0723 1566.7578 1294.0586 1566.2207 1295.3779 C
1564.9121 1295.4404 1563.8223 1294.25 1563.2871 1293.125 c
1562.8486 1292.2041 1562.9385 1292.0596 1561.7959 1292.2617 c
1560.3027 1292.5254 1558.9424 1292.8301 1557.4844 1293.2734 c
1556.7471 1293.498 1553.5557 1294.4502 1553.4395 1295.3965 c
1553.252 1296.9268 1551.7324 1302.6191 1551.6582 1302.5615 C
1551.6973 1302.5381 1551.5674 1301.2363 1551.3955 1299.7207 C
1551.3867 1299.7432 1551.377 1299.7666 1551.3691 1299.7881 C
1551.25 1300.3154 1551.1758 1300.667 1551.1855 1300.6719 C
1551.1836 1300.6729 1551.1719 1300.6309 1551.1563 1300.5684 C
1551.1582 1300.6172 1551.165 1300.6553 1551.1855 1300.6719 C
1551.1504 1300.7031 1551.0977 1300.6563 1551.0371 1300.5566 C
1550.9785 1302.4121 1551.0557 1305.3369 1551.1855 1305.3955 C
1551.125 1305.4639 1550.4512 1304.1953 1549.793 1302.7832 C
1549.3975 1303.8945 1548.8242 1305.3955 y
1548.582 1304.7627 1548.3047 1304.0166 V
1547.7852 1305.2656 1546.9795 1306.8936 1546.9355 1306.8115 C
1546.9707 1306.7725 1546.8887 1306.2646 1546.7607 1305.6182 C
1546.1172 1306.2373 1545.0586 1306.875 1545.0459 1306.8115 C
1545.0781 1306.7988 1545.0664 1306.5576 1545.0273 1306.2393 C
1542.5127 1308.4854 1539.2393 1311.208 1539.0645 1310.9053 C
1539.2881 1311.0313 1540.668 1309.2373 1542.1348 1307.1943 C
1542.1191 1307.1797 1542.0723 1307.0781 1542.0107 1306.9336 C
1540.8818 1307.8115 1539.2539 1309.4316 1539.3789 1309.6455 C
1539.25 1309.6611 1539.3418 1309.0342 1539.5508 1308.21 C
1539.2129 1308.3965 1538.9248 1308.5439 1538.7295 1308.6289 C
1537.1973 1309.8018 1535.8643 1310.8262 1535.915 1310.9053 C
1535.8525 1310.873 1536.3965 1310.0498 1537.1465 1308.9639 C
1535.4453 1309.7764 1534.0176 1310.3516 1534.0264 1310.2754 C
1534.0879 1310.3154 1535.0928 1309.499 1536.293 1308.4287 C
1533.2285 1309.6611 1528.3711 1311.1201 1528.3584 1310.9053 C
1528.4365 1310.9912 1531.4746 1308.8936 1531.582 1308.6953 C
1531.4844 1308.709 1531.252 1308.7559 1531.2344 1308.7646 C
1531.0811 1309.0303 1526.415 1311.3975 1526.4688 1311.5342 C
1526.3916 1311.4775 1527.0605 1310.7607 1528.0293 1309.7998 C
1525.8975 1310.6191 1523.2617 1311.9463 1523.3203 1312.165 C
1523.1543 1312.0889 1524.5264 1310.5791 1526.1172 1309.1514 C
1525.1621 1308.8242 1520.7344 1311.4248 1519.7383 1312.4531 C
1520.0068 1311.8584 1520.5732 1310.5938 1521.5957 1309.498 C
1519.418 1310.2783 1516.3506 1311.915 1516.3936 1312.1641 C
1516.29 1311.5645 1518.668 1309.4033 1519.0742 1308.8594 C
1518.3682 1309.4004 1517.5957 1309.1338 1516.8066 1309.3262 c
1516.252 1309.4619 1515.8574 1309.7939 1515.3428 1310.0176 c
1514.5449 1310.3662 1512.8457 1311.1514 1511.9854 1310.9053 c
f
0 D
1092.9385 1138.1973 m
1093.165 1138.5186 1093.627 1139.1611 1093.8545 1139.4824 C
1097.3594 1140.2852 1093.7891 1134.9951 1092.9385 1138.1973 C
f
1289.2266 1273.0303 m
1281.6602 1273.417 1274.1504 1272.2646 1266.6221 1271.7266 C
1267.9258 1275.4766 1269.3711 1279.1602 1271.0811 1282.7412 C
1278.5625 1277.9424 1287.9141 1277.7998 1295.9141 1274.2959 C
1296.6699 1273.3037 L
1294.252 1272.4912 1291.7012 1272.9639 1289.2266 1273.0303 c
f
1295.1309 1423.6084 m
1295.3945 1425.1963 1296.1973 1426.708 1297.5859 1427.5674 C
1297.917 1427.7949 1298.2607 1427.9971 1298.6025 1428.2031 C
1299.2871 1426.876 1300.1758 1425.4063 1301.2529 1424.0908 C
1303.2559 1421.3965 1305.873 1419.9326 1306.8887 1419.4268 C
1308.2832 1417.6309 1309.7715 1415.958 1309.8398 1416.0713 C
1309.6533 1416.04 1307.9014 1420.3936 1307.2471 1422.7373 C
1308.5752 1419.3457 1309.8691 1416.7354 1309.8398 1416.7002 C
1309.8496 1416.6914 1309.9014 1416.9404 1309.9883 1417.3721 C
1310.1426 1416.4912 1310.3223 1415.6172 1310.541 1414.7559 C
1310.7295 1413.7217 1310.9434 1412.7031 1311.1738 1411.7021 C
1306.0859 1416.0176 1299.1035 1418.0361 1295.1309 1423.6084 C
f
1375.1094 1252.0596 m
1368.9229 1255.4697 1362.5176 1258.9648 1357.6621 1264.1699 C
1362.8486 1264.208 1368.2803 1265.1709 1373.2578 1263.2529 C
1377.1592 1261.9307 1381.0703 1260.5986 1384.9814 1259.2764 C
1382.5059 1255.9053 1378.4248 1254.4121 1375.1094 1252.0596 C
f
1506.75 1155.002 m
1502.9521 1152.7725 1500.3262 1149.1738 1497.0293 1146.3496 C
1495.5 1151.8467 1494.5264 1157.4863 1492.6836 1162.8896 C
1500.7041 1166.2432 1509.1582 1168.4912 1517.0078 1172.2598 C
1519.2842 1173.1104 1520.4746 1175.3398 1521.457 1177.3984 C
1522.459 1175.6514 1523.5352 1173.9316 1524.7344 1172.2979 C
1520.3047 1165.1094 1513.8057 1159.5176 1506.75 1155.002 C
f
1587.4844 1216.2412 m
1585.624 1206.1055 1580.8535 1196.7539 1579.0215 1186.6084 C
1576.5273 1187.2314 1573.9678 1187.2412 1571.4268 1187.2979 C
1570.3398 1193.9951 1570.9922 1201.1455 1567.7988 1207.3516 c
1563.6055 1215.8721 1556.2559 1222.2666 1548.8887 1228.001 C
1554.1875 1237.3906 1554.8301 1248.3662 1557.749 1258.5586 C
1560.0811 1264.9912 1558.7314 1271.8877 1559.0332 1278.5654 C
1562.207 1278.4238 1565.7402 1279.0381 1568.4229 1276.8936 C
1575.6865 1272.1328 1577.1504 1262.5449 1583.2529 1256.7354 C
1586.0957 1253.4199 1590.8857 1251.9648 1592.8027 1247.9033 C
1590.3564 1237.4756 1589.875 1226.6973 1587.4844 1216.2412 C
f
*U
U
u
1 Ap
257.8384 1114.6875 m
257.8384 1088.7598 170.1479 1067.7412 61.9761 1067.7412 c
-46.1958 1067.7412 -133.8862 1088.7598 -133.8862 1114.6875 c
-133.8862 1140.6152 -46.1958 1161.6338 61.9761 1161.6338 c
170.1479 1161.6338 257.8384 1140.6152 257.8384 1114.6875 c
Bb
1 (Unnamed gradient 14) 61.9761 1067.7412 90 93.8926 1 0 0 1 0 0 Bg
-0.000004 93.8926 395.7246 0.000017 -135.8862 1067.7412 Xm
-0.000328 7494.6094 395.7246 0.000017 -135.8857 -6426.8682 Bc
-0.000004 93.8926 395.7246 0.000017 -135.8862 1067.7412 Bm
-0.000328 7494.6094 395.7246 0.000017 -135.8862 1161.6338 Bc
f
0 BB
*u
0 Ap
1 D
0.75021 0.679683 0.670222 0.90164 k
222.396 1052.1338 m
222.7212 1053.9824 223.8042 1055.7783 223.2847 1057.6807 C
222.2285 1059.2646 220.3711 1060.4971 220.7847 1062.6445 c
221.1807 1065.1533 218.8921 1066.6064 217.1313 1067.874 C
217.4922 1069.7842 217.5273 1071.8975 216.0488 1073.3584 c
214.3848 1075.0928 214.5874 1077.6279 213.5132 1079.6357 C
211.9907 1081.1494 209.71 1081.5986 208.2842 1083.2002 c
201.6201 1091.6416 191.5669 1096.3438 183.8994 1103.7119 c
180.915 1106.5645 178.4326 1110.3408 174.3125 1111.6436 c
170.624 1113.0078 166.6543 1112.0664 162.9917 1111.1328 c
158.0439 1110.0234 153.8628 1106.7402 148.8184 1105.9473 C
144.6108 1105.6396 140.5791 1107.1182 136.5469 1108.0518 c
129.4956 1109.7949 122.7432 1112.4883 116.0088 1115.165 c
107.5669 1118.5625 98.8252 1121.3623 90.6563 1125.377 C
104.4946 1126.3359 118.377 1129.2588 132.2686 1127.2871 c
135.3325 1126.8291 138.4922 1127.1016 141.397 1128.2285 c
144.9014 1129.6113 148.7393 1129.1885 152.4194 1129.3027 c
162.5078 1129.4346 172.8164 1127.5596 181.6899 1122.6123 c
183.334 1121.6953 187.4839 1120.7432 189.1875 1122.1289 c
190.2744 1123.0146 189.7568 1124.1787 189.7588 1125.3945 c
189.7622 1126.8604 190.1763 1127.8926 190.4487 1129.3105 c
190.7261 1130.7559 189.5938 1131.8799 189.6831 1133.0596 c
189.7798 1134.3389 190.646 1135.1025 190.375 1136.4258 c
190.1084 1137.7285 188.9546 1138.542 188.063 1139.4268 C
188.4243 1141.8555 188.6353 1144.5498 187.1475 1146.6533 C
185.3696 1149.9023 181.7598 1151.2578 178.6963 1152.9395 c
174.1367 1155.1748 168.9165 1153.9951 164.145 1153.2383 C
162.5337 1155.3428 160.7734 1157.3408 158.8105 1159.1191 C
167.8511 1166.3643 176.5752 1175.0879 179.8413 1186.541 C
184.2515 1198.2051 181.8398 1211.2607 176.5488 1222.2021 c
169.7876 1236.0762 158.062 1246.6494 146.063 1255.9805 c
143.2905 1258.2256 140.0156 1259.8623 137.5767 1262.4863 C
134.7251 1267.1602 135.6313 1272.9883 136.0542 1278.165 c
136.5469 1284.3799 139.9189 1289.7227 142.4102 1295.2686 c
146.3799 1303.5264 148.6782 1312.5234 153.1938 1320.5342 c
155.7466 1325.2793 159.0566 1329.6104 161.2227 1334.5664 c
162.0762 1336.3008 162.7363 1338.167 163.9863 1339.6543 C
165.2632 1340.2275 166.5396 1340.8037 167.8154 1341.3799 C
167.8477 1339.6602 167.7334 1337.5967 167.2393 1335.5576 c
166.3867 1330.9268 163.7666 1327.0264 163.8247 1327.0166 C
163.7842 1327.0244 164.8828 1328.2715 166.1006 1330.2607 C
162.9209 1323.0771 159.3442 1316.4814 159.4233 1316.4531 C
159.353 1316.5029 163.6025 1323.0186 167.4404 1330.208 c
168.2202 1331.5664 168.9043 1332.9814 169.5039 1334.3906 C
169.3599 1333.6826 169.2007 1332.9736 169.0044 1332.2666 c
167.1855 1324.2314 162.8247 1317.3604 162.9448 1317.333 C
162.8223 1317.3721 167.7114 1323.8496 170.2026 1331.9238 c
170.9917 1334.0947 171.5044 1336.3408 171.8374 1338.4912 C
171.5918 1335.9707 171.146 1333.0537 170.3081 1330.2393 c
168.6655 1323.3145 163.7471 1318.2148 163.8247 1318.2139 C
163.7231 1318.208 169.1455 1322.8525 171.4878 1329.8389 c
172.8882 1333.376 173.668 1337.1318 174.1089 1340.0625 C
173.9561 1336.6357 173.5107 1332.0693 172.2705 1327.6816 c
170.3931 1319.5537 165.498 1312.9443 165.5854 1312.9316 C
165.4858 1312.9414 170.9092 1319.1572 173.4614 1327.3145 c
173.6738 1327.8955 173.8682 1328.4814 174.0537 1329.0693 C
174.0234 1328.9521 173.9995 1328.834 173.9673 1328.7168 c
172.1226 1320.3496 168.1377 1312.9492 168.2261 1312.9316 C
168.1553 1312.9521 170.9297 1317.3096 173.3374 1323.2295 C
170.6206 1314.1982 166.3677 1306.7852 166.4658 1306.7695 C
166.3706 1306.7988 170.8667 1313.623 174.147 1322.3486 C
174.0762 1321.6846 173.9917 1320.9482 173.8926 1320.1582 C
173.228 1316.9023 172.5879 1314.6943 172.6279 1314.6924 C
172.6006 1314.6973 172.9688 1315.6729 173.5 1317.2949 C
173.1626 1315.0293 172.7256 1312.541 172.1655 1310.0938 c
170.7598 1302.875 168.0757 1296.2559 168.2261 1296.2061 C
168.0737 1296.2539 171.3369 1302.626 173.3706 1309.7773 c
173.4653 1310.0723 173.5552 1310.3701 173.646 1310.667 C
174.0825 1311.7637 175.4893 1315.1992 176.8359 1319.5908 C
176.5645 1315.4316 176 1310.8652 174.9302 1306.3877 c
172.2612 1293.0947 166.3042 1281.2734 166.4658 1281.2402 C
166.3027 1281.2822 172.8193 1292.7832 176.1421 1306.0967 c
178.6699 1314.8467 179.2544 1324.1406 179.2949 1330.001 C
179.5117 1331.5596 179.6421 1333.1016 179.6948 1334.5723 C
179.9775 1331.3291 180.0869 1327.8057 179.8413 1324.2412 c
179.5815 1316.5078 178.0737 1308.9834 177.0654 1304.5732 C
176.0703 1302.0791 175.2544 1300.583 175.269 1300.6074 C
175.2505 1300.583 175.8975 1301.6104 176.7939 1303.4053 C
176.376 1301.6436 176.1021 1300.6084 176.1489 1300.6084 C
176.0972 1300.623 176.6475 1301.6953 177.5171 1303.5439 C
177.3105 1302.668 177.0996 1301.7881 176.8833 1300.9102 c
174.1865 1290.6133 174.3696 1280.3271 174.3887 1280.3604 C
174.3706 1280.3584 174.813 1290.5566 178.0923 1300.6084 c
179.5278 1305.2334 180.854 1310.0146 181.8716 1313.9834 C
182.6909 1316.249 183.4922 1318.7012 184.1924 1321.2627 C
184.1025 1319.1299 183.9512 1316.9316 183.71 1314.752 c
182.9063 1304.0479 178.708 1294.4453 178.7905 1294.4453 C
178.6987 1294.4355 183.4922 1303.791 184.9448 1314.582 c
185.3247 1316.8203 185.6099 1319.083 185.8257 1321.2764 C
186.3213 1316.2979 186.5181 1311.6465 186.3701 1307.6289 c
186.0654 1299.1299 184.8398 1293.5781 184.9517 1293.5654 C
184.8384 1293.5869 186.6714 1298.9463 187.9224 1307.5029 c
189.1499 1315.8291 189.2036 1327.1582 188.1001 1338.623 C
188.8311 1336.5566 189.6445 1334.0771 190.3633 1331.4785 C
190.4028 1331.1182 190.4399 1330.7617 190.4751 1330.4072 C
190.4824 1323.5449 189.2168 1319.1084 189.3535 1319.0947 C
189.2554 1319.1113 190.0977 1321.1289 190.9189 1324.6709 C
191.0508 1322.3691 191.0889 1320.8496 191.1147 1320.8555 C
191.0811 1320.8574 191.2725 1323.3125 191.3608 1326.7686 C
191.3931 1326.9355 191.4258 1327.0967 191.457 1327.2695 C
193.0796 1320.75 193.6172 1314.6709 193.7554 1314.6924 C
193.605 1314.6689 193.6177 1321.8213 192.2588 1329.1279 c
192.1738 1329.6875 192.0791 1330.2471 191.9814 1330.8047 C
191.9961 1330.9326 192.0137 1331.0557 192.0283 1331.1865 c
192.2739 1333.3174 192.3667 1335.6738 192.3364 1338.1787 C
192.9614 1334.8809 193.3618 1332.1758 193.5771 1330.3711 C
193.2412 1328.2324 192.8975 1326.9775 192.875 1327.0166 C
192.8906 1326.9707 193.2368 1328.0215 193.6367 1329.8535 C
193.7744 1328.6123 193.8081 1327.9092 193.7549 1327.8975 C
193.8286 1327.873 193.9175 1329.124 193.9292 1331.3008 C
194.8359 1336.1494 195.687 1344.4863 193.4937 1353.0273 c
192.6611 1356.6104 191.7241 1360.1855 190.7993 1363.5303 C
190.79 1363.8203 190.7817 1364.1104 190.7583 1364.3994 C
191.1763 1363.5713 191.604 1362.7041 192.0352 1361.8057 C
192.0156 1361.5176 191.998 1361.3467 191.9951 1361.3496 C
191.9966 1361.3408 192.0254 1361.4863 192.0669 1361.7402 C
193.9873 1357.7275 195.96 1353.0742 197.3574 1348.2852 c
201.3589 1336.0908 196.5874 1324.0859 196.3999 1323.5156 C
196.6079 1324.0742 202.0342 1335.8623 198.5674 1348.583 c
198.3325 1349.5557 198.0737 1350.5195 197.7998 1351.4756 C
199.6333 1347.1191 200.8218 1344.2617 200.8179 1343.8076 C
200.8584 1344.4131 198.7095 1349.8623 195.8037 1357.5566 c
195.6035 1358.1025 195.4004 1358.6416 195.1953 1359.1719 c
194.3203 1361.501 193.3892 1364.0049 192.4385 1366.6191 C
192.4546 1368.4912 192.333 1370.7109 191.9087 1373.0342 C
194.2002 1367.8174 196.2813 1364.4639 196.3999 1364.0391 C
196.2759 1364.5313 193.6909 1369.0498 191.2788 1375.7773 C
190.4766 1379.1953 189.4351 1382.5674 188.5347 1385.2588 C
188.4883 1385.4707 188.4458 1385.6865 188.4014 1385.8994 C
188.4585 1385.8037 188.5171 1385.708 188.5752 1385.6113 C
189.1387 1384.2305 189.7334 1382.8584 190.3535 1381.5088 c
192.4814 1377.0664 194.6831 1372.7373 196.7202 1368.833 C
197.2407 1366.4727 197.3345 1364.8613 197.2769 1364.8701 C
197.3267 1364.8428 197.3667 1366.0693 197.165 1367.9824 C
201.7998 1359.1357 205.46 1352.6865 205.1997 1352.5459 C
205.4902 1352.6709 201.5532 1360.2441 196.853 1370.2109 C
196.394 1372.8652 195.5122 1376.1699 193.8413 1379.3389 c
191.979 1383.0752 190.0854 1386.7959 188.7031 1389.5957 C
188.1362 1391.3682 187.6343 1393.1309 187.2178 1394.8584 C
191.6362 1386.5508 199.1777 1375.627 199.0757 1374.626 C
199.2393 1375.8477 189.71 1392.3516 187.1396 1400.1328 C
187.1475 1400.3193 187.1509 1400.5068 187.1606 1400.6924 C
187.3735 1400.0313 187.6123 1399.3496 187.8804 1398.6523 c
189.9126 1393 193.6484 1386.5098 197.1729 1380.1592 c
200.708 1373.8115 203.7837 1367.3457 205.0029 1362.1572 c
206.2397 1356.9814 205.9678 1353.4131 206.0801 1353.4268 C
205.9663 1353.415 206.4009 1356.9619 205.3828 1362.2432 c
204.3838 1367.5303 201.5522 1374.2168 198.2783 1380.7354 c
195.0088 1387.2607 191.5918 1393.8467 189.8667 1399.3438 c
189.5874 1400.1709 189.3525 1400.9648 189.1489 1401.7275 C
189.6499 1400.2109 190.2681 1398.6211 191.0283 1397.1045 c
193.3887 1391.7568 197.3154 1387.7529 197.2769 1387.7588 C
197.3022 1387.7598 193.8828 1392.1699 192.1807 1397.5781 c
190.7563 1401.4336 190.2124 1405.5361 189.9966 1407.8018 C
190.7446 1405.4541 191.8096 1402.6621 193.0176 1399.7148 C
192.9268 1398.8105 192.9019 1398.3145 192.875 1398.3232 C
192.9009 1398.3145 192.9399 1398.7871 193.0498 1399.6377 C
197.4014 1389.0313 203.5762 1376.4697 203.4717 1375.4961 C
203.6357 1376.5869 197.2202 1392.0459 193.6372 1403.1699 C
194.0664 1405.3008 194.7451 1408.0166 195.8433 1411.1152 c
196.374 1412.8047 197.0479 1414.5967 197.7915 1416.4736 C
197.7988 1415.7275 197.8076 1414.9805 197.8169 1414.2334 c
197.875 1399.5996 207.085 1388.4336 206.9604 1388.6396 C
207.0464 1388.4619 198.4526 1399.9756 199.0625 1414.2861 c
199.1235 1416.2275 199.1934 1418.1865 199.2651 1420.1279 C
199.7866 1421.4092 200.3198 1422.7246 200.8501 1424.0752 C
201.0195 1414.5293 202.353 1405.2412 205.1509 1398.75 c
207.9702 1391.5928 211.5073 1387.8252 211.3623 1387.7588 C
211.5078 1387.8203 208.0903 1391.7041 205.5146 1398.8896 c
202.7104 1405.9971 201.728 1416.2646 202.0752 1426.6328 c
202.0806 1426.8701 202.0879 1427.1084 202.0942 1427.3467 C
203.438 1431.0273 204.6577 1434.9326 205.4351 1439.0342 c
205.8257 1440.7949 206.0454 1442.5703 206.1436 1444.3408 C
207.104 1438.4082 206.9023 1433.9746 206.9487 1433.5674 C
206.9087 1434.04 207.48 1439.9297 206.1919 1447.4658 C
205.9395 1455.6143 203.0356 1463.4248 199.4888 1468.9756 c
197.1782 1472.8623 194.7046 1475.8721 192.6665 1478.042 C
191.9346 1479.6553 189.1802 1484.833 183.2207 1486.6699 c
176.4575 1489.1748 168.9385 1487.7354 167.9976 1487.5859 c
165.9521 1487.1533 164.4995 1486.1201 164.7056 1485.4482 C
158.8535 1486.4268 152.7163 1485.8457 147.2168 1483.7012 C
144.9365 1485.1445 142.6919 1486.6416 140.4824 1488.1738 c
139.3818 1488.8604 138.0176 1489.8984 136.7236 1488.9834 c
134.3325 1487.292 134.4199 1483.291 132.0498 1481.5771 c
130.6763 1480.583 129.4438 1481.4121 128.2393 1480.6826 c
126.104 1479.3906 126.7573 1478.0029 123.4531 1477.543 C
123.4888 1477.5479 121.1738 1475.415 120.6299 1475.1787 c
119.1333 1474.5273 116.9619 1474.4795 115.4248 1474.7695 C
115.8857 1476.627 118.7925 1476.3662 120.2876 1477.6709 C
122.7256 1479.4844 122.7964 1483.1816 125.5781 1484.6436 C
129.2842 1487.0283 132.7441 1489.8633 134.8921 1493.79 C
137.6387 1493.5605 141.8115 1491.792 143.2109 1495.2158 c
144.6724 1499.2295 143.9766 1503.6143 144.7339 1507.7607 C
145.0244 1511.2549 149.2676 1511.502 151.6006 1513.1826 C
152.8364 1515.9697 154.4048 1518.6641 155.7974 1521.4199 C
155.8623 1520.9648 155.9019 1520.6875 y
155.9775 1521.2139 156.0908 1522.0146 V
156.7944 1523.4404 157.4424 1524.8857 157.9634 1526.3721 C
158.145 1523.2295 157.6284 1520.6807 157.6626 1520.6875 C
157.6084 1520.667 159.1362 1524.8096 158.8252 1529.4043 c
158.8247 1529.4268 158.8232 1529.4482 158.8223 1529.4707 C
158.979 1530.2363 159.0918 1531.0146 159.1553 1531.8096 C
160.0596 1526.7861 159.3413 1522.415 159.4233 1522.4482 C
159.3252 1522.4121 160.5977 1527.0977 159.979 1532.6514 C
160.814 1530.4063 161.1548 1528.5928 161.1836 1528.6104 C
161.1382 1528.5908 161.0898 1531.7363 160.0444 1535.1768 C
160.2124 1534.915 160.3784 1534.6523 160.54 1534.3877 c
160.7461 1534.0791 160.937 1533.7666 161.1216 1533.4541 C
161.938 1530.7959 162.0361 1528.5898 162.064 1528.6104 C
162.0391 1528.5898 162.1445 1529.6553 162.0596 1531.2578 c
162.0508 1531.4199 162.0391 1531.5889 162.0264 1531.7627 C
163.293 1529.1328 163.8271 1526.8496 163.8247 1526.8496 C
163.8301 1526.8213 163.5107 1531.0068 161.6499 1534.9541 c
161.5757 1535.1279 161.4995 1535.2998 161.4238 1535.4717 C
161.2583 1536.1113 161.0581 1536.7627 160.8042 1537.4141 c
160.1265 1539.4482 159.1118 1541.3555 158.1709 1542.876 C
157.8564 1543.875 157.4868 1544.8574 157.0664 1545.8213 C
157.9248 1544.7295 158.7813 1543.502 159.5278 1542.167 c
162.2612 1537.5986 164.6621 1532.9775 164.7051 1533.0117 C
164.6514 1532.998 162.8481 1537.8193 160.625 1542.7578 c
158.5674 1547.7988 154.5532 1552.2285 153.7979 1552.6953 c
153.7524 1552.7246 153.708 1552.7471 153.6626 1552.7754 C
152.3462 1554.8213 150.7139 1557.0371 148.75 1559.0918 c
143.2285 1565.5625 135.312 1569.918 134.1621 1570.4092 c
131.7725 1571.3291 129.6797 1571.5273 129.4927 1570.8652 c
129.4868 1570.8438 129.4951 1570.8174 129.4956 1570.7939 C
127.9443 1571.3477 122.4072 1575.165 122.4502 1575.2666 C
122.4116 1575.2578 122.9775 1574.498 123.7861 1573.4951 C
122.8237 1573.7236 121.5366 1574.0088 120.6885 1574.1953 C
116.9951 1575.5508 111.0073 1577.1758 111.0059 1577.0273 C
111.0874 1577.1328 115.6133 1574.834 118.8682 1572.958 C
117.4922 1572.6074 106.5986 1574.0332 106.604 1574.3877 C
106.5547 1574.3037 109.1299 1573.2256 109.3999 1573.1221 C
105.8398 1573.25 102.1328 1573.1563 102.2026 1572.626 C
102.2739 1573.0117 104.2788 1572.7607 106.6963 1572.2842 C
103.25 1571.4287 98.6431 1570.042 98.6816 1569.9854 C
98.6904 1570.0342 101.2651 1570.2168 104.0039 1570.3564 C
103.9419 1570.3301 103.8726 1570.3018 103.8022 1570.2734 c
100.7173 1569.1875 96.1665 1567.9473 96.0405 1568.2246 C
96.0181 1568.0986 96.8208 1568.0479 98.0073 1568.0596 C
94.792 1566.8506 91.605 1565.6553 91.6387 1565.583 C
91.6323 1565.6357 93.0288 1565.8857 94.9302 1566.2178 C
90.8384 1564.1279 86.1494 1561.4648 86.3569 1561.1816 C
86.2866 1561.4453 89.3286 1562.6201 92.7119 1563.7881 C
88.7227 1560.9492 83.5503 1556.9512 83.7158 1556.7803 C
83.6553 1556.917 85.9312 1558.21 88.7026 1559.6895 C
87.8384 1558.9639 86.9736 1558.1699 86.1714 1557.3223 c
82.6055 1553.8291 80.2212 1549.7031 80.1948 1549.7373 C
80.2036 1549.7256 80.6201 1550.25 81.3413 1551.0635 C
79.9141 1548.4414 79.3501 1546.1758 79.314 1546.2168 C
79.355 1546.1738 80.8423 1549.8203 83.7505 1552.7559 C
82.665 1551.085 80.9136 1547.9834 80.0059 1544.6738 c
79.9028 1544.3516 79.8081 1544.0303 79.7183 1543.709 C
79.4829 1543.0605 79.3486 1542.6768 79.314 1542.6953 C
79.3335 1542.6836 79.4092 1542.8066 79.5371 1543.0342 C
78.7832 1540.0732 78.5615 1537.3662 78.4814 1536.2275 C
78.0547 1534.7998 77.7031 1533.3496 77.4692 1531.8633 c
76.8877 1527.8398 73.9385 1524.8994 71.8789 1521.5986 c
68.7275 1516.8809 67.0723 1511.3516 63.877 1506.6689 c
61.6318 1503.7725 58.4272 1501.2451 54.7041 1500.7969 C
49.9502 1501.2373 45.6367 1503.6758 40.874 1504.0537 c
37.5903 1504.3359 34.2891 1504.8818 31.0054 1504.5127 C
22.5195 1502.7959 13.6016 1501.2725 5.05371 1503.4287 c
-0.90625 1504.7852 -7.31494 1505.0752 -13.1157 1502.8564 c
-20.5547 1500.1016 -26.1533 1494.001 -30.4756 1487.5654 c
-36.5415 1478.666 -35.9688 1467.2998 -40.2476 1457.6787 C
-43.1436 1452.2471 -47.3867 1447.7139 -50.7139 1442.5645 c
-53.7783 1438.3125 -55.0898 1433.127 -58.0649 1428.8311 c
-60.6528 1425.1074 -63.0737 1421.2422 -64.667 1416.9639 C
-66.7974 1412.2285 -67.4927 1406.8848 -70.4688 1402.5273 c
-73.3032 1398.2227 -75.1084 1393.3018 -76.0498 1388.248 C
-76.481 1384.3223 -74.8706 1380.3779 -72.3086 1377.4385 c
-66.7798 1370.9238 -60.4067 1364.9902 -52.9326 1360.7646 c
-51.2954 1359.7793 -49.5522 1358.9424 -48.1084 1357.6748 C
-45.8462 1352.3486 -45.1421 1346.4688 -44.8252 1340.7285 c
-44.4907 1336.5127 -46.4004 1332.6475 -47.8184 1328.7998 c
-50.6348 1320.3662 -52.7832 1311.7217 -53.8125 1302.8926 C
-55.9521 1292.4873 -57.2373 1281.6152 -54.4116 1271.2012 C
-52.3428 1260.7168 -45.9165 1251.4551 -37.5537 1244.958 c
-33.8916 1242.0537 -28.9966 1240.8916 -25.9331 1237.2031 c
-23.4419 1234.3418 -20.563 1231.6572 -19.2871 1227.9775 C
-26.0039 1219.9932 -28.645 1209.2803 -28.5742 1199.0146 C
-27.5181 1191.1104 -25.0088 1183.4248 -24.375 1175.4404 C
-31.981 1172.333 -39.7627 1168.8203 -45.6084 1162.8877 c
-50.8115 1157.0684 -51.832 1148.6162 -50.8374 1141.1338 c
-49.3936 1133.7305 -42.9673 1129.0127 -37.1665 1124.9619 C
-38.3105 1119.5137 -39.2876 1113.5361 -36.7964 1108.2891 c
-34.7715 1103.7734 -30.5288 1100.8682 -26.2852 1098.623 c
-20.3257 1095.6035 -13.6709 1093.2705 -6.89209 1094.0635 c
1.33008 1095.2607 9.32324 1098.5264 17.7568 1097.8662 c
25.6621 1097.2939 33.5933 1097.3037 41.5166 1096.9863 c
46.1909 1096.6074 50.8745 1096.1846 55.584 1096.1846 c
67.4067 1096.0264 78.8159 1092.6201 90.3042 1090.2432 c
104.8555 1086.9414 119.5747 1084.1074 133.5977 1078.9043 c
141.0015 1076.1494 148.8364 1074.7402 156.0811 1071.5361 c
164.0747 1068.2178 172.5786 1066.4131 180.73 1063.5781 c
187.8872 1061.0781 192.8877 1055.0479 199.4106 1051.4473 c
202.4917 1049.7393 205.8545 1048.6045 208.9448 1046.8789 c
212.439 1044.959 216.2158 1043.4277 220.1948 1042.8818 c
221.3657 1042.7852 223.0913 1043.0752 223.4609 1044.3877 C
224.6143 1047.0107 223.0996 1049.6426 222.396 1052.1338 C
f
0 D
193.9219 1333.0127 m
193.8687 1337.4883 193.5166 1344.4912 192.3921 1352.3623 C
194.5503 1345.1035 194.438 1337.8799 193.9219 1333.0127 C
f
195.4116 1373.293 m
194.771 1374.6748 194.124 1376.0898 193.4766 1377.5264 C
194.2734 1376.1084 194.9038 1374.6709 195.4116 1373.293 C
f
188.084 1374.9746 m
187.937 1375.2773 187.7896 1375.5703 187.6421 1375.8584 C
187.5479 1376.3447 187.4551 1376.8291 187.3647 1377.3096 C
187.3916 1377.2334 187.4165 1377.1553 187.4429 1377.0781 c
188.0156 1375.5537 188.5947 1374.042 189.1753 1372.5479 C
188.5874 1373.75 188.1899 1374.5898 188.084 1374.9746 C
f
190.126 1375.2432 m
191.0059 1372.9111 191.4995 1370.5557 191.7744 1368.4561 C
190.7246 1371.3721 189.6611 1374.3994 188.6299 1377.459 c
187.9922 1379.4971 187.4331 1381.5684 186.9585 1383.6377 C
187.9985 1381.1611 189.166 1378.208 190.126 1375.2432 C
f
195.4727 1411.2344 m
194.5039 1408.2227 193.9126 1405.5771 193.5415 1403.4707 C
192.207 1407.6455 191.2905 1411.1738 191.2988 1413.0498 C
193.6113 1417.9736 196.1704 1423.0342 197.7041 1428.5117 C
197.729 1425.2334 197.7437 1421.6768 197.7759 1418.0518 C
196.8843 1415.6377 196.0728 1413.3545 195.4727 1411.2344 C
f
201.8682 1453.9209 m
201.7559 1454.6855 201.6328 1455.4404 201.4829 1456.1729 C
201.4492 1456.376 201.4082 1456.5693 201.3721 1456.7686 C
202.5791 1453.667 203.4395 1450.7471 204.0332 1448.3545 c
203.5371 1450.1006 202.8398 1452.0186 201.8682 1453.9209 C
f
204.2056 1439.2373 m
203.7383 1436.2939 203.0229 1433.4248 202.1924 1430.6475 C
202.4307 1437.6953 202.7778 1444.7656 202.2129 1451.0254 C
203.5122 1448.4072 204.2969 1445.876 204.7319 1444.0752 C
204.6719 1442.4697 204.5117 1440.8535 204.2056 1439.2373 c
f
203.8296 1453.5537 m
204.3662 1451.1592 204.6895 1448.6729 204.7471 1446.1406 C
204.2314 1449.3857 203.1841 1454.3555 201.1665 1459.6348 C
202.2417 1457.625 203.1182 1455.5771 203.8296 1453.5537 C
f
200.8291 1426.6396 m
200.8291 1426.5674 200.8301 1426.4951 200.8301 1426.4229 C
200.3433 1425.0088 199.8438 1423.624 199.3452 1422.2744 C
199.6133 1429.4043 199.8755 1436.0791 199.8042 1440.3701 C
199.9844 1442.5645 200.0474 1444.6992 199.9985 1446.7441 c
199.9883 1448.3779 199.877 1449.9375 199.7056 1451.4297 C
200.0625 1450.1992 200.3257 1449.1611 200.5063 1448.374 C
201.0488 1441.71 200.7803 1434.1279 200.8291 1426.6396 c
f
199.4746 1455.5098 m
199.9165 1453.5693 200.2241 1451.4873 200.4307 1449.292 C
200.1958 1450.5127 199.8423 1452.1084 199.3457 1453.9541 C
199.1968 1454.8115 199.0278 1455.6348 198.8433 1456.4258 C
199.0542 1456.1201 199.2646 1455.8154 199.4746 1455.5098 C
f
193.4629 1470.0117 m
194.1978 1469.1514 196.5542 1465.7344 198.2891 1460.2012 C
197.8462 1460.9551 197.4136 1461.6875 196.9985 1462.3877 C
196.4253 1463.8447 195.8623 1465.0313 195.3916 1465.9063 C
194.7471 1467.2754 193.8853 1468.7363 192.7529 1470.1279 C
192.3564 1470.8291 191.9468 1471.5234 191.5205 1472.2061 C
191.7627 1471.9932 192.0049 1471.7773 192.2466 1471.5566 C
192.6602 1471.0752 193.0693 1470.5635 193.4629 1470.0117 C
f
192.5215 1478.1934 m
190.5879 1480.2334 189.0645 1481.5088 188.4878 1482.0313 C
186.9028 1483.3564 185.2979 1484.415 183.833 1485.2295 C
188.7344 1483.8154 191.582 1479.7695 192.5215 1478.1934 C
f
102.9277 1487.7246 m
104.1162 1486.1924 105.2871 1484.6338 106.1582 1482.8916 C
104.0811 1483.6748 102.2061 1484.8633 100.4189 1486.1572 C
101.2461 1486.6855 102.0649 1487.2314 102.9277 1487.7246 C
f
-36.6733 1393.9707 m
-37.7471 1394.5244 -38.8389 1395.0176 -39.9478 1395.4492 C
-38.9883 1398.4502 -36.1367 1400.0791 -33.5835 1401.585 C
-34.1382 1398.8828 -34.895 1396.1533 -36.6733 1393.9707 C
f
64.5107 1213.0479 m
59.5107 1209.4727 53.7002 1207.3516 48.2866 1204.5254 c
43.7964 1202.2197 39.1924 1200.1504 34.5537 1198.1787 C
30.9351 1199.5693 28.479 1202.6777 26.5601 1205.9082 C
27.8628 1207.8271 29.8257 1209.6748 29.6763 1212.1846 c
29.395 1215.6084 30.7593 1218.7695 31.9126 1221.9121 C
32.4409 1223.8662 35.5742 1223.9902 35.2842 1226.3311 C
35.4868 1233.4619 33.8311 1240.4785 32.5376 1247.4414 c
32.3174 1248.7793 33.3735 1249.8975 33.752 1251.1035 C
37.7666 1249.5811 40.9619 1246.6309 44.457 1244.2197 C
48.4536 1241.2529 53.1367 1239.457 57.3799 1236.9043 c
63.1196 1233.4707 69.6074 1231.5957 75.6201 1228.7344 C
77.187 1226.9033 77.7593 1224.4473 78.4634 1222.1768 C
73.7979 1219.1484 69.0615 1216.252 64.5107 1213.0479 c
f
*U
U
u
1 Ap
897.2471 1647.4678 m
897.2471 1621.54 809.5566 1600.5225 701.3848 1600.5225 c
593.2129 1600.5225 505.5225 1621.54 505.5225 1647.4678 c
505.5225 1673.3965 593.2129 1694.415 701.3848 1694.415 c
809.5566 1694.415 897.2471 1673.3965 897.2471 1647.4678 c
Bb
1 (Unnamed gradient 14) 701.3853 1600.5225 90 93.8926 1 0 0 1 0 0 Bg
-0.000004 93.8926 395.7246 0.000017 503.5225 1600.5225 Xm
-0.000356 8134.0186 395.7246 0.000017 503.5229 -6533.4951 Bc
-0.000004 93.8926 395.7246 0.000017 503.5225 1600.5225 Bm
-0.000356 8134.0186 395.7246 0.000017 503.5225 1694.415 Bc
f
0 BB
*u
0 Ap
1 D
0.75021 0.679683 0.670222 0.90164 k
841.7656 1696.7363 m
845.5059 1713.5859 849.7354 1730.3364 853.665 1747.146 C
856.2754 1762.7061 858.7969 1778.5264 857.2461 1794.3462 c
855.9854 1810.0063 850.7559 1824.9463 846.4453 1839.9463 C
843.7461 1847.3364 843.8359 1855.2764 842.9551 1862.9961 c
842.4063 1872.6362 840.2656 1882.2163 841.0254 1891.9063 c
841.6064 1904.0664 844.3457 1916.0063 844.9355 1928.166 c
845.8652 1943.9863 848.0762 1959.686 849.4453 1975.4561 C
851.4668 1987.896 853.0254 2000.4663 852.6758 2013.0864 c
852.9668 2026.0562 849.9854 2038.7261 848.2754 2051.4961 c
846.1953 2066.5962 845.8066 2082.0361 841.3359 2096.7163 C
840.165 2102.9663 836.8965 2108.4761 835.0762 2114.5063 c
832.5254 2124.1563 828.1465 2133.2061 823.6064 2142.0562 C
818.415 2150.5962 812.3564 2158.7661 809.1855 2168.3462 C
808.0254 2174.0762 807.625 2180.1563 809.2051 2185.8462 c
811.7354 2194.7261 810.7969 2204.0659 811.0059 2213.1763 C
812.2354 2225.2964 813.3066 2237.6162 817.5859 2249.1162 C
820.8857 2255.6563 823.0762 2262.6563 824.9961 2269.7061 c
827.1064 2276.646 826.0254 2284.0464 827.8262 2291.0562 c
829.7656 2298.2759 827.5059 2305.6665 824.8965 2312.3862 c
822.665 2318.1265 817.1563 2321.5864 811.9063 2324.2563 c
808.7852 2325.9063 805.1465 2325.9761 801.9258 2327.3364 C
798.0254 2330.7563 794.7354 2334.9165 790.1855 2337.5659 c
782.6758 2342.2163 777.375 2349.4561 770.5059 2354.8862 c
765.7754 2358.646 761.4668 2363.4663 759.9854 2369.4663 c
759.0547 2373.0664 758.2061 2376.6885 757.2705 2380.2871 c
756.624 2382.7705 754.8828 2385.8481 755.0479 2388.4287 C
755.1699 2388.3213 755.3203 2388.2236 755.4453 2388.1172 C
755.3799 2388.3999 755.3379 2389.5713 755.1592 2389.7749 C
755.2725 2389.6455 755.3896 2389.5171 755.5068 2389.3916 C
755.4453 2389.9521 755.2646 2390.502 755.165 2391.0566 C
755.2891 2391.0078 755.4756 2390.9434 755.5957 2390.8945 C
755.5908 2391.124 755.4736 2392.9443 755.3594 2392.9839 C
755.5078 2392.9326 755.668 2392.8994 755.8164 2392.8496 C
755.6416 2393.3145 755.4355 2393.8203 755.3584 2394.3193 C
755.5771 2394.1025 755.9443 2393.8223 756.1875 2393.5674 C
755.9287 2394.0786 755.7598 2394.7168 755.5664 2395.312 C
755.8838 2395.1631 756.1846 2395.0024 756.4688 2394.7988 C
756.0283 2395.7573 755.2568 2397.0674 755.377 2398.126 C
755.752 2397.9053 756.1279 2397.5908 756.4766 2397.2959 C
756.3779 2397.6357 756.0928 2399.4448 755.8584 2399.6074 C
756.1768 2399.3867 756.5469 2399.1875 756.8164 2398.8916 C
756.0879 2400.3838 755.8496 2402.1406 755.1914 2403.6035 C
755.6484 2403.0234 756.8428 2399.5786 757.6084 2399.6089 C
757.3477 2399.5986 755.8398 2406.4697 755.3975 2409.5957 C
756.2461 2407.7373 756.9268 2406.2671 756.9414 2406.2754 C
756.8975 2406.2715 755.043 2417.1152 754.7529 2417.9365 c
754.627 2418.3291 753.6631 2420.9438 753.4141 2421.9976 C
754.3828 2419.6846 755.1104 2417.7085 754.9414 2417.6089 C
755.3535 2417.5991 753.8145 2426.6104 752.7617 2429.6934 C
753.9707 2427.7383 754.8955 2426.2432 754.9414 2426.2754 C
754.873 2426.2441 753.9551 2428.8354 752.8545 2431.7925 C
752.915 2431.6934 752.9531 2431.6216 752.9414 2431.6089 C
753.0098 2431.6245 752.6426 2432.5518 752.0742 2433.8579 c
751.8789 2434.3691 751.6826 2434.877 751.4883 2435.3687 C
752.8154 2434.0977 753.7305 2433.1055 753.6094 2432.9419 C
753.8223 2433.043 752.9111 2434.5469 751.6152 2436.4238 C
751.5049 2436.7788 750.8652 2437.7261 749.9844 2438.8892 C
749.6523 2439.5713 749.3711 2440.0425 749.1777 2440.1855 C
749.1689 2440.1982 749.1602 2440.208 749.1504 2440.2197 C
750.5693 2439.4805 751.6025 2438.9375 751.6094 2438.9419 C
751.6074 2438.9292 747.1758 2443.043 746.8809 2443.1426 C
746.5625 2443.4209 746.2441 2443.6953 745.9316 2443.9648 C
747.1768 2443.5889 748.291 2443.1309 748.2754 2442.9419 C
748.4688 2443.001 747.5254 2444.0869 746.3105 2445.1475 C
746.291 2445.1699 746.2725 2445.1929 746.252 2445.2158 C
747.8105 2444.7061 748.9434 2444.3135 748.9414 2444.2754 C
748.9844 2444.3101 746.8975 2445.6597 744.543 2447.0898 C
744.5029 2447.123 746.3027 2446.4346 746.2754 2446.2754 C
746.5703 2446.4814 743.3184 2449.2573 741.2344 2450.6108 C
743.7744 2449.5977 745.6016 2448.2529 745.6094 2448.2754 C
745.6074 2448.2295 743.0332 2451.0645 739.3652 2452.6943 c
737.1758 2453.7783 734.8047 2454.5186 733.168 2454.9531 C
732.9736 2455.0522 732.7783 2455.1509 732.5801 2455.2495 C
734.7754 2454.9434 736.9385 2454.5044 736.9414 2454.2754 C
737.0518 2454.3945 736.1221 2454.9902 734.8359 2455.6885 C
734.3193 2456.1128 731.9063 2458.1455 728.6328 2458.8618 c
727.5117 2459.1743 726.3574 2459.3525 725.2832 2459.4468 C
728.0703 2459.4678 730.2773 2458.9277 730.2754 2458.9419 C
730.2998 2458.9102 726.6309 2460.5781 722.4258 2460.6313 c
720.7148 2460.7227 718.9932 2460.667 717.5117 2460.5645 C
719.0898 2460.8994 720.2246 2461.0693 720.2754 2460.9419 C
720.3379 2461.1846 716.7148 2461.248 713.0947 2461.0317 C
711.9902 2461.2461 709.2363 2461.7354 706.2842 2461.3901 c
706.1172 2461.3804 705.9521 2461.3623 705.7861 2461.3462 C
707.2012 2462.0264 708.1836 2462.4204 708.2754 2462.2754 C
708.1953 2462.7524 700.3076 2460.2681 695.5635 2458.3691 C
699.4199 2460.4878 702.9512 2461.5967 702.9414 2461.6084 C
702.9678 2461.5938 697.4912 2460.6416 692.3008 2458.0508 c
690.8887 2457.4131 689.5117 2456.6802 688.2344 2455.9395 C
686.7617 2455.4072 685.127 2454.7456 683.5098 2453.9424 c
683.0801 2453.7524 682.6563 2453.5449 682.2383 2453.3311 C
684.2383 2454.7109 685.625 2455.5908 685.6094 2455.6084 C
685.6289 2455.5674 680.2773 2453.0645 675.0371 2449.7622 c
672.6895 2448.3687 670.4688 2446.6782 668.6689 2445.1558 c
668.5732 2445.0742 668.4775 2444.9932 668.3828 2444.9092 c
667.7344 2444.3525 667.1396 2443.8198 666.627 2443.3398 C
667.0762 2444.3374 667.4512 2444.9897 667.6094 2444.9419 C
667.0176 2445.1221 664.627 2441.8008 664.166 2441.3252 c
662.8633 2439.9805 662.3408 2438.2861 661.7852 2436.5303 c
661.4551 2435.4897 661.0234 2430.2583 659.9102 2430.0732 c
658.8711 2429.8994 650.5811 2437.3389 648.5225 2438.8389 c
646.0605 2440.6323 642.9004 2442.4414 639.1426 2443.459 C
635.1445 2444.8945 630.9258 2445.4136 627.3555 2445.5244 C
630.1904 2445.8315 633.334 2445.9131 636.4844 2445.4712 c
645.9258 2444.6553 653.0557 2438.2231 652.9414 2438.2754 C
653.0605 2438.1855 646.4648 2445.2402 636.7168 2446.8677 c
632.5908 2447.7715 628.2969 2447.8408 624.1045 2447.4287 c
620.3535 2447.0601 616.5371 2446.6392 612.8457 2445.8267 c
610.4473 2445.2988 608.0518 2447.2422 605.7061 2447.4385 c
598.6797 2448.0264 590.0566 2444.3828 584.5811 2440.3145 C
575.4648 2434.5815 571.3457 2424.917 571.6094 2424.9424 C
571.3525 2424.9688 576.1504 2434.2139 585.3418 2439.1196 C
585.5684 2439.2632 585.7988 2439.3887 586.0283 2439.5249 C
582.9355 2437.0273 579.8438 2433.6792 577.8232 2429.5557 C
572.168 2420.0313 570.293 2409.5566 570.2754 2409.6089 C
570.2793 2409.5527 572.9023 2419.9023 579.0195 2428.7983 C
580.1367 2430.6899 581.4434 2432.3599 582.8311 2433.8213 C
577.9355 2427.1514 572.8711 2415.5864 572.9414 2415.6089 C
572.8857 2415.5996 569.9844 2406.7314 569.625 2397.5742 c
568.5791 2384.708 570.8672 2372.5225 570.9424 2371.6621 C
570.9414 2372.2173 569.7715 2381.1895 570.458 2391.6357 C
570.7354 2389.1563 571.1826 2386.4219 571.8301 2383.8218 c
573.6504 2376.6406 572.4551 2369.5776 572.2754 2369.6089 C
572.4063 2369.5298 573.5967 2373.7979 573.584 2379.1992 C
574.0566 2377.6816 574.7842 2376.3994 575.248 2371.7588 c
575.5874 2368.3657 574.291 2365.165 574.333 2365.1665 C
574.2773 2365.1567 575.9932 2367.6563 576.5566 2370.9502 C
576.5957 2370.7842 576.6396 2370.6025 576.6768 2370.4434 C
576.7227 2366.0786 575.8066 2362.4658 575.6387 2361.752 C
574.9121 2359.9976 574.2402 2358.9307 574.2754 2358.9424 C
574.1846 2358.9023 576.8789 2362.1895 578.1328 2367.0127 C
578.2061 2362.3091 576.2227 2358.2676 576.2754 2358.2759 C
576.1973 2358.2495 579.1445 2362.5044 579.5059 2367.8638 c
579.5439 2368.1753 579.5752 2368.4873 579.6025 2368.7998 C
579.6914 2368.0186 579.7529 2367.2183 579.7637 2366.4111 c
580.0947 2361.4971 578.2148 2356.9365 578.2754 2356.9424 C
578.1992 2356.9307 580.7695 2361.1772 581.1777 2366.3467 c
581.293 2367.2334 581.3496 2368.125 581.3691 2368.9995 C
581.5967 2368.2432 581.7852 2367.4429 581.8926 2366.6152 C
582.7188 2362.6553 580.8682 2358.9268 580.9414 2358.9424 C
580.874 2358.9229 581.9014 2360.3008 582.625 2362.4463 C
582.7041 2358.4619 581.5371 2354.9404 581.6094 2354.9424 C
581.5195 2354.9443 583.6367 2358.9043 583.9814 2363.6064 c
583.9961 2363.7393 584.0059 2363.873 584.0186 2364.0059 C
584.0439 2363.751 584.0742 2363.4932 584.1094 2363.2329 c
584.3711 2359.6338 582.8818 2356.2686 582.9414 2356.2759 C
582.8887 2356.2764 583.9277 2357.7373 584.7227 2359.9473 C
585.1318 2357.1626 585.5107 2354.915 585.6094 2354.9424 C
585.543 2354.9517 585.5508 2355.9404 585.6006 2357.4063 C
586.5879 2354.4819 587.6426 2352.2891 587.6094 2352.2754 C
587.6543 2352.2754 586.5234 2356.2598 586.1611 2360.4199 c
586.1211 2360.7358 586.0928 2361.0498 586.0693 2361.3623 C
587.4463 2356.958 589.3525 2352.123 589.6094 2352.2754 C
589.4063 2352.2583 588.8936 2354.6143 588.4092 2357.5171 C
589.3184 2355.8086 590.3281 2354.2969 591.0889 2353.2285 C
587.6816 2349.2607 586.1523 2343.9619 582.8359 2339.8862 C
582.4258 2341.9165 582.3066 2344.0464 581.4854 2345.9663 c
580.6465 2347.9663 577.3857 2347.1064 577.4766 2344.9761 C
576.0254 2337.0063 576.2656 2328.8564 574.8564 2320.8862 c
574.3652 2316.9761 571.4453 2313.9263 570.9258 2310.0161 c
570.1465 2305.6064 568.8457 2301.2261 566.2051 2297.5361 c
562.1064 2291.6265 560.3857 2283.6362 563.5957 2276.9663 C
567.2754 2272.0464 572.8066 2268.5259 575.6855 2263.0464 C
572.3857 2254.5361 567.3359 2246.7764 564.4453 2238.0864 c
558.1953 2219.4263 550.5957 2201.2563 544.0469 2182.7061 c
541.3154 2174.8564 540.5957 2166.3564 541.6563 2158.1362 c
542.4668 2152.2764 548.0352 2148.1563 553.6064 2147.2764 c
560.2461 2145.8662 566.9355 2147.7764 573.5352 2148.5264 c
585.8965 2150.0464 598.3359 2151.3462 610.4766 2154.2363 c
615.9355 2155.666 621.3154 2157.4063 626.7754 2158.8462 C
628.2266 2150.7964 628.5566 2142.4561 627.2051 2134.3564 c
622.165 2111.166 604.2559 2093.166 599.877 2069.7363 c
596.6563 2053.626 599.3066 2036.2861 607.627 2022.0762 c
611.3154 2015.626 617.8457 2010.9561 620.0156 2003.626 c
623.7168 1990.5264 624.3652 1976.856 625.877 1963.396 c
627.9766 1942.436 632.0254 1921.6563 638.1152 1901.4863 c
639.7969 1894.4561 642.3652 1887.686 644.3359 1880.7363 c
646.7354 1872.4263 643.9766 1862.9863 637.6758 1857.106 c
630.4854 1850.6162 622.0957 1845.3364 616.1064 1837.5962 c
611.0156 1831.3262 607.1855 1824.146 603.7852 1816.8462 c
599.3652 1807.106 595.877 1796.8164 594.9063 1786.0962 c
594.3262 1778.436 591.8965 1771.106 590.1152 1763.6763 c
586.0254 1747.7163 583.1357 1731.3364 576.665 1716.0967 c
574.4063 1710.5166 571.127 1705.4268 568.8262 1699.876 c
567.1064 1695.7959 566.7266 1691.1963 564.2969 1687.4063 c
561.2461 1682.5264 560.7656 1676.6064 560.0654 1671.0166 c
559.4961 1665.0762 559.7168 1658.126 564.2266 1653.6465 C
568.7969 1650.8164 574.4355 1650.4658 579.6758 1650.3662 c
587.1465 1650.1963 594.2168 1653.3057 601.6758 1653.2559 c
606.5352 1653.2559 611.4766 1653.4961 616.2656 1652.5459 C
630.1602 1647.8096 640.7764 1639.0664 655.5303 1647.7002 c
658.7764 1649.5996 664.7324 1651.208 666.1045 1655.1055 c
669.4883 1664.7178 648.791 1661.7568 644.4375 1663.2471 c
638.6973 1665.21 633.2754 1669.4814 627.665 1672.1357 c
621.5566 1674.9961 616.377 1679.3965 611.2461 1683.6768 c
608.1064 1686.3359 605.915 1690.5264 607.2656 1694.666 c
613.7354 1716.0264 623.627 1736.106 632.0654 1756.7261 c
638.4766 1772.626 647.7168 1787.1362 655.5254 1802.3462 c
659.0352 1808.3862 662.6152 1814.4063 666.9063 1819.9263 C
668.5469 1814.7461 668.665 1809.2661 669.4854 1803.916 c
670.6357 1794.2163 672.6465 1784.646 674.7266 1775.1162 c
676.9551 1765.3062 681.3066 1756.1563 683.8457 1746.436 c
689.9668 1723.2256 695.127 1699.166 692.5059 1675.0459 C
692.543 1665.1621 686.2285 1656.4531 678.125 1651.2393 C
676.3633 1648.7578 673.7461 1646.4121 672.1563 1645.1963 c
669.8213 1643.4111 667.2822 1641.835 664.6211 1640.6455 C
661.876 1638.4268 658.7383 1636.7686 655.5859 1635.2158 c
650.0615 1632.4951 642.9121 1633.4434 637.7607 1630.1123 c
633.1348 1627.1201 631.2559 1621.2041 627.4102 1617.4268 c
624.7656 1614.8291 622.1445 1613.4258 622.6914 1608.9844 c
623.7871 1600.0898 634.8203 1604.8809 640.2754 1606.4063 c
643.9453 1607.5557 647.8564 1606.1563 651.5654 1607.1963 c
656.0566 1608.3164 660.9258 1609.1563 664.5762 1612.2061 c
670.2051 1616.9463 676.8154 1620.416 683.665 1623.0264 C
693.8066 1625.7256 704.3359 1623.8164 714.6563 1624.1162 c
720.9668 1623.9863 727.9961 1624.4863 733.0156 1628.7559 c
735.7969 1630.9756 735.7354 1634.9463 735.625 1638.166 c
734.5566 1649.5264 730.125 1660.3359 730.0254 1671.8164 C
728.3066 1688.5059 728.0352 1705.2959 728.375 1722.0557 c
728.9355 1740.4463 733.2852 1758.6963 731.3154 1777.146 c
729.1758 1792.4761 725.4961 1807.646 719.5254 1821.9561 c
716.3359 1830.0562 712.2266 1837.7964 709.6465 1846.126 C
709.3857 1850.5562 710.5654 1854.916 711.4453 1859.2261 c
713.3359 1868.146 718.0352 1876.0762 721.2656 1884.5161 c
724.3262 1892.2061 728.3652 1899.4463 731.8262 1906.9463 c
734.665 1912.9063 736.8262 1919.1563 739.8262 1925.0361 C
748.6064 1918.5864 756.8965 1911.4463 766.1064 1905.5864 c
770.8154 1902.4561 776.1563 1898.8364 777.5469 1892.9863 c
778.6758 1886.6963 774.0654 1881.606 771.1064 1876.5762 C
765.7969 1868.9663 761.0059 1860.8364 758.7559 1851.7461 c
754.7461 1836.2964 752.7852 1819.8062 756.4063 1804.0864 c
758.1953 1795.2661 757.3359 1786.2261 758.0654 1777.2964 c
759.415 1755.5962 761.8457 1733.2661 755.4063 1712.0859 C
754.5654 1708.1768 751.5859 1705.3262 750.0156 1701.7461 c
747.7168 1696.6865 744.1357 1691.8965 744.0957 1686.1064 c
744.1465 1682.5166 744.0957 1678.1064 747.2969 1675.7158 c
753.0654 1671.2764 759.9961 1668.626 766.8857 1666.4268 c
778.375 1663.1865 788.625 1656.7363 798.4668 1650.1865 C
792.7969 1640.3164 786.3154 1630.5166 777.2354 1623.4658 c
772.9854 1619.9268 770.1357 1615.0762 767.4766 1610.3262 c
765.3857 1606.8359 766.8262 1601.5557 770.8857 1600.2959 C
773.8652 1599.0664 776.8857 1600.8057 779.6855 1601.7461 C
780.665 1600.2256 781.2461 1598.1768 783.0156 1597.3262 C
784.9551 1596.626 786.8262 1597.7461 788.4453 1598.7158 C
789.625 1597.4756 790.7852 1595.876 792.6465 1595.666 C
794.5352 1595.9365 795.8965 1597.3965 797.1758 1598.666 C
798.0859 1597.4063 798.875 1595.6865 800.6953 1595.6162 C
802.9355 1595.0459 803.9551 1597.416 804.9961 1598.8857 C
806.2969 1597.8164 807.6465 1596.2256 809.5059 1596.4268 C
811.7168 1596.8262 812.9355 1598.9268 814.3457 1600.4561 C
816.8457 1603.6865 820.7051 1605.3857 823.665 1608.1162 c
827.9668 1611.9756 830.0469 1617.5859 833.9961 1621.7363 c
836.9766 1624.876 841.2852 1626.3057 844.2852 1629.4063 C
845.5957 1631.5166 845.6953 1634.4365 848.0859 1635.7461 C
850.0957 1637.166 853.415 1638.9463 851.7266 1641.9063 C
849.1758 1645.2461 843.915 1645.4463 841.9258 1649.3662 c
840.6064 1652.0762 838.915 1654.8857 839.3965 1658.0059 c
840.1465 1664.6162 838.1563 1671.1768 838.9258 1677.7764 c
839.6758 1684.126 840.2461 1690.5166 841.7656 1696.7363 c
f
0 D
591.5762 2189.4761 m
593.2266 2193.0063 595.2656 2196.3462 596.7969 2199.9463 c
599.7168 2206.6763 601.7051 2213.7764 604.7354 2220.4663 C
611.7461 2211.186 616.3564 2200.3662 619.5059 2189.2363 C
610.1953 2189.4263 600.8857 2189.6362 591.5762 2189.4761 C
f
670.8652 2390.9858 m
668.0059 2393.3662 665.0566 2396.186 664.6357 2400.0962 C
667.3457 2397.5464 669.2559 2394.3159 670.8652 2390.9858 C
f
660.5645 2425.5137 m
661.2266 2424.2598 660.8262 2423.5322 660.7207 2422.8208 C
660.1729 2423.9023 659.4766 2425.1484 658.6289 2426.3843 C
658.3311 2427.3926 657.792 2428.3423 657.1543 2429.1836 C
658.2021 2428.1211 659.4238 2426.7974 660.5645 2425.5137 C
f
659.2607 2423.8145 m
659.7666 2423.1797 660.2158 2422.5679 660.6025 2422.0156 C
660.54 2421.5918 660.4785 2421.1675 660.415 2420.7461 C
660.3486 2420.8516 660.2871 2420.9619 660.2217 2421.0684 C
660.1074 2421.4077 659.8076 2422.4502 659.2607 2423.8145 C
f
645.8779 2439.6211 m
645.4629 2439.7119 645.04 2439.792 644.6094 2439.8589 C
643.8418 2439.7998 L
643.0664 2440.1431 642.3018 2440.4653 641.5664 2440.7544 C
640.6523 2441.2065 639.7197 2441.6563 638.7998 2442.0879 C
641.4219 2441.5918 643.8018 2440.6724 645.8779 2439.6211 C
f
719.5469 2325.4165 m
716.5859 2323.2661 712.8652 2322.186 709.9854 2319.8062 C
704.1855 2315.8564 701.1465 2309.0762 700.0762 2302.3262 C
699.7559 2299.5864 697.6152 2297.7061 696.0059 2295.6665 C
691.1064 2289.9263 687.1953 2283.436 683.6357 2276.8062 C
676.6953 2282.2261 670.377 2288.3862 664.0566 2294.5063 c
661.0654 2297.3062 659.0566 2300.896 656.8359 2304.2861 C
654.1152 2308.7661 647.2656 2307.4858 644.7852 2312.2163 C
639.9668 2318.3564 640.4258 2326.6963 641.8652 2333.9263 C
642.874 2336.9102 644.2344 2340.6426 647.0293 2342.3193 C
647.6094 2341.8125 648.2559 2341.3311 648.9648 2340.9482 C
651.4395 2339.1992 654.3848 2339.1387 654.2754 2338.9419 c
654.3809 2339.124 651.6104 2339.9351 649.8379 2342.0625 C
649.6934 2342.1973 649.5664 2342.3423 649.4336 2342.4839 C
650.2402 2341.9097 651.1904 2341.3838 652.2168 2341.1025 C
654.9551 2340.1621 657.623 2340.3291 657.6094 2340.2754 C
657.6367 2340.3145 654.9893 2340.9082 652.8281 2342.3799 C
652.2939 2342.708 651.8379 2343.084 651.4395 2343.4688 C
657.1982 2344.1499 664.043 2342.8428 669.041 2346.5386 c
672.9512 2349.4287 670.3574 2353.6709 669.793 2357.5264 c
669.6572 2358.458 669.5732 2359.6265 670.2949 2360.4512 c
671.0059 2361.2632 672.0605 2360.9536 672.6758 2361.5381 c
674.0371 2362.832 673.165 2366.2236 671.6338 2367.1768 C
673.0078 2368.6548 674.1064 2369.8125 673.1143 2371.7314 c
672.6729 2372.584 670.5586 2374.6108 671.6025 2375.5122 c
672.1885 2376.0186 676.5322 2374.7549 677.3652 2374.646 C
678.1855 2372.0659 678.6064 2369.3862 679.5156 2366.8262 C
681.1064 2363.3462 683.9668 2360.5762 685.4453 2357.0361 C
686.5156 2353.6162 686.4668 2349.4561 689.5762 2347.0659 C
691.7051 2344.7261 695.2168 2344.8662 697.9668 2345.8564 c
702.1357 2347.3765 705.915 2349.7461 709.6953 2352.0259 C
711.2266 2348.5864 711.9551 2344.7661 714.1758 2341.646 C
717.3066 2336.8462 720.665 2331.436 719.5469 2325.4165 C
f
769.5957 2002.7563 m
771.2656 2003.8062 772.8359 2005.0063 774.415 2006.2061 C
774.5156 2002.8062 774.7354 1999.4063 774.7559 1995.9961 C
772.7852 1998.0562 770.9668 2000.2661 769.5957 2002.7563 C
f
811.2969 1699.2061 m
810.4551 1694.6563 810.1563 1689.8662 807.9668 1685.6963 C
803.5254 1694.3662 797.4668 1702.4863 795.7754 1712.2959 C
794.3652 1718.4463 795.0469 1724.7861 795.4453 1731.0063 c
796.1465 1749.2363 799.8262 1767.1563 802.2754 1785.186 C
803.0469 1776.3262 803.2354 1767.356 804.9355 1758.6162 C
810.0352 1739.3262 814.2559 1719.2061 811.2969 1699.2061 C
f
*U
U
U
u
1 Ap
0.697627 0.675227 0.638575 0.739559 (R=35 G=31 B=32) 0 0 Xk
1673.5488 874.2168 m
-150.6328 874.2168 L
-150.6328 1000.498 L
1673.5488 1000.498 L
1673.5488 874.2168 L
f
u
*u
0 Ap
0.000031 0.000031 0.000031 0.000031 k
239.3765 921.2217 m
224.1226 960.5928 L
229.7622 960.5928 L
239.9941 931.9912 L
240.8174 929.6992 241.5068 927.5508 242.062 925.5459 c
242.6704 927.6943 243.3779 929.8428 244.1836 931.9912 c
254.8184 960.5928 L
260.1357 960.5928 L
244.7207 921.2217 l
239.3765 921.2217 L
f
*U
*u
264.916 921.2217 m
264.916 960.5928 L
293.3828 960.5928 L
293.3828 955.9463 L
270.126 955.9463 L
270.126 943.8877 L
291.9058 943.8877 L
291.9058 939.2686 L
270.126 939.2686 L
270.126 925.8682 L
294.2959 925.8682 L
294.2959 921.2217 l
264.916 921.2217 L
f
*U
*u
329.584 935.0264 m
334.7939 933.71 L
333.7017 929.4307 331.7368 926.168 328.8994 923.9209 c
326.0615 921.6738 322.5923 920.5508 318.4927 920.5508 c
314.2495 920.5508 310.7988 921.415 308.1396 923.1416 c
305.4814 924.8701 303.458 927.3721 302.0703 930.6484 c
300.6831 933.9248 299.9893 937.4424 299.9893 941.2021 c
299.9893 945.3018 300.7725 948.8789 302.3389 951.9307 c
303.9058 954.9834 306.1348 957.3018 309.0264 958.8867 c
311.9175 960.4717 315.0996 961.2637 318.5732 961.2637 c
322.5117 961.2637 325.8242 960.2607 328.5098 958.2559 c
331.1953 956.251 333.0659 953.4307 334.1226 949.7959 c
328.9932 948.5879 L
328.0801 951.4521 326.7549 953.5381 325.0186 954.8447 c
323.2817 956.1514 321.0977 956.8057 318.4658 956.8057 c
315.4399 956.8057 312.9111 956.0811 310.8789 954.6299 c
308.8472 953.1807 307.4189 951.2324 306.5957 948.79 c
305.772 946.3447 305.3604 943.8252 305.3604 941.2295 c
305.3604 937.8809 305.8481 934.958 306.8242 932.4609 c
307.7998 929.9639 309.3169 928.0967 311.376 926.8613 c
313.4346 925.626 315.6636 925.0088 318.063 925.0088 c
320.981 925.0088 323.4517 925.8506 325.4751 927.5332 c
327.498 929.2158 328.8677 931.7139 329.584 935.0264 c
f
*U
*u
351.2295 921.2217 m
351.2295 955.9463 L
338.2583 955.9463 L
338.2583 960.5928 L
369.4644 960.5928 L
369.4644 955.9463 L
356.4395 955.9463 L
356.4395 921.2217 l
351.2295 921.2217 L
f
*U
*u
372.2305 940.3975 m
372.2305 946.9316 373.9849 952.0479 377.4941 955.7441 c
381.0029 959.4424 385.5327 961.29 391.083 961.29 c
394.7173 961.29 397.9937 960.4219 400.9121 958.6855 c
403.8301 956.9482 406.0547 954.5273 407.5859 951.4209 c
409.1162 948.3145 409.8818 944.792 409.8818 940.8535 c
409.8818 936.8604 409.0762 933.2891 407.4648 930.1377 c
405.8535 926.9863 403.5708 924.6016 400.6167 922.9814 c
397.6626 921.3604 394.4756 920.5508 391.0562 920.5508 c
387.3501 920.5508 384.0376 921.4463 381.1196 923.2363 c
378.2012 925.0264 375.9902 927.4697 374.4863 930.5674 c
372.9824 933.665 372.2305 936.9414 372.2305 940.3975 c
f
1 D
377.6016 940.3164 m
377.6016 935.5713 378.877 931.835 381.4287 929.1045 c
383.9795 926.374 387.1797 925.0088 391.0293 925.0088 c
394.9502 925.0088 398.1772 926.3877 400.7109 929.1445 c
403.2441 931.9014 404.5107 935.8135 404.5107 940.8799 c
404.5107 944.085 403.9692 946.8818 402.8857 949.2725 c
401.8027 951.6631 400.2183 953.5156 398.1328 954.8311 c
396.0469 956.1475 393.7056 956.8057 391.1099 956.8057 c
387.4214 956.8057 384.248 955.5391 381.5898 953.0049 c
378.9307 950.4717 377.6016 946.2422 377.6016 940.3164 c
f
*U
*u
0 D
416.6763 921.2217 m
416.6763 960.5928 L
434.1323 960.5928 L
437.6411 960.5928 440.3091 960.2393 442.1353 959.5313 c
443.9614 958.8242 445.4204 957.5752 446.5127 955.7852 c
447.6045 953.9941 448.1509 952.0156 448.1509 949.8506 c
448.1509 947.0566 447.2466 944.7021 445.4385 942.7871 c
443.6299 940.8711 440.8369 939.6533 437.0596 939.1348 c
438.438 938.4717 439.4854 937.8184 440.2017 937.1738 c
441.7231 935.7773 443.1646 934.0322 444.5254 931.9375 c
451.3735 921.2217 L
444.8208 921.2217 L
439.6108 929.4131 L
438.0889 931.7764 436.8354 933.585 435.8511 934.8379 c
434.8662 936.0908 433.9844 936.9678 433.2061 937.4697 c
432.4268 937.9707 431.6348 938.3193 430.8291 938.5166 c
430.2383 938.6416 429.2715 938.7051 427.9287 938.7051 c
421.8862 938.7051 L
421.8862 921.2217 l
416.6763 921.2217 L
f
1 D
421.8862 943.2168 m
433.085 943.2168 L
435.4658 943.2168 437.3281 943.4629 438.6709 943.9561 c
440.0137 944.4482 441.0342 945.2354 441.7324 946.3184 c
442.4307 947.4014 442.7798 948.5781 442.7798 949.8506 c
442.7798 951.7119 442.104 953.2432 440.752 954.4424 c
439.4004 955.6416 437.2651 956.2412 434.3472 956.2412 c
421.8862 956.2412 l
421.8862 943.2168 L
f
*U
*u
0 D
469.8232 933.8711 m
474.7378 934.3008 L
474.9702 932.3311 475.5122 930.7148 476.3623 929.4531 c
477.2129 928.1904 478.5332 927.1699 480.3237 926.3916 c
482.1138 925.6123 484.1279 925.2236 486.3662 925.2236 c
488.3535 925.2236 490.1079 925.5186 491.6299 926.1104 c
493.1514 926.7002 494.2842 927.5107 495.0273 928.54 c
495.77 929.5693 496.1416 930.6924 496.1416 931.9102 c
496.1416 933.1465 495.7832 934.2246 495.0674 935.1475 c
494.3511 936.0684 493.1694 936.8428 491.5225 937.4697 c
490.4658 937.8809 488.1294 938.5215 484.5132 939.3896 c
480.8965 940.2588 478.3633 941.0771 476.9131 941.8467 c
475.0332 942.8311 473.6323 944.0537 472.71 945.5127 c
471.7881 946.9717 471.3271 948.6055 471.3271 950.4141 c
471.3271 952.4014 471.8911 954.2588 473.019 955.9863 c
474.147 957.7139 475.7939 959.0254 477.9604 959.9209 c
480.1265 960.8154 482.5347 961.2637 485.1846 961.2637 c
488.1025 961.2637 490.6768 960.7939 492.9053 959.8545 c
495.1348 958.9131 496.8486 957.5303 498.0483 955.7041 c
499.2476 953.8779 499.8921 951.8105 499.9819 949.501 c
494.9868 949.125 L
494.7183 951.6133 493.8096 953.4932 492.2607 954.7646 c
490.7124 956.0352 488.4248 956.6709 485.3994 956.6709 c
482.248 956.6709 479.9521 956.0938 478.5107 954.9395 c
477.0698 953.7842 476.3491 952.3916 476.3491 950.7627 c
476.3491 949.3486 476.8594 948.1846 477.8799 947.2725 c
478.8823 946.3584 481.501 945.4229 485.7354 944.4648 c
489.9692 943.5078 492.874 942.6699 494.4497 941.9541 c
496.7412 940.8975 498.4331 939.5596 499.5254 937.9395 c
500.6172 936.3193 501.1641 934.4521 501.1641 932.3398 c
501.1641 930.2451 500.5635 928.2725 499.3643 926.4189 c
498.1646 924.5654 496.4414 923.124 494.1943 922.0947 c
491.9478 921.0654 489.4185 920.5508 486.6079 920.5508 c
483.0449 920.5508 480.0596 921.0703 477.6514 922.1084 c
475.2437 923.1465 473.3545 924.709 471.9854 926.7939 c
470.6152 928.8799 469.8945 931.2393 469.8232 933.8711 c
f
*U
*u
509.166 921.2217 m
509.166 960.5928 L
514.377 960.5928 L
514.377 921.2217 l
509.166 921.2217 L
f
*U
*u
523.3457 921.2217 m
523.3457 960.5928 L
528.5566 960.5928 L
528.5566 925.8682 L
547.9463 925.8682 L
547.9463 921.2217 l
523.3457 921.2217 L
f
*U
*u
554.3105 921.2217 m
554.3105 960.5928 L
559.5205 960.5928 L
559.5205 944.4248 L
579.9844 944.4248 L
579.9844 960.5928 L
585.1943 960.5928 L
585.1943 921.2217 L
579.9844 921.2217 L
579.9844 939.7793 L
559.5205 939.7793 L
559.5205 921.2217 l
554.3105 921.2217 L
f
*U
*u
592.2842 940.3975 m
592.2842 946.9316 594.0391 952.0479 597.5479 955.7441 c
601.0576 959.4424 605.5869 961.29 611.1377 961.29 c
614.7715 961.29 618.0479 960.4219 620.9658 958.6855 c
623.8848 956.9482 626.1094 954.5273 627.6396 951.4209 c
629.1709 948.3145 629.9365 944.792 629.9365 940.8535 c
629.9365 936.8604 629.1299 933.2891 627.5186 930.1377 c
625.9072 926.9863 623.625 924.6016 620.6709 922.9814 c
617.7168 921.3604 614.5303 920.5508 611.1104 920.5508 c
607.4043 920.5508 604.0918 921.4463 601.1738 923.2363 c
598.2559 925.0264 596.0439 927.4697 594.54 930.5674 c
593.0361 933.665 592.2842 936.9414 592.2842 940.3975 c
f
1 D
597.6553 940.3164 m
597.6553 935.5713 598.9316 931.835 601.4824 929.1045 c
604.0342 926.374 607.2344 925.0088 611.083 925.0088 c
615.0049 925.0088 618.2314 926.3877 620.7646 929.1445 c
623.2979 931.9014 624.5654 935.8135 624.5654 940.8799 c
624.5654 944.085 624.0234 946.8818 622.9404 949.2725 c
621.8564 951.6631 620.2725 953.5156 618.1865 954.8311 c
616.1006 956.1475 613.7598 956.8057 611.1641 956.8057 c
607.4756 956.8057 604.3027 955.5391 601.6436 953.0049 c
598.9854 950.4717 597.6553 946.2422 597.6553 940.3164 c
f
*U
*u
0 D
662.4844 960.5928 m
667.6943 960.5928 L
667.6943 937.8457 L
667.6943 933.8887 667.2471 930.7471 666.3516 928.4189 c
665.4561 926.0918 663.8408 924.1982 661.5039 922.7393 c
659.168 921.2803 656.1016 920.5508 652.3057 920.5508 c
648.6182 920.5508 645.6016 921.1865 643.2559 922.457 c
640.9102 923.7285 639.2363 925.5684 638.2334 927.9756 c
637.2314 930.3838 636.7295 933.6738 636.7295 937.8457 c
636.7295 960.5928 L
641.9404 960.5928 L
641.9404 937.8721 L
641.9404 934.4521 642.2578 931.9326 642.8936 930.3135 c
643.5283 928.6924 644.6211 927.4434 646.1699 926.5664 c
647.7178 925.6895 649.6113 925.251 651.8496 925.251 c
655.6807 925.251 658.4111 926.1182 660.04 927.8555 c
661.6699 929.5918 662.4844 932.9307 662.4844 937.8721 c
662.4844 960.5928 L
f
*U
*u
676.4766 921.2217 m
676.4766 960.5928 L
704.9434 960.5928 L
704.9434 955.9463 L
681.6865 955.9463 L
681.6865 943.8877 L
703.4658 943.8877 L
703.4658 939.2686 L
681.6865 939.2686 L
681.6865 925.8682 L
705.8564 925.8682 L
705.8564 921.2217 l
676.4766 921.2217 L
f
*U
*u
723.0693 921.2217 m
723.0693 955.9463 L
710.0986 955.9463 L
710.0986 960.5928 L
741.3047 960.5928 L
741.3047 955.9463 L
728.2803 955.9463 L
728.2803 921.2217 l
723.0693 921.2217 L
f
*U
*u
756.667 921.2217 m
756.667 955.9463 L
743.6953 955.9463 L
743.6953 960.5928 L
774.9014 960.5928 L
774.9014 955.9463 L
761.876 955.9463 L
761.876 921.2217 l
756.667 921.2217 L
f
*U
*u
780.3535 921.2217 m
780.3535 960.5928 L
808.8203 960.5928 L
808.8203 955.9463 L
785.5635 955.9463 L
785.5635 943.8877 L
807.3428 943.8877 L
807.3428 939.2686 L
785.5635 939.2686 L
785.5635 925.8682 L
809.7334 925.8682 L
809.7334 921.2217 l
780.3535 921.2217 L
f
*U
*u
830.4385 933.8711 m
835.3525 934.3008 L
835.5859 932.3311 836.127 930.7148 836.9775 929.4531 c
837.8281 928.1904 839.1484 927.1699 840.9385 926.3916 c
842.7295 925.6123 844.7432 925.2236 846.9814 925.2236 c
848.9688 925.2236 850.7236 925.5186 852.2451 926.1104 c
853.7666 926.7002 854.8994 927.5107 855.6426 928.54 c
856.3848 929.5693 856.7568 930.6924 856.7568 931.9102 c
856.7568 933.1465 856.3984 934.2246 855.6826 935.1475 c
854.9668 936.0684 853.7852 936.8428 852.1377 937.4697 c
851.0811 937.8809 848.7451 938.5215 845.1279 939.3896 c
841.5117 940.2588 838.9785 941.0771 837.5283 941.8467 c
835.6484 942.8311 834.2471 944.0537 833.3252 945.5127 c
832.4033 946.9717 831.9424 948.6055 831.9424 950.4141 c
831.9424 952.4014 832.5068 954.2588 833.6338 955.9863 c
834.7627 957.7139 836.4092 959.0254 838.5752 959.9209 c
840.7422 960.8154 843.1504 961.2637 845.7998 961.2637 c
848.7178 961.2637 851.292 960.7939 853.5205 959.8545 c
855.75 958.9131 857.4639 957.5303 858.6631 955.7041 c
859.8633 953.8779 860.5078 951.8105 860.5967 949.501 c
855.6025 949.125 L
855.333 951.6133 854.4248 953.4932 852.876 954.7646 c
851.3271 956.0352 849.04 956.6709 846.0146 956.6709 c
842.8633 956.6709 840.5674 956.0938 839.126 954.9395 c
837.6846 953.7842 836.9639 952.3916 836.9639 950.7627 c
836.9639 949.3486 837.4746 948.1846 838.4951 947.2725 c
839.498 946.3584 842.1162 945.4229 846.3506 944.4648 c
850.584 943.5078 853.4893 942.6699 855.0654 941.9541 c
857.3564 940.8975 859.0488 939.5596 860.1406 937.9395 c
861.2324 936.3193 861.7783 934.4521 861.7783 932.3398 c
861.7783 930.2451 861.1787 928.2725 859.9795 926.4189 c
858.7803 924.5654 857.0566 923.124 854.8096 922.0947 c
852.5625 921.0654 850.0342 920.5508 847.2236 920.5508 c
843.6602 920.5508 840.6748 921.0703 838.2666 922.1084 c
835.8584 923.1465 833.9697 924.709 832.6006 926.7939 c
831.2305 928.8799 830.5098 931.2393 830.4385 933.8711 c
f
*U
*u
869.0029 921.2217 m
869.0029 960.5928 L
897.4697 960.5928 L
897.4697 955.9463 L
874.2129 955.9463 L
874.2129 943.8877 L
895.9932 943.8877 L
895.9932 939.2686 L
874.2129 939.2686 L
874.2129 925.8682 L
898.3828 925.8682 L
898.3828 921.2217 l
869.0029 921.2217 L
f
*U
*u
915.5967 921.2217 m
915.5967 955.9463 L
902.626 955.9463 L
902.626 960.5928 L
933.832 960.5928 L
933.832 955.9463 L
920.8076 955.9463 L
920.8076 921.2217 l
915.5967 921.2217 L
f
*U
*u
954.1885 944.2373 m
954.1885 949.7432 L
959.6934 949.7432 L
959.6934 944.2373 l
954.1885 944.2373 L
f
954.1885 921.2217 m
954.1885 926.7275 L
959.6934 926.7275 L
959.6934 921.2217 l
954.1885 921.2217 L
f
*U
*u
1012.1162 935.0264 m
1017.3262 933.71 L
1016.2344 929.4307 1014.2686 926.168 1011.4316 923.9209 c
1008.5938 921.6738 1005.125 920.5508 1001.0244 920.5508 c
996.7822 920.5508 993.3311 921.415 990.6719 923.1416 c
988.0137 924.8701 985.9902 927.3721 984.6025 930.6484 c
983.2148 933.9248 982.5215 937.4424 982.5215 941.2021 c
982.5215 945.3018 983.3047 948.8789 984.8711 951.9307 c
986.4375 954.9834 988.667 957.3018 991.5586 958.8867 c
994.4492 960.4717 997.6318 961.2637 1001.1055 961.2637 c
1005.0439 961.2637 1008.3564 960.2607 1011.042 958.2559 c
1013.7275 956.251 1015.5986 953.4307 1016.6553 949.7959 c
1011.5254 948.5879 L
1010.6123 951.4521 1009.2871 953.5381 1007.5508 954.8447 c
1005.8145 956.1514 1003.6299 956.8057 1000.998 956.8057 c
997.9727 956.8057 995.4434 956.0811 993.4111 954.6299 c
991.3789 953.1807 989.9512 951.2324 989.1279 948.79 c
988.3047 946.3447 987.8926 943.8252 987.8926 941.2295 c
987.8926 937.8809 988.3799 934.958 989.3564 932.4609 c
990.332 929.9639 991.8496 928.0967 993.9082 926.8613 c
995.9668 925.626 998.1963 925.0088 1000.5947 925.0088 c
1003.5137 925.0088 1005.9844 925.8506 1008.0068 927.5332 c
1010.0303 929.2158 1011.4004 931.7139 1012.1162 935.0264 c
f
*U
*u
1022.1592 940.3975 m
1022.1592 946.9316 1023.9141 952.0479 1027.4229 955.7441 c
1030.9326 959.4424 1035.4619 961.29 1041.0127 961.29 c
1044.6465 961.29 1047.9229 960.4219 1050.8408 958.6855 c
1053.7598 956.9482 1055.9844 954.5273 1057.5146 951.4209 c
1059.0459 948.3145 1059.8115 944.792 1059.8115 940.8535 c
1059.8115 936.8604 1059.0049 933.2891 1057.3936 930.1377 c
1055.7822 926.9863 1053.5 924.6016 1050.5459 922.9814 c
1047.5918 921.3604 1044.4053 920.5508 1040.9854 920.5508 c
1037.2793 920.5508 1033.9668 921.4463 1031.0488 923.2363 c
1028.1309 925.0264 1025.9189 927.4697 1024.415 930.5674 c
1022.9111 933.665 1022.1592 936.9414 1022.1592 940.3975 c
f
1 D
1027.5303 940.3164 m
1027.5303 935.5713 1028.8066 931.835 1031.3574 929.1045 c
1033.9092 926.374 1037.1094 925.0088 1040.958 925.0088 c
1044.8799 925.0088 1048.1064 926.3877 1050.6396 929.1445 c
1053.1729 931.9014 1054.4404 935.8135 1054.4404 940.8799 c
1054.4404 944.085 1053.8984 946.8818 1052.8154 949.2725 c
1051.7314 951.6631 1050.1475 953.5156 1048.0615 954.8311 c
1045.9756 956.1475 1043.6348 956.8057 1041.0391 956.8057 c
1037.3506 956.8057 1034.1777 955.5391 1031.5186 953.0049 c
1028.8604 950.4717 1027.5303 946.2422 1027.5303 940.3164 c
f
*U
*u
0 D
1092.3604 960.5928 m
1097.5703 960.5928 L
1097.5703 937.8457 L
1097.5703 933.8887 1097.123 930.7471 1096.2275 928.4189 c
1095.332 926.0918 1093.7168 924.1982 1091.3799 922.7393 c
1089.0439 921.2803 1085.9775 920.5508 1082.1826 920.5508 c
1078.4941 920.5508 1075.4775 921.1865 1073.1318 922.457 c
1070.7861 923.7285 1069.1123 925.5684 1068.1104 927.9756 c
1067.1074 930.3838 1066.6064 933.6738 1066.6064 937.8457 c
1066.6064 960.5928 L
1071.8154 960.5928 L
1071.8154 937.8721 L
1071.8154 934.4521 1072.1338 931.9326 1072.7695 930.3135 c
1073.4043 928.6924 1074.4971 927.4434 1076.0459 926.5664 c
1077.5938 925.6895 1079.4873 925.251 1081.7256 925.251 c
1085.5566 925.251 1088.2871 926.1182 1089.917 927.8555 c
1091.5459 929.5918 1092.3604 932.9307 1092.3604 937.8721 c
1092.3604 960.5928 L
f
*U
*u
1106.2441 921.2217 m
1106.2441 960.5928 L
1121.0947 960.5928 L
1123.709 960.5928 1125.7051 960.4668 1127.084 960.2158 c
1129.0176 959.8936 1130.6377 959.2803 1131.9443 958.376 c
1133.252 957.4727 1134.3037 956.2061 1135.1006 954.5771 c
1135.8965 952.9473 1136.2959 951.1563 1136.2959 949.2061 c
1136.2959 945.8574 1135.2305 943.0244 1133.0996 940.7061 c
1130.9688 938.3867 1127.1201 937.2275 1121.5518 937.2275 c
1111.4541 937.2275 L
1111.4541 921.2217 l
1106.2441 921.2217 L
f
1 D
1111.4541 941.874 m
1121.6318 941.874 L
1124.998 941.874 1127.3887 942.501 1128.8027 943.7539 c
1130.2168 945.0068 1130.9248 946.7705 1130.9248 949.0439 c
1130.9248 950.6914 1130.5078 952.1016 1129.6758 953.2734 c
1128.8428 954.4463 1127.7461 955.2217 1126.3857 955.5967 c
1125.5088 955.8291 1123.8877 955.9463 1121.5244 955.9463 c
1111.4541 955.9463 l
1111.4541 941.874 L
f
*U
*u
0 D
1142.7139 921.2217 m
1142.7139 960.5928 L
1147.9238 960.5928 L
1147.9238 925.8682 L
1167.3135 925.8682 L
1167.3135 921.2217 l
1142.7139 921.2217 L
f
*U
*u
1173.625 921.2217 m
1173.625 960.5928 L
1202.0918 960.5928 L
1202.0918 955.9463 L
1178.835 955.9463 L
1178.835 943.8877 L
1200.6143 943.8877 L
1200.6143 939.2686 L
1178.835 939.2686 L
1178.835 925.8682 L
1203.0049 925.8682 L
1203.0049 921.2217 l
1173.625 921.2217 L
f
*U
*u
1208.4287 933.8711 m
1213.3428 934.3008 L
1213.5762 932.3311 1214.1172 930.7148 1214.9678 929.4531 c
1215.8184 928.1904 1217.1387 927.1699 1218.9287 926.3916 c
1220.7197 925.6123 1222.7334 925.2236 1224.9717 925.2236 c
1226.959 925.2236 1228.7139 925.5186 1230.2354 926.1104 c
1231.7568 926.7002 1232.8896 927.5107 1233.6328 928.54 c
1234.375 929.5693 1234.7471 930.6924 1234.7471 931.9102 c
1234.7471 933.1465 1234.3887 934.2246 1233.6729 935.1475 c
1232.957 936.0684 1231.7754 936.8428 1230.1279 937.4697 c
1229.0713 937.8809 1226.7354 938.5215 1223.1182 939.3896 c
1219.502 940.2588 1216.9688 941.0771 1215.5186 941.8467 c
1213.6387 942.8311 1212.2373 944.0537 1211.3154 945.5127 c
1210.3936 946.9717 1209.9326 948.6055 1209.9326 950.4141 c
1209.9326 952.4014 1210.4971 954.2588 1211.624 955.9863 c
1212.7529 957.7139 1214.3994 959.0254 1216.5654 959.9209 c
1218.7324 960.8154 1221.1406 961.2637 1223.79 961.2637 c
1226.708 961.2637 1229.2822 960.7939 1231.5107 959.8545 c
1233.7402 958.9131 1235.4541 957.5303 1236.6533 955.7041 c
1237.8535 953.8779 1238.498 951.8105 1238.5869 949.501 c
1233.5928 949.125 L
1233.3232 951.6133 1232.415 953.4932 1230.8662 954.7646 c
1229.3174 956.0352 1227.0303 956.6709 1224.0049 956.6709 c
1220.8535 956.6709 1218.5576 956.0938 1217.1162 954.9395 c
1215.6748 953.7842 1214.9541 952.3916 1214.9541 950.7627 c
1214.9541 949.3486 1215.4648 948.1846 1216.4854 947.2725 c
1217.4883 946.3584 1220.1064 945.4229 1224.3408 944.4648 c
1228.5742 943.5078 1231.4795 942.6699 1233.0557 941.9541 c
1235.3467 940.8975 1237.0391 939.5596 1238.1309 937.9395 c
1239.2227 936.3193 1239.7686 934.4521 1239.7686 932.3398 c
1239.7686 930.2451 1239.1689 928.2725 1237.9697 926.4189 c
1236.7705 924.5654 1235.0469 923.124 1232.7998 922.0947 c
1230.5527 921.0654 1228.0244 920.5508 1225.2139 920.5508 c
1221.6504 920.5508 1218.665 921.0703 1216.2568 922.1084 c
1213.8486 923.1465 1211.96 924.709 1210.5908 926.7939 c
1209.2207 928.8799 1208.5 931.2393 1208.4287 933.8711 c
f
*U
*u
1285.6123 925.8682 m
1285.6123 921.2217 L
1259.5889 921.2217 L
1259.5527 922.3857 1259.7412 923.5049 1260.1533 924.5791 c
1260.8154 926.3516 1261.876 928.0967 1263.335 929.8154 c
1264.7939 931.5342 1266.9023 933.5225 1269.6592 935.7773 c
1273.9385 939.2861 1276.8301 942.0664 1278.334 944.1162 c
1279.8379 946.167 1280.5898 948.1045 1280.5898 949.9307 c
1280.5898 951.8467 1279.9053 953.4619 1278.5352 954.7773 c
1277.166 956.0938 1275.3799 956.752 1273.1777 956.752 c
1270.8506 956.752 1268.9883 956.0537 1267.5918 954.6572 c
1266.1953 953.2607 1265.4883 951.3271 1265.4697 948.8564 c
1260.502 949.3662 L
1260.8418 953.0732 1262.1221 955.8975 1264.3428 957.8389 c
1266.5625 959.7822 1269.543 960.7529 1273.2852 960.7529 c
1277.0625 960.7529 1280.0527 959.7061 1282.2549 957.6113 c
1284.457 955.5166 1285.5576 952.9199 1285.5576 949.8232 c
1285.5576 948.2471 1285.2354 946.6982 1284.5908 945.1768 c
1283.9463 943.6553 1282.877 942.0527 1281.3818 940.3701 c
1279.8867 938.6875 1277.4033 936.377 1273.9297 933.4414 c
1271.0293 931.0059 1269.167 929.3555 1268.3438 928.4863 c
1267.5205 927.6182 1266.8398 926.7451 1266.3027 925.8682 c
1285.6123 925.8682 L
f
*U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
